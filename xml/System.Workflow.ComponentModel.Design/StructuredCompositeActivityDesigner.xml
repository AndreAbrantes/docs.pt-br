<Type Name="StructuredCompositeActivityDesigner" FullName="System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner">
  <TypeSignature Language="C#" Value="public abstract class StructuredCompositeActivityDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StructuredCompositeActivityDesigner extends System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos e propriedades comuns para designers de atividade composta que contêm layouts estruturados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 O <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner> é a classe base para todos os designers que contêm os designers de filho e os designers de filho são conectados entre si usando linhas renderizadas na superfície de design, chamada de conectores. A classe é fornecida para que os desenvolvedores de designer de atividade podem fornecer um número de atividade de tipos de layout do designer, em vez de que está sendo vinculada ao layout fornecido no <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StructuredCompositeActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe derivada, inicializa uma nova instância do <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveView">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.DesignerView ActiveView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.DesignerView ActiveView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ActiveView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> que contém informações sobre o modo de exibição de designer atual exibido pelo <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> que contém informações sobre o modo de exibição atual exibido pelo <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ActiveView%2A>contém a ID de exibição e qualquer texto, imagens, designers de atividade e dados de usuário associados à exibição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsertActivities">
      <MemberSignature Language="C#" Value="public override bool CanInsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanInsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation">O <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que contém o local da tela em que a tentativa de inserir as atividades.</param>
        <param name="activitiesToInsert">O <see cref="T:System.Workflow.ComponentModel.Activity" /> coleção somente leitura que contém as atividades para adicionar.</param>
        <summary>Retorna um valor que indica se as atividades especificadas podem ser adicionadas para o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> no local especificado na superfície de design de fluxo de trabalho.</summary>
        <returns>
          <see langword="true" />Se as atividades especificadas podem ser inseridas no local especificado na superfície de design de fluxo de trabalho; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como bloquear uma <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner> por não permitir a inserção de filho atividades.  
  
 [!code-csharp[WF_Samples#25](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#25)]
 [!code-vb[WF_Samples#25](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public override bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove">O <see cref="T:System.Workflow.ComponentModel.Activity" /> coleção somente leitura que contém as atividades para remover.</param>
        <summary>Retorna um valor que indica se as atividades especificadas podem ser removidas do <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <returns>
          <see langword="true" />Se as atividades especificadas podem ser removidas; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanRemoveActivities%2A> método para permitir a movimentação de atividades filho dentro do <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner>.  
  
 [!code-csharp[WF_Samples#27](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainedDesigners">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ContainedDesigners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção genérica de somente leitura que contém todos os designers de atividade que são filhos do <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> coleção somente leitura que contém os designers de filho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra a adição de uma nova ramificação de usando um designer com base no logoff de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> classe.  Se <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> retorna true, uma nova ramificação é criada usando o <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> método. Um <xref:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo> será criado como um parâmetro para o <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> método. Quando isso for concluído, o <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> método é usado para garantir que a ramificação recém-adicionado é exibida no designer de fluxo de trabalho, acessando um único objeto no <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ContainedDesigners%2A> coleção.  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDropTarget">
      <MemberSignature Language="C#" Value="protected virtual int CurrentDropTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDropTarget" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CurrentDropTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice do destino de soltar atual na matriz de destinos de soltar retornado por <see cref="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)" />.</summary>
        <value>Um inteiro que representa o índice do destino de soltar atual para o designer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawConnectors">
      <MemberSignature Language="C#" Value="protected void DrawConnectors (System.Drawing.Graphics graphics, System.Drawing.Pen pen, System.Drawing.Point[] points, System.Workflow.ComponentModel.Design.LineAnchor startCap, System.Workflow.ComponentModel.Design.LineAnchor endCap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DrawConnectors(class System.Drawing.Graphics graphics, class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, valuetype System.Workflow.ComponentModel.Design.LineAnchor startCap, valuetype System.Workflow.ComponentModel.Design.LineAnchor endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.DrawConnectors(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Point[],System.Workflow.ComponentModel.Design.LineAnchor,System.Workflow.ComponentModel.Design.LineAnchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="startCap" Type="System.Workflow.ComponentModel.Design.LineAnchor" />
        <Parameter Name="endCap" Type="System.Workflow.ComponentModel.Design.LineAnchor" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> na qual desenhar os conectores.</param>
        <param name="pen">O <see cref="T:System.Drawing.Pen" /> para desenhar os conectores.</param>
        <param name="points">O <see cref="T:System.Drawing.Point" /> matriz que contém os pontos de extremidade para cada um dos conectores para desenhar.</param>
        <param name="startCap">Um <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> que determina o gráfico para desenhar pontos de início do conector.</param>
        <param name="endCap">Um <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> que determina o gráfico para desenhar pontos de extremidade do conector.</param>
        <summary>Desenha todos os conectores para exibir o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conectores estão os links entre os designers separadas em uma superfície de design do fluxo de trabalho. Esses links aparecem como linhas na superfície de design e final de cada linha se conecta a um ponto visível sobre os designers de se conectar. Esses pontos são chamados de pontos de conexão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisibleContainedDesigner">
      <MemberSignature Language="C#" Value="public override void EnsureVisibleContainedDesigner (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnsureVisibleContainedDesigner(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> para o qual garantir visibilidade na superfície de design de fluxo de trabalho.</param>
        <summary>Garante que o designer de atividade especificada está visível na superfície de design de fluxo de trabalho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public override object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o primeiro objeto selecionável na ordem de navegação a <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Object" /> que é o primeiro objeto selecionável na ordem de navegação do designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.FirstSelectableObject%2A>Retorna o <xref:System.Workflow.ComponentModel.Activity> associados a <xref:System.Workflow.ComponentModel.Design.DesignerView.AssociatedDesigner%2A> propriedade que é exposta por meio de <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ActiveView%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDropTargets">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle[] GetDropTargets (System.Drawing.Point dropPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle[] GetDropTargets(valuetype System.Drawing.Point dropPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dropPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dropPoint">O <see cref="T:System.Drawing.Point" /> para consultar a superfície de design com.</param>
        <summary>Retorna uma matriz de locais de destino válido no <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> superfície.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> matriz que representa os locais de destino válido no <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> superfície.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerConnections">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetInnerConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetInnerConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">DesignerEdges ao longo do qual pesquisar os pontos de conexão.</param>
        <summary>Retorna uma coleção somente leitura de pontos que representam os pontos de conexão interna para o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <returns>Um <see cref="T:System.Drawing.Point" /> coleção genérica de somente leitura que contém os pontos de conexão interna para o designer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conectores estão os links entre os designers separadas em uma superfície de design do fluxo de trabalho. Esses links aparecem como linhas na superfície de design e final de cada linha se conecta a um ponto visível em cada designer se conecta. Esses pontos são chamados de pontos de conexão. Designers classes que herdam o <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner> classe pode conter outros designers, e <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetInnerConnections%2A> retorna uma coleção somente leitura de todos os pontos de conexão para os designers associados `edges` contidos a <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public override object GetNextSelectableObject (object current, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetNextSelectableObject(object current, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="current">O objeto atual a ordem da navegação.</param>
        <param name="direction">Um <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> que determina a ordem da navegação do designer.</param>
        <summary>Retorna o primeiro objeto selecionável que segue o objeto especificado na ordem de navegação atual <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <returns>O primeiro selecionável <see cref="T:System.Object" /> que segue o <paramref name="obj" /> parâmetro na ordem de navegação.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:System.Workflow.ComponentModel.Activity" /> com a qual inicializar o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</param>
        <summary>Inicializa o designer usando a atividade especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Initialize%2A>garante que o modo de exibição ativo carregado na superfície de design de fluxo de trabalho é um modo de exibição válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public override void InsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation">O <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que especifica o local para adicionar as atividades.</param>
        <param name="activitiesToInsert">O <see cref="T:System.Workflow.ComponentModel.Activity" /> coleção somente leitura que contém as atividades para adicionar ao <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</param>
        <summary>Adiciona as atividades especificadas para o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> no local especificado na superfície de design de fluxo de trabalho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public override object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o último objeto selecionável na ordem de navegação a <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <value>O <see cref="T:System.Object" /> que é o último objeto selecionável na ordem de navegação do designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner> é o designer de atividade do active <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LastSelectableObject%2A> retorna `null` (`Nothing` no Visual Basic). Se um designer de atividade filho é designer ativo, ele retorna o último objeto selecionável associado com o designer de filhos ativos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.IO.BinaryReader" /> usado para restaurar o estado do designer de exibição.</param>
        <summary>Carrega o estado de exibição da <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> de um fluxo binário.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações de tamanho mínimo para o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <value>O <see cref="T:System.Drawing.Size" /> que representa o menor tamanho possível para o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActivities">
      <MemberSignature Language="C#" Value="public override void MoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation">O <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que contém o local na superfície de design de fluxo de trabalho para mover as atividades.</param>
        <param name="activitiesToMove">O <see cref="T:System.Workflow.ComponentModel.Activity" /> coleção somente leitura para mover.</param>
        <summary>Move as atividades especificadas de um designer exibido no <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> para outro.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChanged">
      <MemberSignature Language="C#" Value="protected override void OnActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> que contém informações sobre a atividade alterada.</param>
        <summary>Notifica o designer quando a atividade associada a ele muda.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanging">
      <MemberSignature Language="C#" Value="protected override void OnContainedActivitiesChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContainedActivitiesChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs">O <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> que contém informações sobre as atividades que foram alteradas.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando mais de uma das atividades que ele contém foi alterado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected override void OnDragDrop (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragDrop(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que define os argumentos de evento da operação.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando uma operação de arrastar e soltar é concluída com os limites de sua superfície de design.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que define os argumentos de evento da operação.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando uma operação arrastar-soltar está em andamento e o cursor do mouse do usuário entra nos limites do designer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragLeave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando uma operação arrastar-soltar está em andamento e o cursor do mouse do usuário sai dos limites do designer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que define os argumentos de evento da operação.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando uma operação arrastar-soltar está em andamento e o cursor do mouse do usuário está dentro dos limites do designer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os argumentos de layout.</param>
        <summary>Executa tarefas de layout para posicionar indicações visuais e designers de filho no <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os argumentos de layout.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando o tamanho das indicações visuais sobre os designers exibido pelo <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> foram alterados.</summary>
        <returns>O <see cref="T:System.Drawing.Size" /> que representa o novo tamanho do <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> na superfície de design de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowSmartTagVerbs">
      <MemberSignature Language="C#" Value="protected override void OnShowSmartTagVerbs (System.Drawing.Point smartTagPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnShowSmartTagVerbs(valuetype System.Drawing.Point smartTagPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartTagPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="smartTagPoint">O <see cref="T:System.Drawing.Point" /> que representa o local na superfície de design de fluxo de trabalho para o qual mostrar <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> objetos.</param>
        <summary>Exibe os verbos do designer associados com uma marca inteligente em um local especificado na superfície de design de fluxo de trabalho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (System.Workflow.ComponentModel.Design.DesignerView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.Workflow.ComponentModel.Design.DesignerView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnViewChanged(System.Workflow.ComponentModel.Design.DesignerView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Workflow.ComponentModel.Design.DesignerView" />
      </Parameters>
      <Docs>
        <param name="view">O <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> que será definido.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> quando o designer atual exibir as alterações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.BinaryWriter" /> para que o estado atual do designer de exibição é armazenado.</param>
        <summary>Armazena o estado de exibição atual do <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> em um fluxo binário.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected override bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> exibe as marcas inteligentes.</summary>
        <value>
          <see langword="true" />Se o designer exibe as marcas inteligentes; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagVerbs">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SmartTagVerbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção somente leitura de designers ações que estão associados com as marcas inteligentes do Designer.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> coleção somente leitura que contém todas as ações associadas com as marcas inteligentes do Designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coleção é retornada somente se o <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner> hospeda vários modos de exibição. Use o <xref:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Views%2A> propriedade para determinar quantas exibe os hosts de designer atuais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Views">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerView&gt; Views { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.DesignerView&gt; Views" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Views" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção somente leitura de exibições do designer que atual <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> hosts.</summary>
        <value>O <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> coleção somente leitura que contém as exibições hospedadas pelo atual <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
