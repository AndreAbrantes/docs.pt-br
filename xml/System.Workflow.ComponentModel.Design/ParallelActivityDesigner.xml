<Type Name="ParallelActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ParallelActivityDesigner">
  <TypeSignature Language="C#" Value="public class ParallelActivityDesigner : System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelActivityDesigner extends System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos e propriedades para todos os designers de atividade que exibem layouts vertical paralelos em uma superfície de design do fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Um designer de atividade que exibe um layout vertical paralelo representa uma atividade na superfície de design de fluxo de trabalho que tem dois caminhos de código que pode seguir um fluxo de trabalho. Por exemplo, o designer usado para o <xref:System.Workflow.Activities.IfElseActivity> atividade exibe o <xref:System.Workflow.Activities.IfElseActivity> atividade no fluxo de trabalho superfície de design e tem um layout vertical paralelo. Cada ramificação do layout paralela representa visualmente uma <xref:System.Workflow.Activities.IfElseBranchActivity> atividades contidas o <xref:System.Workflow.Activities.IfElseActivity> atividade.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMoveActivities">
      <MemberSignature Language="C#" Value="public override bool CanMoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanMoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation">O <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que descreve o local para onde mover as atividades.</param>
        <param name="activitiesToMove">O <see cref="T:System.Workflow.ComponentModel.Activity" /> coleção somente leitura que contém as atividades para mover.</param>
        <summary>Retorna um valor que indica se atividades filho da atividade associada com o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> podem ser movidos.</summary>
        <returns>
          <see langword="true" />Se as atividades podem ser movidas da atividade pai; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanMoveActivities%2A> método para permitir a movimentação de atividades filho dentro do <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner>.  
  
 [!code-csharp[WF_Samples#26](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#26)]
 [!code-vb[WF_Samples#26](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public override bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove">A coleção de atividades para remover somente leitura.</param>
        <summary>Retorna um valor que indica se atividades filho da atividade associada a <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> pode ser excluído.</summary>
        <returns>
          <see langword="true" />Se as atividades podem ser excluídas da atividade pai; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanRemoveActivities%2A> método para permitir a movimentação de atividades filho dentro do <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner>.  
  
 [!code-csharp[WF_Samples#27](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public override object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o primeiro objeto selecionável na ordem de navegação a <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Object" /> que é o primeiro objeto selecionável na ordem de navegação do designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o designer <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> propriedade ou o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> está definida como `false`, <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.FirstSelectableObject%2A> retorna uma referência nula (`Nothing` no Visual Basic). Se o <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> propriedade count é maior que 0, <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.FirstSelectableObject%2A> retorna o <xref:System.Workflow.ComponentModel.Activity> associada com o designer de atividade primeiro na coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDropTargets">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle[] GetDropTargets (System.Drawing.Point dropPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle[] GetDropTargets(valuetype System.Drawing.Point dropPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetDropTargets(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dropPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dropPoint">O <see cref="T:System.Drawing.Point" /> que define as coordenadas x e y para o local de destino.</param>
        <summary>Matriz retorna dos retângulos que representam os locais de destino válido dentro do <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>O <see cref="T:System.Drawing.Rectangle" /> matriz que representa os locais de destino válido dentro do <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public override object GetNextSelectableObject (object obj, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetNextSelectableObject(object obj, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="obj">Atual <see cref="T:System.Object" /> na ordem de navegação.</param>
        <param name="direction">Um <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> valor de enumeração que determina a ordem da navegação do designer.</param>
        <summary>Retorna o primeiro objeto selecionável que segue o objeto especificado na ordem de navegação do atual <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>Um <see cref="T:System.Object" /> que segue o objeto especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public override object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o último objeto selecionável na ordem de navegação a <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>O <see cref="T:System.Object" /> que é o último objeto selecionável na ordem de navegação do designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o designer <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> ou <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> está definida como `false`, <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject%2A> retorna uma referência nula (`Nothing` no Visual Basic). Se <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> contém designers de atividade filho, <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject%2A> retorna o último objeto selecionável associado com o designer de atividade filho primeiro. Se o designer de atividade filho estiver recolhido, <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject%2A> retorna o <xref:System.Workflow.ComponentModel.Activity> associada com o designer de atividade primeiro no <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateNewBranch">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.CompositeActivity OnCreateNewBranch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.CompositeActivity OnCreateNewBranch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnCreateNewBranch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica que o usuário tiver criado uma nova atividade de ramificação na atividade associada com o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>O <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> que foi adicionado como o novo branch da atividade associada com o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os argumentos de layout.</param>
        <summary>Executa tarefas de layout para posicionar indicações visuais e designers de filho no <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os argumentos de layout.</param>
        <summary>Define o tamanho das indicações visuais sobre os designers de dentro do <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>O <see cref="T:System.Drawing.Size" /> que contém as novas configurações de tamanho para o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> que contém os argumentos de desenho.</param>
        <summary>Desenha a representação visual da atividade associada com o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> em tempo de design.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de verbos do designer deve ser associado a <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> que contém os verbos do designer para associar o <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.Verbs%2A> propriedade determina os comandos que são exibidos no <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> menu de contexto.  
  
 A coleção de verbo inclui qualquer verbos do designer <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> herda das classes designers aumenta.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como substituir o <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A> propriedade inserir ações verbo personalizado para um <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner>. O `CreateActivityVerbs` cria um novo <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> chamado `"Add New Parallel Branch"` e associa um manipulador de eventos chamado `OnAddParallelBranch`. Quando o verbo for clicado no designer de fluxo de trabalho, o manipulador de eventos é chamado.  
  
 [!code-csharp[WF_Samples#73](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
