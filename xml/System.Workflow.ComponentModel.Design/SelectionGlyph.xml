<Type Name="SelectionGlyph" FullName="System.Workflow.ComponentModel.Design.SelectionGlyph">
  <TypeSignature Language="C#" Value="public abstract class SelectionGlyph : System.Workflow.ComponentModel.Design.DesignerGlyph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SelectionGlyph extends System.Workflow.ComponentModel.Design.DesignerGlyph" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.SelectionGlyph" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.DesignerGlyph</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos e propriedades para glifo todas as classes que um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> é exibido quando ele é selecionado na superfície de design de fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Alguns glifos que são exibidos em um designer de atividade podem ser selecionados pelo usuário, enquanto outros não. Quando um usuário seleciona um glifo que pode ser selecionado, o glifo altera aparência na superfície de design de atividade. O <xref:System.Workflow.ComponentModel.Design.SelectionGlyph> classe é a classe base para todas as classes de glifo que alteram a aparência quando um usuário seleciona-o na superfície de design de atividade.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Ao herdar de <see cref="T:System.Workflow.ComponentModel.Design.SelectionGlyph" />, você deve substituir o membro a seguir: <see cref="P:System.Workflow.ComponentModel.Design.SelectionGlyph.IsPrimarySelection" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SelectionGlyph ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SelectionGlyph.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe derivada, inicializa uma nova instância do <see cref="T:System.Workflow.ComponentModel.Design.SelectionGlyph" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle GetBounds (System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Rectangle GetBounds(class System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="activated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> à qual o símbolo de seleção está associado.</param>
        <param name="activated">
          <see langword="true" />para indicar se o símbolo de seleção aparece na superfície do designer de atividade; Caso contrário, <see langword="false" />.</param>
        <summary>Retorna os limites para o símbolo de seleção especificado <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites do glifo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.SelectionGlyph.GetBounds%2A> retorna um retângulo um-e-meia o tamanho do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds%2A> de `designer`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGrabHandles">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle[] GetGrabHandles (System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle[] GetGrabHandles(class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetGrabHandles(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> à qual o símbolo de seleção está associado.</param>
        <summary>Retorna uma matriz de retângulos que representa o glifo selecionado pegar alças.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> matriz de captura manipula para exibir no glifo selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificadores de captura são as caixas pequenas na borda de um glifo selecionado que um usuário possa capturar e mover para arraste ou redimensione o glifo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimarySelection">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimarySelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimarySelection" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SelectionGlyph.IsPrimarySelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o símbolo de seleção é o principal de todos os glifos selecionados na superfície de design.</summary>
        <value>
          <see langword="true" />Se o símbolo de seleção é o principal glifo selecionado no designer de atividade; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Drawing.Graphics graphics, bool activated, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Drawing.Graphics graphics, bool activated, class System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SelectionGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="activated" Type="System.Boolean" />
        <Parameter Name="ambientTheme" Type="System.Workflow.ComponentModel.Design.AmbientTheme" />
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para executar tarefas de desenho e preenchimento.</param>
        <param name="activated">
          <see langword="true" />para indicar que o símbolo aparece na superfície de design; Caso contrário, <see langword="false" />.</param>
        <param name="ambientTheme">O <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> para usar para acessar configurações de propriedade de ambiente.</param>
        <param name="designer">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> do qual obter informações sobre ações do usuário.</param>
        <summary>Executa as tarefas necessárias para renderizar o glifo na superfície do designer de atividade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SelectionGlyph.OnPaint%2A>Desenha todos os elementos do glifo selecionado pelo usuário, incluindo as glifos captura alças.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public override int Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SelectionGlyph.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a prioridade de exibição do glifo no designer de atividade.</summary>
        <value>Um inteiro que representa a prioridade de exibição do glifo no designer de atividade.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As configurações de prioridade possíveis são definidas pela seguinte <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> campos:  
  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority>, <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority> e <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
