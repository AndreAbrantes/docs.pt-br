<Type Name="ActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ActivityDesigner">
  <TypeSignature Language="C#" Value="public class ActivityDesigner : IDisposable, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.IRootDesigner, System.Drawing.Design.IToolboxUser, System.Workflow.ComponentModel.Design.IPersistUIState, System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityDesigner extends System.Object implements class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.IRootDesigner, class System.Drawing.Design.IToolboxUser, class System.IDisposable, class System.Workflow.ComponentModel.Design.IPersistUIState, class System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IRootDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Drawing.Design.IToolboxUser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IPersistUIState</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IWorkflowRootDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Custom)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerTheme))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece uma classe base obrigatória para todas as atividades de componentes do designer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Todos os componentes de designer de atividade derivam <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>. O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> fornece um designer simple que permite ao usuário criar visualmente atividades no modo design.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>Fornece um mecanismo simples para as atividades para que eles podem participar de processamento do fluxo de trabalho na superfície de design.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>permite que o usuário personalize o layout e desenho associado à atividade.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>permite que o usuário estenda os metadados associados à atividade.  
  
   
  
## Examples  
 O exemplo a seguir mostra uma implementação completa de um <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> para uma atividade personalizada. O designer tem um sinalizador que pode ser alternado para permitir que a classe base <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> para controlar a pintura ou utilizar os vários métodos de <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> classe para desenhar a atividade.  
  
 [!code-csharp[WF_Samples#72](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#72)]
 [!code-vb[WF_Samples#72](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#72)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Windows.Forms.AccessibleObject" /> que aplicativos de acessibilidade usam para ajustar o interface do usuário do aplicativo para usuários com deficiências.</summary>
        <value>O <see cref="T:System.Windows.Forms.AccessibleObject" /> associado ao controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se nenhum <xref:System.Windows.Forms.AccessibleObject> atualmente atribuído ao controle, uma nova instância de um é criada.  
  
> [!NOTE]
>  Para obter ou definir o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject%2A> propriedade, você deve adicionar uma referência para o assembly de acessibilidade instalado com o .NET Framework.  
  
 Para obter mais informações sobre objetos acessíveis, consulte a seção de acessibilidade ativa da biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Activity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Activity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Workflow.ComponentModel.Activity" /> associada com o designer.</summary>
        <value>O <see cref="T:System.Workflow.ComponentModel.Activity" /> associado com o designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Workflow.ComponentModel.Activity> para acessar as propriedades e eventos da atividade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Drawing.Rectangle" /> que contém o valor para o retângulo delimitador do designer em coordenadas lógicas.</summary>
        <value>Um <see cref="T:System.Drawing.Rectangle" /> que inclui o designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o retângulo retornado pelo método limites para determinar a área entre o designer e a área de seleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como você pode usar o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds%2A> propriedade para determinar o retângulo delimitador novo para um glifo exibido em um <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 Este exemplo de código é parte da amostra do SDK do Monitor de fluxo de trabalho do arquivo DesignerGlyphProvider.cs. Para obter mais informações, consulte [o Monitor de fluxo de trabalho](http://msdn.microsoft.com/en-us/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner">O <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> que potencialmente pode ser definido como pai.</param>
        <summary>Retorna um valor que indica se um <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> pode ser definido como o pai da atividade associada com o designer.</summary>
        <returns>
          <see langword="true" />Se um <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> pode ser definido como o pai da atividade associada com o designer; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil para testar se um designer pode ter um determinado <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 Esse método é chamado quando um usuário inicia uma operação de inserção, como arrastar e soltar ou colar.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como garantir que uma atividade personalizada é pai de tipos de atividade específica. Nesse caso, a atividade personalizada só pode ser pai de um `ParallelIfActivity`.  
  
 [!code-csharp[WF_Samples#23](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#23)]
 [!code-vb[WF_Samples#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnect">
      <MemberSignature Language="C#" Value="protected virtual bool CanConnect (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanConnect(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">O <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> para verificar no designer de atividade atual.</param>
        <param name="target">O <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> para verificar o designer de atividade de destino.</param>
        <summary>Retorna um valor que indica se uma conexão pode ser criada entre o ponto de conexão especificada no designer de atividade atual e o ponto de conexão especificado em um designer de atividade de destino.</summary>
        <returns>
          <see langword="true" />para indicar que uma conexão pode ser criada entre a origem e de destino; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect%2A> sempre retorna `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.WorkflowView CreateView (System.ComponentModel.Design.ViewTechnology viewTechnology);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.WorkflowView CreateView(valuetype System.ComponentModel.Design.ViewTechnology viewTechnology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewTechnology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="viewTechnology">ViewTechnology usar para criar o modo de exibição do fluxo de trabalho.</param>
        <summary>Cria um modo de exibição do fluxo de trabalho para o designer de atividade atual usando o ViewTechnology especificado.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> que contém o designer de atividade atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView%2A> exibe o layout de tempo de design padrão para a atividade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerActions">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a matriz de ações associadas a erros de configuração.</summary>
        <value>Uma matriz de somente leitura de <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna uma matriz de ações associadas a erros de configuração de somente leitura. Essa lista contém todos os erros de validação e de configuração para a atividade que pode ser apresentada ao usuário final ou por meio de programação usada pelo sistema que hospeda o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tema atual do designer para o designer de atividade.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> que contém as configurações de tema para designer de atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />Se o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> está sendo descartado; <see langword="false" /> se o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> está sendo finalizada.</param>
        <summary>Libera os recursos usados pelo <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="protected virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a ação de interface do usuário padrão associada com o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para executar a ação de interface do usuário padrão associada com o designer. Ações de interface do usuário padrão podem incluir emitindo o método associado com o evento padrão no arquivo code-beside quando um usuário clicar duas vezes a superfície do designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualResizing">
      <MemberSignature Language="C#" Value="protected virtual bool EnableVisualResizing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualResizing" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o designer de atividade pode ser redimensionado em um designer de formulário livre.</summary>
        <value>
          <see langword="true" />Se o designer de atividade pode ser redimensionado um <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing%2A> sempre retorna `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desloca a área visível da tela para garantir que o designer especificado está visível.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para mover a área visível da superfície do designer para mostrar o designer de interesse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, permite que um objeto limpar todos os recursos de forma determinista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método limpa recursos chamando <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A>(`false`). Substituir <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A> para personalizar a limpeza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">O <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> ao longo do qual obter os pontos de conexão.</param>
        <summary>Retorna uma coleção somente leitura de pontos de conexão para o designer de atividade ao longo especificado <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> coleção genérica de somente leitura que é usada como os pontos em que o designer de atividade pode se conectar a outros designers de atividade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos os pontos de conexão estão em coordenadas lógicas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnections">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">O <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> na qual deseja consultar os pontos de.</param>
        <summary>Retorna uma coleção de pontos que o designer usa para conexões somente leitura.</summary>
        <returns>Uma ponto de coleção somente leitura que contém as conexões a ser usado para o designer de atividade.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetPreviewImage (System.Drawing.Graphics compatibleGraphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetPreviewImage(class System.Drawing.Graphics compatibleGraphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibleGraphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="compatibleGraphics">O <see cref="T:System.Drawing.Graphics" /> objeto usado para desenhar a imagem.</param>
        <summary>Obtém a imagem do designer de atividade no especificado <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Um <see cref="T:System.Drawing.Image" /> objeto que contém um bitmap usado como uma imagem de visualização nas operações de arrastar e soltar e no <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> no painel de visualização.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootDesigner">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Um objeto que implementa o <see cref="T:System.IServiceProvider" />.</param>
        <summary>Retorna o designer associado à superfície de design do fluxo de trabalho.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> que é o <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> do host do designer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">O tipo de serviço a ser solicitado.</param>
        <summary>Tenta recuperar o tipo de serviço especificado do site de modo de design para a atividade associada com o designer.</summary>
        <returns>Um objeto que implementa o serviço solicitado ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se o serviço não pode ser resolvido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de glifos com a qual Adornar o designer.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> que contém os glifos para exibir no designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs%2A> para acessar uma lista somente leitura de glifos de designer. Esses glifos podem ser usados para representar graficamente os componentes do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> em um ambiente gráfico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Um <see cref="T:System.Drawing.Point" /> que representa um único x e a coordenada y.</param>
        <summary>Obtém informações sobre o ActivityDesigner em um ponto especificado na tela.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que contém informações sobre o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> em um momento específico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.HitTestInfo>, junto com o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> método do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> controle é usado para determinar qual parte de um <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> controle o usuário clicou. O <xref:System.Workflow.ComponentModel.Design.HitTestInfo> contém lógicas coordenadas do ponto no <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> onde o mouse foi clicado.  
  
 O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> método recebe um <xref:System.Drawing.Point> que contém um x e y de coordenadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Drawing.Image" /> associada com o designer.</summary>
        <value>O <see cref="T:System.Drawing.Image" /> associado com o designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A> está definida como o <xref:System.Drawing.Image> para exibir. Você pode fazer isso em tempo de design ou em tempo de execução.  
  
   
  
## Examples  
 O exemplo a seguir demonstra o carregamento de um <xref:System.Drawing.Bitmap> objeto a partir de um recurso inserido. Nesse caso, o `ToolboxImage` é a mesma imagem que é usado quando a base de <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> classe desenha personalizado <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor para os limites da imagem associada com o designer em coordenadas lógicas do delimitadores.</summary>
        <value>Um <see cref="T:System.Drawing.Rectangle" /> imagem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> para recuperar as coordenadas para o retângulo que contém a imagem associada com o designer. Você pode usar essas coordenadas para desenhar conectores ou sobreposição de elementos gráficos.  
  
   
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> propriedade. Neste exemplo, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> é calculado usando os limites do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:System.Workflow.ComponentModel.Activity" /> com que o designer deve ser inicializado.</param>
        <summary>Inicializa o designer com associado <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicializar carrega o designer com a atividade especificada. O designer carrega o serviço de atividade, atualiza os verbos associados à atividade e atribui o texto padrão e a imagem para o designer.  
  
   
  
## Examples  
 O exemplo a seguir mostra como substituir a implementação da classe base do método Initialize. O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize%2A> método neste exemplo está carregando um <xref:System.Drawing.Bitmap> objeto a partir de um recurso inserido. O `ToolboxImage` recurso é o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A> que é usado quando a base de <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> classe desenha personalizado <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalida o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use Invalidate para fazer com que o designer ser pintada novamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalida o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use Invalidate para fazer com que o designer para ser pintada novamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Um <see cref="T:System.Drawing.Rectangle" /> que especificam a área do fluxo de trabalho para invalidar.</param>
        <summary>Invalida o retângulo especificado no designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use Invalidate para fazer com que o retângulo especificado pelo designer para ser pintada novamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o designer de atividade que invoca a atividade associada com o designer de atividade atual.</summary>
        <value>O <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> para invocar o designer de atividade atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner%2A> obter operação retorna uma referência nula (`Nothing` no Visual Basic) e a operação de definição lança um <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi tentada uma operação definida em <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommentedActivity">
      <MemberSignature Language="C#" Value="public static bool IsCommentedActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCommentedActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:System.Workflow.ComponentModel.Activity" /> no designer de atividade atual.</param>
        <summary>Retorna um valor que indica se a atividade atual do designer é comentada ou está dentro de uma atividade comentada.</summary>
        <returns>
          <see langword="true" />Se a atividade é comentada ou está dentro de uma atividade comentada; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a atividade associada com o designer pode ser modificada.</summary>
        <value>
          <see langword="true" />Se a atividade associada com o designer pode ser modificada; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked%2A>Determina se uma atividade pode ser modificada. Isso afeta as operações de arrastar, as alterações nas propriedades e altera a posição da atividade na janela do designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimarySelection">
      <MemberSignature Language="C#" Value="public bool IsPrimarySelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimarySelection" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a atividade associada com o designer é a seleção principal.</summary>
        <value>
          <see langword="true" />Se a atividade associada com o designer é a seleção principal; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection%2A> para afetar o realce ou atualizar folhas de propriedade em sua representação gráfica do fluxo de trabalho. IsPrimarySelection é útil quando várias atividades são selecionadas como IsPrimarySelection indicará o ponto de partida de uma seleção múltipla.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o designer é um designer raiz.</summary>
        <value>
          <see langword="true" />Se o designer é um designer raiz. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O designer raiz não terá nenhum designers de seu pai. O designer raiz atua como o designer do fluxo de trabalho completo como todos os componentes de fluxo de trabalho será filhos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a atividade associada com o designer está selecionada.</summary>
        <value>
          <see langword="true" />Se a atividade associada com o designer está selecionado. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected%2A> propriedade para operações como Recortar e colar ou atualizar as propriedades de uma atividade quando forem feitas alterações em uma janela de propriedade, por exemplo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedActivityType">
      <MemberSignature Language="C#" Value="protected virtual bool IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">O tipo da atividade que tinha suporte.</param>
        <summary>Retorna um valor que indica se o tipo de atividade especificada é suportado se o designer de atividade é um designer raiz.</summary>
        <returns>
          <see langword="true" />Se o <paramref name="activityType" /> com suporte; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType%2A>é chamado apenas se o designer de atividade é um designer raiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a atividade associada com o designer está visível no fluxo de trabalho.</summary>
        <value>
          <see langword="true" />Se a atividade associada com o designer estiver visível no fluxo de trabalho; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> para determinar se uma atividade está visível no designer. Para grandes fluxos de trabalho você pode fornecer um mecanismo de pesquisa e localizar, selecionar e mover para a área visível uma atividade no momento não é visível encontrada pelo usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.IO.BinaryReader" /> usados para restaurar o estado do designer.</param>
        <summary>Carrega o estado de exibição do designer de um fluxo binário.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o local do designer em coordenadas lógicas.</summary>
        <value>O local do designer em coordenadas lógicas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Location%2A> propriedade para posicionar o designer na superfície de design em tempo de design ou tempo de execução.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção somente leitura de filtros de mensagem que estão associados com o designer de atividade.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> coleção somente leitura que inclui todos os filtros de mensagem padrão para associar com o designer de atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tamanho mínimo para o designer de atividade.</summary>
        <value>O tamanho mínimo do designer de atividade.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize%2A>é determinado pelas configurações de tamanho acessíveis por meio de <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando a atividade está associada a alterações.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e`contém dados sobre o que as alterações foram feitas para o <xref:System.Workflow.ComponentModel.Activity>. Você pode usar esse método para atualizar o estado do designer e a interface do usuário exibida no designer de fluxo de trabalho quando um usuário faz alterações em uma atividade em tempo de design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> que contém os dados do evento.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando um usuário inicia redimensionar visualmente o designer de atividade quando o designer está em um <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing%2A> para executar qualquer processamento de tempo de design do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> quando um usuário inicia o redimensionamento de designer de atividade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnConnected (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnected(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">A fonte ConnectionPoint no designer de atividade atual.</param>
        <param name="target">O destino ConnectionPoint no designer de atividade para se conectar ao.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando uma conexão é estabelecida entre dois pontos de conexão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected%2A>não tem nenhum comportamento padrão. Você deve substituir esse método em uma classe que deriva de <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> para fornecer processamento quando uma conexão é feita entre dois designers.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando a operação de arrastar e soltar é concluída dentro dos limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre quando uma operação arrastar-soltar termina dentro dos limites do designers.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando a operação de arrastar-soltar está em andamento e o ponteiro entra nos limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> evento é gerado quando o mouse é arrastado para o designer.  
  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
 As alterações no estado de comentário do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, ver comentários sobre os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ocorre quando a operação de arrastar-soltar está em andamento e o ponteiro sai dos limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado quando o usuário arrasta o ponteiro fora do designer ou o usuário cancela a operação de arrastar e soltar atual.  
  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
 As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando a operação de arrastar-soltar está em andamento e o ponteiro está dentro dos limites do designers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado quando o usuário arrasta o ponteiro sobre do designer.  
  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnEndResizing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndResizing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando um usuário for concluído visualmente redimensionando o designer de atividade quando o designer está em um <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteDesignerAction">
      <MemberSignature Language="C#" Value="protected virtual void OnExecuteDesignerAction (System.Workflow.ComponentModel.Design.DesignerAction designerAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnExecuteDesignerAction(class System.Workflow.ComponentModel.Design.DesignerAction designerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerAction" Type="System.Workflow.ComponentModel.Design.DesignerAction" />
      </Parameters>
      <Docs>
        <param name="designerAction">O <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> associado ao erro de configuração.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando o usuário clica nos erros de configuração associados com o designer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designerAction" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que contém os dados do evento.</param>
        <summary>Atualiza as indicações visuais para comentários fornecidos para o usuário ao executar uma operação de arrastar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando uma tecla é pressionada quando o designer tem o foco do teclado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando uma tecla é liberada quando o designer tem o foco do teclado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os dados do evento.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando o usuário reposiciona seus visuais ou designers de atividade filho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve substituir este método para executar qualquer processamento de layout necessário quando o usuário reposiciona os itens na superfície do designer de atividade em tempo de design.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contém os dados do evento.</param>
        <summary>Retorna o tamanho do filho ou indicações visuais designers de atividade sobre o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>As novas configurações de tamanho para os designers de atividade filho ou visuais.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize%2A> método. Neste exemplo, o tamanho do `Activity` permanece estático com uma altura e largura de 64.  
  
 [!code-csharp[WF_Samples#77](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#77)]
 [!code-vb[WF_Samples#77](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ocorre quando a captura do mouse é alterado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseCaptureChanged ocorre quando o usuário seleciona um número de objetos no designer, arrastando o ponteiro do mouse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o botão do mouse é clicado várias vezes no designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseDoubleClick ocorre quando o botão do mouse é clicado duas vezes em sucessão acima de um designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o botão do mouse é pressionado quando o ponteiro está em limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (System.Drawing.Point initialDragPoint, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(valuetype System.Drawing.Point initialDragPoint, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialDragPoint" Type="System.Drawing.Point" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="initialDragPoint">Um <see cref="T:System.Drawing.Point" /> que representa um único x e a coordenada y.</param>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o usuário começa a arrastar o mouse no designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ocorre quando o usuário para de arrastar o mouse sobre o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre em cada movimento do mouse, como o usuário arrasta o ponteiro sobre o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o mouse entra primeiro os limites do designers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o ponteiro está em limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ocorre quando o ponteiro sai dos limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o ponteiro de movimentação em limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o botão do mouse é liberado quando o ponteiro está em limites de designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> que contém os dados do evento.</param>
        <summary>Desenha a representação visual da atividade em tempo de design.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra um personalizado <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> que delega a responsabilidade de pintura para a classe base ou desenha com base em um valor booliano. Se `useBasePaint` é false, a atividade personalizada usando os vários métodos de desenhará o <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> classe.  
  
 [!code-csharp[WF_Samples#78](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#78)]
 [!code-vb[WF_Samples#78](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contém uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnProcessMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnProcessMessage (System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProcessMessage(valuetype System.Windows.Forms.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="message">Win32 <see cref="T:System.Windows.Forms.Message" /> que contém os dados de evento.</param>
        <summary>Permite que o designer processar mensagens de Win32 brutas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contém os dados do evento.</param>
        <summary>Controla se a operação de arrastar deve continuar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.  
  
 Se o designer é um destino válido, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
-   As alterações no estado de botão do mouse, posição do ponteiro e estado de teclado são rastreadas.  
  
-   Se o usuário sai dos limites do designers, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
-   Se o mouse entra outro designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para este designer é gerado.  
  
-   Se o mouse se move, mas permanece dentro do mesmo designer, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado.  
  
-   Se houver uma alteração no estado de botão do teclado ou mouse, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da propriedade Action do evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Se o valor for `DragAction.Continue`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> é gerado para continuar a operação e o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido. Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects> enumeração.  
  
> [!NOTE]
>  O <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> eventos são combinados para que, como o mouse se move entre o local de destino, o usuário é fornecido com a maioria dos até comentários de data na posição do mouse.  
  
 Se o valor for `DragAction.Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem pode executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.  
  
 Se o valor for `DragAction.Cancel`, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> é gerado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> que contém os dados do evento.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando um usuário é visualmente redimensioná-lo em tempo de design. O método é chamado somente se o designer de atividade é um filho de um <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e`Especifica o <xref:System.Workflow.ComponentModel.Design.DesignerEdges> e novos limites que está sendo usados para o redimensionado <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollBar sender, int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollBar sender, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Windows.Forms.ScrollBar" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">O <see cref="T:System.Windows.Forms.ScrollBar" /> no qual o usuário alterou a posição.</param>
        <param name="value">O novo valor de posição de rolagem.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> quando um usuário altera a posição de rolagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll%2A>não fornece nenhum comportamento padrão. Você deve substituí-la em uma classe que deriva de <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> para fornecer lógica de processamento quando uma posição de rolagem é alterada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowSmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnShowSmartTagVerbs (System.Drawing.Point smartTagPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowSmartTagVerbs(valuetype System.Drawing.Point smartTagPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartTagPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="smartTagPoint">Um <see cref="T:System.Drawing.Point" /> que designa o local para mostrar a marca inteligente.</param>
        <summary>Exibe os verbos do designer associados com uma marca inteligente no ponto especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" />para indicar que a marca inteligente deve ser exibida; <see langword="false" /> para indicar que a marca inteligente deve ser ocultada.</param>
        <summary>Notifica o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> se uma marca inteligente deve ser exibida ou ocultada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="newTheme">Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> que contém os dados do evento.</param>
        <summary>Notifica o designer que o tema associado foi alterado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o designer do pai do designer existente.</summary>
        <value>O designer do pai do designer existente. Se o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> é um designer raiz o <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> retornado será o <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; caso contrário, o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> será o pai <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner%2A> mover a árvore de aninhados <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> objetos ou para localizar o designer raiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentView">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Design.WorkflowView ParentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowView ParentView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o modo de exibição do fluxo de trabalho que contém o designer de atividade atual.</summary>
        <value>O <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> que contém o designer de atividade atual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="protected void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atualiza o layout do designer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToLogical (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToLogical(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Um <see cref="T:System.Drawing.Point" /> que contém as coordenadas para transformar.</param>
        <summary>Transforma um ponto de sistema de coordenadas de tela para o sistema de coordenadas de designer de atividade.</summary>
        <returns>Um <see cref="T:System.Drawing.Point" /> que contém o transformados x e y coordenadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToScreen (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Um <see cref="T:System.Drawing.Point" /> que contém as coordenadas para transformar.</param>
        <summary>Transforma um ponto do sistema de coordenadas de designer de atividade para o sistema de coordenadas de tela.</summary>
        <returns>Um <see cref="T:System.Drawing.Point" /> que contém o transformados x e y coordenadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">O <see cref="T:System.Collections.IDictionary" /> que contém os valores de identificação de tipo dos atributos.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer alterar ou remover itens do conjunto de atributos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes da classe de evento.</param>
        <summary>Quando substituído em uma classe derivada, permite que o designer alterar ou remover itens do conjunto de eventos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes de propriedade da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer alterar ou remover itens do conjunto de propriedades que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">O <see cref="T:System.Collections.IDictionary" /> que contém os valores de identificação de tipo dos atributos.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de atributos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes da classe de evento.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de eventos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes de propriedade da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de propriedades que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Um <see cref="T:System.Drawing.Rectangle" /> que descreve as coordenadas para transformar.</param>
        <summary>Transforma um retângulo do sistema de coordenadas de tela para o sistema de coordenadas de designer de atividade.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> que descreve as coordenadas transformadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Um <see cref="T:System.Drawing.Rectangle" /> que descreve as coordenadas para transformar.</param>
        <summary>Transforma um retângulo do sistema de coordenadas de designer de atividade para o sistema de coordenadas de tela.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> que descreve as coordenadas transformadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerActions">
      <MemberSignature Language="C#" Value="protected virtual void RefreshDesignerActions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RefreshDesignerActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atualiza os erros de configuração associados com o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ações de designer representam os erros de configuração possíveis associados a um designer. Chamando <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions%2A> atualiza esses erros com alterações recentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerVerbs">
      <MemberSignature Language="C#" Value="protected void RefreshDesignerVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RefreshDesignerVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atualiza os verbos do designer de atividade associados com o designer chamando o manipulador de status.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verbos do Designer são mostrados em barras de menus e menus de contexto. Chamando <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs%2A> atualizará os menus para mostrar alterações recentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.BinaryWriter" /> em que o estado de exibição é armazenado.</param>
        <summary>Armazena o estado de exibição do designer em um fluxo binário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O estado de exibição é o acúmulo dos valores de propriedades do designer. Quando o estado de exibição é salvo em um fluxo, as configurações e valores de designer podem ser restauradas usando <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exibe a dica de informações especificado para o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> usa o <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip%2A?displayProperty=nameWithType> lógica para exibir dicas de informações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="infoTip">O texto para exibir o InfoTip.</param>
        <summary>Mostra a dica de informações especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> para mostrar um retângulo do texto que pode ser usado para exibir informações estendidas sobre o designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string title, string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string title, string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">Uma cadeia de caracteres que contém o título da dica de informações.</param>
        <param name="infoTip">Uma cadeia de caracteres que contém o texto de dica de informações para exibir.</param>
        <summary>Exibe a dica de informações para o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> com o título especificado e o texto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceTip">
      <MemberSignature Language="C#" Value="protected void ShowInPlaceTip (string infoTip, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInPlaceTip(string infoTip, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="infoTip">Uma cadeia de caracteres que contém a dica de ferramenta a ser exibida.</param>
        <param name="rectangle">Um <see cref="T:System.Drawing.Rectangle" /> que define o local no qual exibir a dica de ferramenta.</param>
        <summary>Exibe a dica de ferramenta especificado no local especificado do retângulo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected virtual bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a atividade deve mostrar uma marca inteligente.</summary>
        <value>
          <see langword="true" />Se a atividade deve mostrar um SmartTag; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> para determinar se deve mostrar uma marca inteligente quando uma atividade tem o foco no designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho do <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <value>Um <see cref="T:System.Drawing.Size" /> que representa a área do <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use tamanho para ajustar a altura e largura do designer de atividade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o retângulo onde a marca inteligente deve ser exibida.</summary>
        <value>O retângulo onde a marca inteligente deve ser exibida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use junto com <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> e <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> para exibir uma marca inteligente de ações de designer disponíveis no local especificado por <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção somente leitura de ações de designer para associar uma marca inteligente no designer de atividade.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> coleção somente leitura para associar a marca inteligente do designer de atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Component">
      <MemberSignature Language="C#" Value="System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o componente base ao qual o designer de atividade está associado.</summary>
        <value>O <see cref="T:System.ComponentModel.IComponent" /> à qual o designer de atividade está associado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IDesigner%23Component>representa a atividade que projeta o designer de atividade na superfície de design de fluxo de trabalho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <MemberSignature Language="C#" Value="void IDesigner.DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a ação padrão associada com o designer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction%2A>faz com que a ação padrão associada com o designer para ser executado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Initialize">
      <MemberSignature Language="C#" Value="void IDesigner.Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">IComponent para inicializar o designer de com.</param>
        <summary>Inicializa o designer de atividade associada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Verbs">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os verbos de tempo de design associados com o designer de atividade.</summary>
        <value>Os verbos de tempo de design associados com o designer de atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">O <see cref="T:System.Collections.IDictionary" /> que contém o TypeIDs dos atributos da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer alterar ou remover itens do conjunto de atributos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes da classe de evento.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer alterar ou remover itens do conjunto de eventos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes de propriedade da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer alterar ou remover itens do conjunto de propriedades que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">O <see cref="T:System.Collections.IDictionary" /> que contém o TypeIDs dos atributos da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de atributos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes da classe de evento.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de eventos que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">O <see cref="T:System.Collections.IDictionary" /> que contém os nomes de propriedade da classe.</param>
        <summary>Quando substituído em uma classe derivada, permite que um designer adicionar itens ao conjunto de propriedades que expõe por meio de um TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.GetView">
      <MemberSignature Language="C#" Value="object IRootDesigner.GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.IRootDesigner.GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">Um <see cref="T:System.ComponentModel.Design.ViewTechnology" /> para o qual retornar o objeto de exibição.</param>
        <summary>Retorna um objeto de exibição para a tecnologia de exibição especificado.</summary>
        <returns>Um objeto que representa o modo de exibição para este designer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> é convertido em um <xref:System.ComponentModel.Design.IRootDesigner> interface.  
  
 Para obter mais informações, consulte <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a matriz de tecnologias que o designer de atividade pode dar suporte para a exibição.</summary>
        <value>Uma matriz de suporte <see cref="T:System.ComponentModel.Design.ViewTechnology" /> objetos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que substituída em uma classe derivada, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IRootDesigner%23SupportedTechnologies> retorna uma matriz de membro único que contém <xref:System.ComponentModel.Design.ViewTechnology?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.GetToolSupported">
      <MemberSignature Language="C#" Value="bool IToolboxUser.GetToolSupported (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Drawing.Design.IToolboxUser.GetToolSupported(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> para testar o suporte.</param>
        <summary>Determina se o item especificado da caixa de ferramentas é suportado pelo designer de atividade atual.</summary>
        <returns>
          <see langword="true" />Se a ferramenta é compatível com a caixa de ferramentas e pode ser habilitada; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.ToolPicked">
      <MemberSignature Language="C#" Value="void IToolboxUser.ToolPicked (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Drawing.Design.IToolboxUser.ToolPicked(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser selecionado.</param>
        <summary>Seleciona o item especificado da caixa de ferramentas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">O <see cref="T:System.IO.BinaryReader" /> para carregar o estado de exibição do.</param>
        <summary>Restaura o estado de exibição de um fluxo binário.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.IO.BinaryWriter" /> para salvar o estado de exibição.</param>
        <summary>Salva o estado de exibição em um fluxo binário.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> que solicitou o designer de atividade de ser inicializado.</summary>
        <value>O <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> que solicitou o designer de atividade de ser inicializado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType">
      <MemberSignature Language="C#" Value="bool IWorkflowRootDesigner.IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">O <see cref="T:System.Type" /> da atividade para verificar se há suporte no designer de atividade.</param>
        <summary>Retorna um valor que indica se o tipo especificado tem suporte no atual <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>
          <see langword="true" />Se o tipo é suportado no designer de fluxo de trabalho atual; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsSupportedActivityType é chamado apenas se o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> é um designer raiz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os filtros de mensagem associados com o designer de atividade.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> coleção somente leitura que contém qualquer filtro de mensagem associado com o designer de fluxo de trabalho raiz.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <MemberSignature Language="C#" Value="bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor que indica se o designer de fluxo de trabalho real raiz oferece suporte a persistência de layout.</summary>
        <value>
          <see langword="true" />Se o designer oferece suporte à conservação de layout; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto a ser associado com o designer.</summary>
        <value>O texto a ser associado com o designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta opção para associar uma cadeia de caracteres de texto com o designer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do retângulo texto em coordenadas lógicas.</summary>
        <value>Um <see cref="T:System.Drawing.Rectangle" /> que contém o texto associado ao designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use para determinar o local no designer onde <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Text%2A> será exibido.  
  
   
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> propriedade. Neste exemplo, o <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> é calculado usando os limites do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> , bem como o local e o tamanho do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A>.  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de verbos a serem associados com o designer.</summary>
        <value>A coleção de verbos a serem associados com o designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o método de verbos para determinar os verbos para mostrar no Menu de contexto.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como substituir o <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A> propriedade inserir ações verbo personalizado para um <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner>. O `CreateActivityVerbs` cria um novo <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> chamado `"Add New Parallel Branch"` e associa um manipulador de eventos chamado `OnAddParallelBranch`. Quando o verbo for clicado no designer de fluxo de trabalho, o manipulador de eventos é chamado.  
  
 [!code-csharp[WF_Samples#73](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
