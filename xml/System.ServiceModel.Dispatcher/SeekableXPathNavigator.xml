<Type Name="SeekableXPathNavigator" FullName="System.ServiceModel.Dispatcher.SeekableXPathNavigator">
  <TypeSignature Language="C#" Value="public abstract class SeekableXPathNavigator : System.Xml.XPath.XPathNavigator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SeekableXPathNavigator extends System.Xml.XPath.XPathNavigator" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathNavigator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece acesso aleatório, somente leitura aos dados contidos em documentos XML e habilita a consulta eficiente para nós especificados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As mensagens SOAP passados entre partes do [!INCLUDE[indigo1](~/includes/indigo1-md.md)] sistema são tratados por vários componentes do sistema que deve inspecionar essas mensagens para determinar quais ações a serem executadas em processá-las. O mecanismo do XPath é um componente que consultas de mensagens para essa finalidade e requer um navegador ler mensagens SOAP e outros documentos XML. Um navegador fornece um cursor que se move de nó para nó de controle onde o documento XML, na verdade, está sendo lido.  
  
 O mecanismo do XPath funciona com um <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, que estende o <xref:System.Xml.XPath.XPathNavigator> classe adicionando um <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition%2A> propriedade. Essa propriedade permite posições dentro do documento XML a serem salvos e carregados rapidamente sem a necessidade de clonar o navegador, uma alocação de memória caro que o <xref:System.Xml.XPath.XPathNavigator> requer para essa operação. O mecanismo do XPath frequentemente deve registrar a posição do cursor no decorrer da execução de consultas em documentos XML, portanto, o <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> oferece uma otimização importante para processamento de mensagens.  
  
 Observe que o valor de <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition%2A> é específico da implementação de propriedade e não pode ser mapeada para a posição do nó ou a posição do caractere. O valor só é significativo para o <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> implementação (e instância) que fornecido.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SeekableXPathNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeOrder ComparePosition (long first, long second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeOrder ComparePosition(int64 first, int64 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeOrder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPosition" Type="System.Int64" />
        <Parameter Name="secondPosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna um valor que descreve a ordem de documento das duas posições especificadas.</summary>
        <returns>Uma da <see cref="T:System.Xml.XmlNodeOrder" /> valores que descreve a relação de <paramref name="firstPosition" /> para <paramref name="secondPosition" /> no documento.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPosition" />ou <paramref name="secondPosition" /> não é válido.</exception>
        <block subset="none" type="overrides">
          <para>Esse método deve lançar uma exceção para valores de posição inválida.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CurrentPosition">
      <MemberSignature Language="C#" Value="public abstract long CurrentPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPosition" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém ou define um valor associado com o nó de dados em que o navegador do XPath é posicionado.</summary>
        <value>Um valor que está associado à posição atual do navegador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `set` operação Move o navegador para a posição associada com o valor especificado. O `get` operação retorna um valor associado à posição atual do navegador.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Essa propriedade não tem nenhum significado intrínseco: é opaco <see cref="T:System.Int64" /> valor uma implementação associa a posição atual do navegador. Sem restrições ou requisitos são colocados no próprio valor. Nenhuma suposição sobre sua estrutura de dados internos pode ser feitas.  
  
 Não é necessário que os valores sejam sequencial, ou mesmo que uma posição de navegador mapear para um valor exclusivo. Vários valores podem se referir a mesma posição de navegador, para que comparar dois valores não fornecem informações úteis.  
  
 Qualquer valor fornecido por um <see langword="get" /> operação deve ser válida para um <see langword="set" /> operação. Ele não é necessariamente um erro para um <see langword="set" /> operação para usar um valor não primeiro adquirido por um <see langword="get" /> operação. Um valor não é retornado por <see cref="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition" /> que foi adquirido alguma outra forma talvez ou pode não ser considerada válida pela implementação: essa opção é até o implementador.  
  
 O significado de um valor não deve ser alterado durante a vida do seu navegador enquanto ele navega mesmo documento. Além disso, o significado dos valores deve ser compartilhado por qualquer dois navegadores que são relacionados por meio da clonagem, novamente, desde que eles navegam ainda o mesmo documento. Todos os valores fornecidos por um <see langword="get" /> operação deve permanecer válida durante a vida útil de um navegador e qualquer de seus clones desde que a instância ainda navega mesmo documento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetLocalName">
      <MemberSignature Language="C#" Value="public abstract string GetLocalName (long node_position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLocalName(int64 node_position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodePosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="node_position">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna o nome local do nó na posição especificada.</summary>
        <returns>O nome local do nó na posição especificada. <see cref="F:System.String.Empty" />será retornado se o nó não tem um nome local, por exemplo se a posição atual faz referência a um nó de texto.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node_position" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public abstract string GetName (long node_position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int64 node_position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodePosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="node_position">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna o nome do nó na posição especificada.</summary>
        <returns>O nome do nó em <paramref name="node_position" />. <see cref="F:System.String.Empty" />será retornado se o nó não tem um nome.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome é o nome do elemento XML no `nodePosition` e geralmente inclui um prefixo de namespace.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node_position" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public abstract string GetNamespace (long node_position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(int64 node_position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodePosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="node_position">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna o namespace do nó na posição especificada.</summary>
        <returns>O namespace do nó em <paramref name="node_position" />. <see cref="F:System.String.Empty" />será retornado se o nó não tem um namespace.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node_position" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeType GetNodeType (long node_position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XPath.XPathNodeType GetNodeType(int64 node_position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodePosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="node_position">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna o tipo do nó na posição especificada.</summary>
        <returns>Uma da <see cref="T:System.Xml.XPath.XPathNodeType" /> valores que indicam o tipo do nó XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node_position" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract string GetValue (long node_position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetValue(int64 node_position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodePosition" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="node_position">To be added.</param>
        <summary>Quando substituído em uma classe derivada, retorna o valor de texto do nó na posição especificada.</summary>
        <returns>O valor de texto do nó em <paramref name="node_position" />. <see cref="F:System.String.Empty" />será retornado se o nó não tem um valor de texto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para elementos, esse método retorna a concatenação de todos os descendentes do texto do nó na posição especificada, semelhante do <xref:System.Xml.XmlElement.InnerText%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="node_position" /> é inválido.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
