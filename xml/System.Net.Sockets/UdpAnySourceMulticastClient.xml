<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Um receptor de cliente para o tráfego multicast de qualquer origem, também conhecido como ASM (Any Source Multicast) ou ISM (Internet Standard Multicast).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">O endereço de multicast de grupo para esse destinatário assinar.</param>
        <param name="localPort">A porta local para esse destinatário associar a.</param>
        <summary>Cria um novo <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> cliente UDP que pode se inscrever para um endereço de grupo e receber datagramas de qualquer fonte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> construtor associa um soquete de multicast UDP com um endereço de grupo e a porta, mas não associar ou usar o soquete.  
  
 O `groupAddress` parâmetro pode ser um IPv4 ou IPv6 multicast endereço.  
  
 O `localPort` parâmetro não deve especificar uma porta com menos de 1.024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupAddress" /> é <see langword="null" />. reference</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" />é menor que 0 - ou - <paramref name="localPort" /> é maior que 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Um método de retorno de chamada a ser invocada quando a operação for concluída.</param>
        <param name="state">Informações de estado opcional para passar para o <c>retorno de chamada</c> método para esta operação.</param>
        <summary>Associa o soquete e começa uma operação de associação ao grupo de multicast para permitir datagramas ser recebida de qualquer participante do grupo.</summary>
        <returns>Retorna <see cref="T:System.IAsyncResult" />.  
  
 Um <see cref="T:System.IAsyncResult" /> que faz referência a esta operação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> método vincula um soquete de multicast UDP para uma porta local e ingressa em um grupo de multicast para permitir datagramas ser recebida de qualquer participante do grupo de multicast. A porta local e o endereço de multicast de grupo são especificados no <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> construtor.  
  
 O método especificado no `callback` parâmetro é invocado quando a conclusão da operação para unir o grupo de multicast.  
  
 Se solicitado pelo tempo de execução, o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> método também executa uma verificação de política para verificar se o cliente tem permissão para acessar o grupo de multicast. Se o cliente não tem permissão de acesso, um <xref:System.Net.Sockets.SocketException> será lançada com <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast já ingressou ou uma operação de junção está em andamento.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">O buffer para armazenar os dados recebidos.</param>
        <param name="offset">O deslocamento, em bytes, do início do <c>buffer</c> onde os dados devem ser armazenados.</param>
        <param name="count">O número máximo de bytes para receber e armazenar no <c>buffer</c>.</param>
        <param name="callback">O método de retorno de chamada a ser invocada quando a operação for concluída.</param>
        <param name="state">Informações de estado opcional para passar para o <c>retorno de chamada</c> método para esta operação.</param>
        <summary>Inicia a operação de recepção de um pacote a partir do grupo de difusão seletiva associado e invoca o retorno de chamada especificado quando um pacote foi recebido no grupo de qualquer remetente.</summary>
        <returns>Retorna <see cref="T:System.IAsyncResult" />.  
  
 Um <see cref="T:System.IAsyncResult" /> que faz referência a esta operação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método começa uma operação de recepção de um pacote UDP do grupo de difusão seletiva associado de qualquer remetente. A porta local e o endereço de multicast de grupo são especificados no <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> construtor. O cliente multicast também deve ter concluído uma associação ao grupo de multicast.  
  
 O método especificado no `callback` parâmetro é chamado quando um pacote foi recebido.  
  
 É possível que haja uma falha do soquete se uma operação de recebimento falhar de forma síncrona, embora isso é comum com UDP. Se ocorrer uma falha de soquete, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />é maior do que o comprimento do <paramref name="buffer" />.  
  
 -ou-  
  
 <paramref name="count" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />mais a contagem é maior que o comprimento do <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">O buffer que contém os dados a serem enviados.</param>
        <param name="offset">O deslocamento, em bytes, do início do <c>buffer</c> para ler os dados a ser enviado.</param>
        <param name="count">O número de bytes para enviar a partir de <c>buffer</c>.</param>
        <param name="remoteEndPoint">O ponto de extremidade remoto ao qual o pacote será enviado.</param>
        <param name="callback">O método de retorno de chamada a ser invocada quando a operação for concluída.</param>
        <param name="state">Informações de estado opcional para passar para o <c>retorno de chamada</c> método para esta operação.</param>
        <summary>Inicia a operação de envio de um pacote de unicast para o destino especificado.</summary>
        <returns>Retorna <see cref="T:System.IAsyncResult" />.  
  
 Um <see cref="T:System.IAsyncResult" /> que faz referência a esta operação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> método começa uma operação de envio de um pacote UDP para o grupo de difusão seletiva associado.  
  
 O cliente deve ter concluído uma associação ao grupo de multicast. O endereço de destino especificado do `remoteEndPoint` parâmetro deve ter já enviado um pacote de multicast para esse destinatário. Alguns protocolos usam essas informações para transmitir o controle de fluxo, qualidade de serviço estatísticas ou mensagens de recuperação.  
  
 O método especificado no `callback` parâmetro é chamado quando um pacote foi recebido.  
  
 A transmissão só será permitida se o endereço especificado no `remoteEndPoint` parâmetro já enviou um pacote de multicast para esse destinatário. Se o cliente não tem permissão de acesso, um <xref:System.Net.Sockets.SocketException> será lançada com <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Se a porta de destino especificado no `remoteEndPoint` parâmetro é inferior a 1.024, um <xref:System.Net.Sockets.SocketException> será lançada com <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 É possível que haja uma falha do soquete se uma operação de recebimento falhar de forma síncrona, embora isso é comum com UDP. Se ocorrer uma falha de soquete, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />é maior do que o comprimento do <paramref name="buffer" />.  
  
 -ou-  
  
 <paramref name="count" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />mais a contagem é maior que o comprimento do <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">O buffer que contém os dados a serem enviados.</param>
        <param name="offset">O deslocamento, em bytes, do início do <c>buffer</c> para ler os dados a ser enviado.</param>
        <param name="count">O número de bytes para enviar a partir de <c>buffer</c>.</param>
        <param name="callback">O método de retorno de chamada a ser invocada quando a operação for concluída.</param>
        <param name="state">Informações de estado opcional para passar para o <c>retorno de chamada</c> método para esta operação.</param>
        <summary>Inicia a operação de envio de um pacote a um grupo de difusão seletiva associado e invoca o retorno de chamada especificado quando um pacote foi enviado para o grupo.</summary>
        <returns>Retorna <see cref="T:System.IAsyncResult" />.  
  
 Um <see cref="T:System.IAsyncResult" /> que faz referência a esta operação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> método começa uma operação de envio de um pacote UDP para o grupo de difusão seletiva associado.  
  
 O cliente deve ter concluído uma associação ao grupo de multicast.  
  
 O método especificado no `callback` parâmetro é chamado quando um pacote foi recebido.  
  
 É possível que haja uma falha do soquete se uma operação de recebimento falhar de forma síncrona, embora isso é comum com UDP. Se ocorrer uma falha de soquete, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />é maior do que o comprimento do <paramref name="buffer" />.  
  
 -ou-  
  
 <paramref name="count" />é menor que 0  
  
 -ou-  
  
 <paramref name="offset" />mais a contagem é maior que o comprimento do <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">O endereço de origem para bloquear.</param>
        <summary>Blocos de uma fonte para que os pacotes de difusão seletiva provenientes de ele não são recebidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método bloqueia pacotes de difusão seletiva provenientes de um endereço de origem especificado que estão sendo recebidas. O cliente deve ter concluído uma associação ao grupo de multicast.  
  
 O `sourceAddress` parâmetro pode ser o endereço de um IPv4 ou IPv6, mas o `sourceAddress` parâmetro deve corresponder com a família de endereços do grupo de multicast que parte do cliente.  
  
 O método especificado no `callback` parâmetro é chamado quando um pacote foi recebido.  
  
 Se houver uma falha de soquete ao executar a operação de origem do bloco, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deixa o grupo de multicast e libera todos os recursos usados pela instância atual do <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> classe e subjacente a <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> quando tiver terminado de usar o <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. O método Dispose deixa a <xref:System.Net.Sockets.UdpAnySourceMulticastClient> em um estado inutilizável. Depois de chamar <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient> para o coletor de lixo possa recuperar a memória que o <xref:System.Net.Sockets.UdpAnySourceMulticastClient> estava ocupando.  
  
 Sempre chamar <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> antes de liberar sua última referência para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Net.Sockets.UdpAnySourceMulticastClient> do objeto <xref:System.Object.Finalize%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado da operação join assíncrona.</param>
        <summary>Conclui a operação de grupo assíncrona de associação a um grupo de multicast.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> método conclui uma ligação assíncrona para uma operação de soquete e associação a um grupo de multicast.  
  
 Se solicitado pelo tempo de execução, o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> método também executa uma verificação de política para verificar se o cliente tem permissão para acessar o grupo de multicast. Se o cliente não tem permissão de acesso, um <xref:System.Net.Sockets.SocketException> será lançada com <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Se houver uma falha de soquete ao executar a operação de grupo de junção, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">O resultado de assíncrona a operação de recebimento.</param>
        <param name="source">O ponto de extremidade de origem onde o pacote foi recebido do.</param>
        <summary>Conclui a operação assíncrona de recebimento de um pacote a partir do grupo de difusão seletiva associado e fornece as informações recebidas.</summary>
        <returns>O comprimento, em bytes, da mensagem armazenada no parâmetro buffer passado para o <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> método conclui uma operação assíncrona para receber um pacote de um grupo de multicast.  
  
 Se houver uma falha de soquete ao executar a operação de recebimento, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado da operação de envio assíncrono.</param>
        <summary>Conclui a operação de envio de um pacote de unicast para o destino especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> método conclui uma operação assíncrona para enviar um pacote para o endereço de destino especificado.  
  
 Se houver uma falha de soquete ao executar a operação de recebimento, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado da operação de envio assíncrono.</param>
        <summary>Conclui a operação de envio de um pacote para um grupo de multicast.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> método conclui uma operação assíncrona para enviar um pacote para um grupo de multicast.  
  
 Se houver uma falha de soquete ao executar a operação de recebimento, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> é uma referência nula (Nada no Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se os pacotes de multicast de saída são entregues para o aplicativo de envio.</summary>
        <value>Retorna <see cref="T:System.Boolean" />.  
  
 Um valor que indica se os pacotes de saída para um grupo de multicast são entregues para o aplicativo de envio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tráfego de difusão seletiva é um método escalonável para muitos-para-muitos comunicação na Internet. Um processo assina um endereço de multicast de grupo. Em seguida, todos os pacotes enviados por um processo inscrito para o grupo de multicast são recebidos por todos os outros processos assinado ao endereço de multicast. O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> propriedade controla se algum processo no computador local recebe pacotes de difusão seletiva enviados por esse cliente para o grupo de multicast.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho, em bytes, do buffer de recebimento de <see cref="T:System.Net.Sockets.Socket" /> usado para operações de recebimento multicast neste <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instância.</summary>
        <value>Retorna <see cref="T:System.Int32" />.  
  
 O tamanho, em bytes, do buffer de recepção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> propriedade obtém ou define o tamanho, em bytes, do buffer de recebimento de subjacente <xref:System.Net.Sockets.Socket> usado para operações de recebimento multicast neste <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instância. Especificamente, o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> propriedade controla o tamanho do buffer usado pela pilha de quando um pacote chegar, mas o aplicativo ainda não foi chamado o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método. Se esse buffer fique preenchido e pacotes mantenham vem antes do aplicativo chama o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> e <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> métodos, pacotes antigos serão descartados. O aplicativo nunca será capaz de receber os pacotes antigos e em vez disso, receberá pacotes mais recentes quando ele chama o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método.  
  
 O tamanho padrão do buffer de recebimento no Windows é 8.192 bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de buffer especificado é menor que 0.</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho, em bytes, do buffer de envio de <see cref="T:System.Net.Sockets.Socket" /> usado para operações de envio multicast neste <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instância.</summary>
        <value>Retorna <see cref="T:System.Int32" />.  
  
 O tamanho, em bytes, do buffer de envio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propriedade obtém ou define o tamanho, em bytes, do buffer de envio do soquete subjacente usado para operações de envio multicast neste <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instância.  
  
 chamadas para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> ou <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> métodos levará mais tempo para chamar o retorno de chamada, dependendo do valor da <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propriedade se o buffer de envio está cheio. O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propriedade controla somente se o buffer do usuário fica bloqueada na memória física até que o envio esteja concluída.  
  
 O tamanho padrão do buffer de envio no Windows é 8.192 bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de buffer especificado é menor que 0.</exception>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">O endereço de origem para desbloquear.</param>
        <summary>Desbloqueia uma fonte que anteriormente foi bloqueada por uma chamada para o <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> método para que os pacotes de difusão seletiva provenientes de ele podem ser recebidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> método desbloqueia os pacotes de difusão seletiva provenientes de um endereço de origem especificado para que eles podem ser recebidos. O endereço de origem especificado deve ter sido previamente bloqueado por uma chamada para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método.  
  
 O cliente deve ter concluído uma associação ao grupo de multicast.  
  
 O `sourceAddress` parâmetro pode ser um IPv4 ou IPv6 multicast endereço.  
  
 Se o endereço de origem especificada no `sourceAddress` parâmetro previamente não foi bloqueado por uma chamada para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método, uma <xref:System.Net.Sockets.SocketException> será lançada com <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  
  
 Se houver uma falha de soquete ao executar a operação de fonte de desbloqueio, um <xref:System.Net.Sockets.SocketException> é gerada. O erro recebido está especificado como um membro do <xref:System.Net.Sockets.SocketError> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O grupo de multicast ainda não foi Unido.</exception>
        <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> foi descartado.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
