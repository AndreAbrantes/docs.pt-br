<Type Name="ModelTreeManager" FullName="System.Activities.Presentation.Model.ModelTreeManager">
  <TypeSignature Language="C#" Value="public class ModelTreeManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModelTreeManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelTreeManager" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece o item de modelo raiz e o serviço de modelo e permite que você sincronizar a árvore de modelo com o texto XAML.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelTreeManager (System.Activities.Presentation.EditingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.EditingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.#ctor(System.Activities.Presentation.EditingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
      </Parameters>
      <Docs>
        <param name="context">O contexto.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Activities.Presentation.Model.ModelTreeManager" /> classe usando o contexto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O serviço de modelo é publicado no contexto de edição transmitido ao construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem CreateModelItem (System.Activities.Presentation.Model.ModelItem parent, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem CreateModelItem(class System.Activities.Presentation.Model.ModelItem parent, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.CreateModelItem(System.Activities.Presentation.Model.ModelItem,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parent">O item pai.</param>
        <param name="instance">A instância.</param>
        <summary>Cria um item de modelo com base em como o pai especificado e a instância.</summary>
        <returns>Retorna um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que contém o novo item de modelo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingScopeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt; EditingScopeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Model.EditingScopeEventArgs&gt; EditingScopeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelTreeManager.EditingScopeCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o escopo de edição é concluído.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem GetModelItem (object instance, bool shouldExpandModelTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem GetModelItem(object instance, bool shouldExpandModelTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.GetModelItem(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="shouldExpandModelTree" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">A instância.</param>
        <param name="shouldExpandModelTree">
          <see langword="True" />Se o gerente deve expandir a árvore de modelo; Caso contrário, <see langword="false" />.</param>
        <summary>Retorna o item de modelo para o Gerenciador.</summary>
        <returns>O item de modelo para o Gerenciador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (object rootInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(object rootInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.Load(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rootInstance">A instância de raiz para carregar.</param>
        <summary>Carrega a instância raiz especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelTreeManager.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a raiz.</summary>
        <value>O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> objeto que contém a raiz.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
