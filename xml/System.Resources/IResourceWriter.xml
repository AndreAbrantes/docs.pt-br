<Type Name="IResourceWriter" FullName="System.Resources.IResourceWriter">
  <TypeSignature Language="C#" Value="public interface IResourceWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IResourceWriter implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.IResourceWriter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.Writer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece a funcionalidade básica para gravar recursos em um arquivo de saída ou o fluxo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gravadores de recurso são usados para gravar os recursos em arquivos em um formato de arquivo específico. Implemente esta interface, se você deseja controlar a maneira na qual um arquivo de recurso é gravado (por exemplo, para armazenar recursos na algo diferente de uma. txt,. resx ou arquivo. Resources binário). Caso contrário, use o padrão <xref:System.Resources.ResourceWriter> classe, que grava recursos em um arquivo. Resources binário, ou o <xref:System.Resources.ResXResourceWriter> classe, que grava os recursos em um arquivo de recurso (. resx) do XML.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Nome de um recurso.</param>
        <param name="value">Valor de um recurso como uma matriz de inteiro não assinado de 8 bits.</param>
        <summary>Adiciona uma matriz de inteiro não assinado de 8 bits como um recurso nomeado para a lista de recursos a serem gravados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os recursos não são gravados até que o <xref:System.Resources.IResourceWriter.Generate%2A> método é chamado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do recurso.</param>
        <param name="value">O valor do recurso.</param>
        <summary>Adiciona um recurso de nome de tipo <see cref="T:System.Object" /> à lista de recursos a serem gravados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O recurso não será gravado até que o <xref:System.Resources.IResourceWriter.Generate%2A> método é chamado.  
  
> [!NOTE]
>  `value`talvez precise ser serializável, portanto, talvez você precise fornecer um conversor de tipo, dependendo do que o gravador de recurso é usado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do recurso.</param>
        <param name="value">O valor do recurso.</param>
        <summary>Adiciona um recurso de nome de tipo <see cref="T:System.String" /> à lista de recursos a serem gravados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O recurso não será gravado até que o <xref:System.Resources.IResourceWriter.Generate%2A> método é chamado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fecha o arquivo de recurso ou fluxo, garantindo que todos os dados foram gravados para o arquivo de base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se necessário, <xref:System.Resources.IResourceWriter.Close%2A> chamará o <xref:System.Resources.IResourceWriter.Generate%2A> método para os recursos para o arquivo ou o fluxo subjacente de saída antes de fechá-lo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.Generate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava todos os recursos adicionados pelo <see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /> método para o arquivo de saída ou o fluxo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.IResourceWriter.Generate%2A>Não feche o arquivo de saída ou o fluxo de saída. Em vez disso, considere a possibilidade de chamar o <xref:System.Resources.IResourceWriter.Close%2A> método. <xref:System.Resources.IResourceWriter.Generate%2A>é útil quando você deseja criar um arquivo de recurso, mas você não quiser fechar o fluxo de saída. <xref:System.Resources.IResourceWriter.Generate%2A>pode ser chamado apenas uma vez. Depois de chamar <xref:System.Resources.IResourceWriter.Generate%2A>, todos os <xref:System.Resources.IResourceWriter> métodos diferentes de <xref:System.Resources.IResourceWriter.Close%2A> lançará uma exceção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
