<Type Name="MessageBuffer" FullName="System.ServiceModel.Channels.MessageBuffer">
  <TypeSignature Language="C#" Value="public abstract class MessageBuffer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageBuffer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageBuffer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa um buffer de memória que armazena uma mensagem inteira para consumo futuro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O corpo de um <xref:System.ServiceModel.Channels.Message> instância só pode ser consumida ou gravada uma vez. Se você quiser consumir um <xref:System.ServiceModel.Channels.Message> instância mais de uma vez, você deve usar o <xref:System.ServiceModel.Channels.MessageBuffer> classe completamente armazenar toda uma <xref:System.ServiceModel.Channels.Message> instância na memória.  
  
 Um <xref:System.ServiceModel.Channels.MessageBuffer> instância será construída chamando <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> de um <xref:System.ServiceModel.Channels.Message> instância. Um novo <xref:System.ServiceModel.Channels.MessageBuffer> , em seguida, é criado e retornado, que assume a propriedade do <xref:System.ServiceModel.Channels.Message> e lê o conteúdo inteiro na memória.  
  
 Para recuperar uma cópia de um <xref:System.ServiceModel.Channels.Message> do <xref:System.ServiceModel.Channels.MessageBuffer>, você deve chamar o <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A> método do <xref:System.ServiceModel.Channels.MessageBuffer>. Isso retorna uma cópia idêntica do original <xref:System.ServiceModel.Channels.Message> instância é fornecido.  
  
 Você pode controlar o tamanho máximo do buffer, definindo <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> para o número máximo de bytes desejado. Esse número não abrange necessariamente qualquer alocações transitórias relacionadas à criação de buffer ou propriedades anexadas à mensagem.  
  
 Você sempre deve fechar um <xref:System.ServiceModel.Channels.MessageBuffer> instância chamando <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> quando terminar de trabalhar com ele. Isso permite que os recursos de sistema potencialmente ser liberado antes.  
  
 Observação especial para usuários de C++ gerenciado derivar desta classe:  
  
-   Coloque a limpeza código em (On) (início) feche (e/ou OnAbort), não em um destruidor.  
  
-   Evite destruidores: eles fazer com que o compilador gerar automaticamente<xref:System.IDisposable>  
  
-   Evitar membros de referência não: pode fazer com que o compilador gerar automaticamente<xref:System.IDisposable>  
  
-   Evitar finalizadores; mas se você incluir um, você deve suprimir o aviso de compilação e chamar <xref:System.GC.SuppressFinalize%28System.Object%29> e o finalizador automaticamente a partir (On) (início) feche (e/ou OnAbort) para emular o que seria o gerado automaticamente <xref:System.IDisposable> comportamento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public abstract int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageBuffer.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número aproximado de bytes consumidos por este <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</summary>
        <value>O número aproximado de bytes consumidos por este <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode controlar o tamanho máximo do buffer, definindo <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> para o número máximo de bytes desejado. Esse número não abrange necessariamente qualquer alocações transitórias relacionadas à criação de buffer ou propriedades anexadas à mensagem. Ele não está relacionado ao tamanho real da mensagem quando serializado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trabalhando com o buffer de conclusão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você sempre deve fechar um <xref:System.ServiceModel.Channels.MessageBuffer> instância chamando <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> quando terminar de trabalhar com ele. Isso permite que os recursos de sistema potencialmente ser liberado antes.  
  
 Se você tiver chamado <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> para criar um buffer de mensagem de uma mensagem e inspecionadas com a mensagem <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A>, você obterá um <xref:System.InvalidOperationException> quando você tentar fechar o buffer usando esse método. Para evitar esse problema, você precisa recriar a mensagem do buffer antes de fechar. Consulte o exemplo de código na seção de exemplo para ver uma demonstração do cenário anterior e uma maneira de resolver esse problema.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como fechar corretamente um buffer de mensagem.  
  
```  
public void AfterReceiveReply(ref Message reply, object correlationState)  
{  
    // Create the buffer  
    MessageBuffer buffer = reply.CreateBufferedCopy(13000);  
    // Inspect the response (for example, extract the body contents)  
    Message thisReply = buffer.CreateMessage();  
    XmlDictionaryReader reader = thisReply.GetReaderAtBodyContents();  
    StringBuilder info = new StringBuilder();  
    XmlWriter writer = XmlWriter.Create(info);  
    writer.WriteNode(reader, true);  
    writer.Close();  
    // Resolution:  Re-create the message from the buffer before  
    // closing.  
    reply = buffer.CreateMessage();  
    // You can close the buffer after the message has been recreated.  
    buffer.Close();  
```  
  
 }  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message CreateMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message CreateMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cópia da mensagem original.</summary>
        <returns>Uma cópia idêntica do original <see cref="T:System.ServiceModel.Channels.Message" /> instância que você forneceu anteriormente para o <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> método de um <see cref="T:System.ServiceModel.Channels.Message" /> instância.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar esse método cria uma cópia idêntica do original <xref:System.ServiceModel.Channels.Message> instância que você forneceu anteriormente para o <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> método de um <xref:System.ServiceModel.Channels.Message> instância. Você pode salvar a mensagem para um armazenamento durável.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja manipular apenas uma parte da cópia de mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação. Esse método não pode ser herdado.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja manipular apenas uma parte da cópia de mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (int nodeQuota);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(int32 nodeQuota) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeQuota" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeQuota">O local que você deseja que o navegador deve ser posicionado inicialmente.</param>
        <summary>Cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para navegação deste objeto, com o navegador posicionado no nó especificado.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja manipular apenas uma parte da cópia de mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(valuetype System.Xml.XmlSpace space) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="space" Type="System.Xml.XmlSpace" />
      </Parameters>
      <Docs>
        <param name="space">Uma opção válida <see cref="T:System.Xml.XmlSpace" /> espaço.</param>
        <summary>Cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para navegação deste objeto, com especificado <see langword="xml:space" /> escopo.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja manipular apenas uma parte da cópia de mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (int nodeQuota, System.Xml.XmlSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(int32 nodeQuota, valuetype System.Xml.XmlSpace space) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeQuota" Type="System.Int32" />
        <Parameter Name="space" Type="System.Xml.XmlSpace" />
      </Parameters>
      <Docs>
        <param name="nodeQuota">O local que você deseja que o navegador deve ser posicionado inicialmente.</param>
        <param name="space">Uma opção válida <see cref="T:System.Xml.XmlSpace" /> espaço.</param>
        <summary>Cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para navegação deste objeto, com o navegador posicionado no nó especificado e <see langword="xml:space" /> escopo.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNavigator" /> objeto para este objeto de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja manipular apenas uma parte da cópia de mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageContentType">
      <MemberSignature Language="C#" Value="public virtual string MessageContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageContentType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de conteúdo de mensagem armazenado nesse buffer.</summary>
        <value>O tipo de conteúdo de mensagem armazenado nesse buffer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> e opcionalmente libera os recursos gerenciados. Esse método não pode ser herdado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame este método quando tiver terminado de usar o <xref:System.ServiceModel.Channels.MessageBuffer>. Esse método deixará o <xref:System.ServiceModel.Channels.MessageBuffer> em um estado inutilizável. Depois de chamar esse método, você deve liberar todas as referências para o <xref:System.ServiceModel.Channels.MessageBuffer> para o coletor de lixo possa recuperar a memória que o <xref:System.ServiceModel.Channels.MessageBuffer> estava ocupando.  
  
> [!NOTE]
>  Sempre chamar esse método antes de liberar sua última referência para o <xref:System.ServiceModel.Channels.MessageBuffer>. Caso contrário, os recursos que está usando não são liberados até o coletor de lixo chama o <xref:System.ServiceModel.Channels.MessageBuffer> do objeto `Finalize` método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public virtual void WriteMessage (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteMessage(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Um fluxo de E/S no qual todo o conteúdo desse buffer é gravado.</param>
        <summary>Grava todo o conteúdo desse buffer no fluxo de E/S especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa função usa um codificador binário em vez de um codificador de UTF-8. Portanto, você não pode converter de diretamente um <xref:System.ServiceModel.Channels.MessageBuffer> para um <xref:System.ServiceModel.Channels.Message>. O código na seção de exemplo mostra como resolver esse problema.  
  
   
  
## Examples  
  
```  
private byte[] ConvertMessageToByteArray(ref Message message)   
{  
....//Memory stream that contains the message  
....MemoryStream stream = new MemoryStream();  
....//Create an XmlWriter to serialize the message into a byte array  
....XmlWriterSettings settings = new XmlWriterSettings();  
....settings.Encoding = System.Text.Encoding.UTF8;  
....XmlWriter writer = XmlWriter.Create(stream, settings);  
....//Copy the message into a buffer   
....//Note: This call changes the original message's state  
....MessageBuffer buffer = message.CreateBufferedCopy(int.MaxValue);  
....//Create a copy of the message  
....message = buffer.CreateMessage();  
....//Serialize the message to the XmlWriter   
....message.WriteMessage(writer);  
....//Recreate the message   
....message = buffer.CreateMessage();  
....//Flush the contents of the writer so that the stream gets updated  
....writer.Flush();  
....stream.Flush();  
....//Convert the stream to an array  
....byte[] retval = stream.ToArray();  
    return retval;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
