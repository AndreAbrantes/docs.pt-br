<Type Name="IChannelListener" FullName="System.ServiceModel.Channels.IChannelListener">
  <TypeSignature Language="C#" Value="public interface IChannelListener : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define a interface que deve ser implementada por uma fábrica de canais para aceitar os canais.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Channels.IChannelListener> interface representa a interface base para ouvintes de canais.  
  
 Ouvintes de canais e seus canais associados são geralmente usados por serviços que recebem comunicações iniciadas por clientes. Canal fábricas que implementam o <xref:System.ServiceModel.Channels.IChannelFactory> interface, por outro lado, fornece os mecanismos usados para criar os canais por meio do qual a comunicação com um serviço é iniciada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a aguardar uma operação de canal tem para concluir antes do tempo limite.</param>
        <param name="callback">O <see cref="T:System.AsyncCallback" /> delegate que recebe a notificação de conclusão assíncrona da espera por uma operação de canal.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas a espera assíncrona para uma operação de canal.</param>
        <summary>Inicia uma operação assíncrona para aguardar um canal chegar que deve ser concluído dentro de um intervalo de tempo especificado.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência a espera assíncrona para uma operação de canal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> método.</param>
        <summary>Conclui uma operação assíncrona para aguardar canais chegar.</summary>
        <returns>
          <see langword="true" />Se uma mensagem foi recebida; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">O objeto com tipo para o qual o método está consultando.</typeparam>
        <summary>Retorna um objeto com tipo solicitado, se presente, a camada apropriada na pilha de canais.</summary>
        <returns>O objeto de tipo <paramref name="T" /> solicitado, se ele estiver presente ou <see langword="null" /> se não for.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para solicitar um objeto de tipo como uma interface para definir propriedades ou obter o status da camada de apropriado na pilha de canais. Se uma camada de suporte para retornar o objeto solicitado, ele retorna. Caso contrário, ela delega a chamada para a próxima camada da pilha. Se ele obtém a parte inferior da pilha de nenhuma camada de canal suporte para o objeto solicitado e o método retornará `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o URI no qual os ouvintes que são gerados pela fábrica de escutam.</summary>
        <value>O <see cref="T:System.Uri" /> em que os ouvintes que são gerados pela fábrica de escutam.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse URI representa o endereço de transporte no qual o <xref:System.ServiceModel.Channels.IChannelListener> está escutando para mensagens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a aguardar uma operação de canal tem para concluir antes do tempo limite.</param>
        <summary>Espera por um canal chegar.</summary>
        <returns>
          <see langword="true" />Se um canal foi recebido antes do intervalo de tempo especificado pelo <paramref name="timeout" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
