<Type Name="TaskLoggingHelper" FullName="Microsoft.Build.Utilities.TaskLoggingHelper">
  <TypeSignature Language="C#" Value="public class TaskLoggingHelper : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskLoggingHelper extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.TaskLoggingHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos de registro em log usados pelas tarefas de auxiliar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskLoggingHelper (Microsoft.Build.Framework.ITask taskInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask taskInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskInstance" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="taskInstance">A tarefa que contém uma instância dessa tarefa.</param>
        <summary>Inicializa uma nova instância do <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> de classe e a associa com a instância de tarefa especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskLoggingHelper (Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.IBuildEngine,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buildEngine" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildEngine">O mecanismo de compilação.</param>
        <param name="taskName">O nome da tarefa.</param>
        <summary>Construtor público que pode ser usado por fábricas de tarefa para ajudá-los a mensagens de log.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildEngine">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.IBuildEngine BuildEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.IBuildEngine BuildEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.IBuildEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o mecanismo de compilação que é associado à tarefa.</summary>
        <value>Um <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> que representa a instância do mecanismo de compilação que é associado à tarefa.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractMessageCode">
      <MemberSignature Language="C#" Value="public string ExtractMessageCode (string message, out string messageWithoutCodePrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExtractMessageCode(string message, [out] string&amp; messageWithoutCodePrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageWithoutCodePrefix" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">A mensagem completa ao analisar o que inclui o prefixo de código.</param>
        <param name="messageWithoutCodePrefix">A mensagem com o prefixo de código foi removida.</param>
        <summary>Extrai o prefixo de código da mensagem da cadeia de determinada mensagem completa.</summary>
        <returns>O prefixo de código de mensagem que é extraído da cadeia de caracteres de mensagem completa, ou <see langword="null" /> se não houver nenhum código de mensagem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mensagem de prefixos de código devem coincidir com as seguintes expressões regulares do .NET para serem reconhecidos: `^\s*[A-Za-z]+\d+:\s*`.  
  
   
  
## Examples  
 Se esse método tem a cadeia de caracteres de mensagem completa `MYTASK1001: This is an error message.` e aceita `This is an error message.` como o valor para o `messageWithoutCodePrefix` parâmetro, ele retorna `MYTASK1001`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatResourceString">
      <MemberSignature Language="C#" Value="public virtual string FormatResourceString (string resourceName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatResourceString(string resourceName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="args">Argumentos opcionais para carregar a cadeia de caracteres de formatação.</param>
        <summary>Carrega a cadeia de caracteres do recurso especificado e, opcionalmente, formata usando argumentos determinados.</summary>
        <returns>A cadeia de caracteres formatada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cultura do thread atual é usada para formatação.  
  
 Esse método requer que a tarefa de proprietário para registrar seus recursos com o o <xref:Microsoft.Build.Utilities.Task> construtor da classe base, ou o <xref:Microsoft.Build.Utilities.Task.TaskResources%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O recurso de cadeia de caracteres indicado pelo <paramref name="resourceName" /> não existe.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> propriedade da tarefa proprietário não está definida.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public virtual string FormatString (string unformatted, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatString(string unformatted, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unformatted" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unformatted">A cadeia de caracteres de formato.</param>
        <param name="args">Argumentos para formatação.</param>
        <summary>Formatos de cadeia de caracteres especificada usando os argumentos de determinado.</summary>
        <returns>A cadeia de caracteres formatada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cultura do thread atual é usada para formatação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unformatted" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceMessage">
      <MemberSignature Language="C#" Value="public virtual string GetResourceMessage (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourceMessage(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">O nome do recurso.</param>
        <summary>Obtém a mensagem de recurso na biblioteca de tarefas.</summary>
        <returns>Retorna a mensagem de recurso na biblioteca de tarefas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="public bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a tarefa efetuou erros através desse objeto auxiliar de registro em log.</summary>
        <value>
          <see langword="true" />Se a tarefa tiver se conectado erros através desse objeto auxiliar de registro em log; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeywordPrefix">
      <MemberSignature Language="C#" Value="public string HelpKeywordPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeywordPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o prefixo usado para compor as palavras-chave de ajuda de nomes de recursos.</summary>
        <value>O prefixo usado para compor as palavras-chave de ajuda de nomes de recursos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se uma tarefa não tiver as palavras-chave de Ajuda associadas com suas mensagens, pode ignorar essa propriedade ou defina-o como `null`. Se essa propriedade é definida como vazio <xref:System.String>, nomes de recursos serão usados textualmente como palavras-chave de Ajuda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.InitializeLifetimeService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>InitializeLifetimeService é chamado quando o objeto remoto é ativado.  
  
 Este método determina quanto tempo será o tempo de vida do objeto.  
  
 Thread-safe. No entanto, InitializeLifetimeService e MarkAsInactive só devem ser chamado em ordem, juntas ou não e não mais de uma vez.</summary>
        <returns>O objeto de concessão para controlar o tempo de vida do objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCommandLine">
      <MemberSignature Language="C#" Value="public void LogCommandLine (string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCommandLine(string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandLine">A cadeia de caracteres de linha de comando.</param>
        <summary>Registra a linha de comando para uma ferramenta subjacente, o arquivo executável ou o shell de comando de uma tarefa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCommandLine">
      <MemberSignature Language="C#" Value="public void LogCommandLine (Microsoft.Build.Framework.MessageImportance importance, string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCommandLine(valuetype Microsoft.Build.Framework.MessageImportance importance, string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importance">Um dos valores de <see cref="T:Microsoft.Build.Framework.MessageImportance" /> que indica o nível de importância da linha de comando.</param>
        <param name="commandLine">A cadeia de caracteres de linha de comando.</param>
        <summary>Registra a linha de comando para uma ferramenta subjacente, o arquivo executável ou o shell de comando de uma tarefa usando o nível de prioridade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCriticalMessage">
      <MemberSignature Language="C#" Value="public void LogCriticalMessage (string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCriticalMessage(string subcategory, string code, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">Descrição do tipo de aviso (pode ser nulo).</param>
        <param name="code">Código de mensagem (pode ser nulo).</param>
        <param name="helpKeyword">A palavra-chave ajuda para o host IDE (pode ser nulo).</param>
        <param name="file">O caminho para o arquivo, fazendo com que a mensagem (pode ser nulo).</param>
        <param name="lineNumber">A linha no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="columnNumber">A coluna no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="endLineNumber">A última linha de um intervalo de linhas no arquivo que está causando a mensagem (definida como zero se não estiver disponível).</param>
        <param name="endColumnNumber">A última coluna de um intervalo de colunas no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="message">A cadeia de caracteres de mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra uma mensagem crítica usando a cadeia de caracteres especificada e outros detalhes da mensagem.  
  
 Thread-safe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Lançada quando <c>mensagem</c> é nulo.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LogError">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra um erro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public void LogError (string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogError(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra um erro com a mensagem especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
   
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public void LogError (string subcategory, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogError(string subcategory, string errorCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">A descrição do tipo de erro.</param>
        <param name="errorCode">O código de erro.</param>
        <param name="helpKeyword">A palavra-chave Ajuda a ser associada ao erro.</param>
        <param name="file">O caminho para o arquivo que contém o erro.</param>
        <param name="lineNumber">A linha no arquivo onde o erro ocorreu.</param>
        <param name="columnNumber">A coluna no arquivo onde o erro ocorreu.</param>
        <param name="endLineNumber">A linha final do arquivo onde o erro ocorreu.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o erro ocorreu.</param>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra um erro usando a mensagem especificada e outros detalhes do erro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros `subCategory`, `errorCode`, `helpKeyword`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">A exceção para fazer logon.</param>
        <summary>Registra um erro usando a mensagem da exceção determinada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há pilha de chamadas será mostrada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception, bool showStackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception, bool showStackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exception">A exceção para fazer logon</param>
        <param name="showStackTrace">
          <see langword="true" />para incluir o rastreamento de pilha no log; Caso contrário, <see langword="false" />.</param>
        <summary>Registra um erro usando a mensagem e, opcionalmente, o rastreamento de pilha da exceção determinado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception, bool showStackTrace, bool showDetail, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception, bool showStackTrace, bool showDetail, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean,System.Boolean,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
        <Parameter Name="showDetail" Type="System.Boolean" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">A exceção para fazer logon.</param>
        <param name="showStackTrace">
          <see langword="true" />para incluir o rastreamento de pilha no log; Caso contrário, <see langword="false" />.</param>
        <param name="showDetail">
          <see langword="true" />para registrar tipos de exceção e quaisquer exceções internas; Caso contrário, <see langword="false" />.</param>
        <param name="file">O nome do arquivo que está relacionado à exceção, ou <see langword="null" /> se o arquivo de projeto deve ser registradas em log.</param>
        <summary>Registra um erro usando a mensagem e, opcionalmente, o rastreamento de pilha de exceção determinada e quaisquer exceções internas.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorFromResources (string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um erro usando a cadeia de caracteres de recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorFromResources (string subcategoryResourceName, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromResources(string subcategoryResourceName, string errorCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">O nome do recurso de cadeia de caracteres que descreve o tipo de erro.</param>
        <param name="errorCode">O código de erro.</param>
        <param name="helpKeyword">A palavra-chave Ajuda a ser associada ao erro.</param>
        <param name="file">O caminho para o arquivo que contém o erro.</param>
        <param name="lineNumber">A linha no arquivo onde o erro ocorreu.</param>
        <param name="columnNumber">A coluna no arquivo onde o erro ocorreu.</param>
        <param name="endLineNumber">A linha final do arquivo onde o erro ocorreu.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o erro ocorreu.</param>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um erro usando a cadeia de caracteres do recurso especificado e outros detalhes do erro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros `subCategoryResourceName`, `errorCode`, `helpKeyword`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorWithCodeFromResources (string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorWithCodeFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um erro com um código de erro usando a cadeia de caracteres de recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a mensagem é iniciada com um código de erro, o código é extraído e registrado com a mensagem.  
  
 Se um prefixo de palavra-chave de ajuda foi fornecido, ele também será registrado em log com a mensagem. A palavra-chave da ajuda é composta acrescentando-se o nome do recurso da cadeia de caracteres para o prefixo da palavra-chave da ajuda. Uma tarefa pode fornecer um prefixo de palavra-chave de ajuda com o construtor de classe base <xref:Microsoft.Build.Utilities.Task>, ou a propriedade <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorWithCodeFromResources (string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorWithCodeFromResources(string subcategoryResourceName, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">O nome do recurso de cadeia de caracteres que descreve o tipo de erro.</param>
        <param name="file">O caminho para o arquivo que contém o erro.</param>
        <param name="lineNumber">A linha no arquivo onde o erro ocorreu.</param>
        <param name="columnNumber">A coluna no arquivo onde o erro ocorreu.</param>
        <param name="endLineNumber">A linha final do arquivo onde o erro ocorreu.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o erro ocorreu.</param>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um erro usando a cadeia de caracteres do recurso especificado e outros detalhes do erro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a mensagem é iniciada com um código de erro, o código é extraído e registrado com a mensagem.  
  
 Se um prefixo de palavra-chave de ajuda foi fornecido, ele também será registrado em log com a mensagem. A palavra-chave da ajuda é composta acrescentando-se o nome do recurso da cadeia de caracteres para o prefixo da palavra-chave da ajuda. Uma tarefa pode fornecer um prefixo de palavra-chave de ajuda com o construtor de classe base <xref:Microsoft.Build.Utilities.Task>, ou a propriedade <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A>.  
  
 Os parâmetros `subCategoryResourceName`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogExternalProjectFinished">
      <MemberSignature Language="C#" Value="public void LogExternalProjectFinished (string message, string helpKeyword, string projectFile, bool succeeded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogExternalProjectFinished(string message, string helpKeyword, string projectFile, bool succeeded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="succeeded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">A mensagem de texto.</param>
        <param name="helpKeyword">A palavra-chave de ajuda.</param>
        <param name="projectFile">O nome do projeto.</param>
        <param name="succeeded">
          <see langword="true" />para indicar que o projeto foi criado com êxito; Caso contrário, <see langword="false" />.</param>
        <summary>Ajuda de log personalizado <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> evento de compilação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExternalProjectStarted">
      <MemberSignature Language="C#" Value="public void LogExternalProjectStarted (string message, string helpKeyword, string projectFile, string targetNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogExternalProjectStarted(string message, string helpKeyword, string projectFile, string targetNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A mensagem de texto.</param>
        <param name="helpKeyword">A palavra-chave de ajuda.</param>
        <param name="projectFile">O nome do projeto.</param>
        <param name="targetNames">Os destinos a serem compilados. Uma cadeia de caracteres vazia indica destinos padrão.</param>
        <summary>Ajuda de log personalizado <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> evento de compilação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LogMessage">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra uma mensagem com a cadeia de caracteres especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Os argumentos para a formatação da mensagem.</param>
        <summary>Registra uma mensagem com a cadeia de caracteres especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:Microsoft.Build.Framework.MessageImportance> valor de uma mensagem é `Normal` por padrão.  
  
   
  
## Examples  
 O exemplo a seguir mostra o código de uma tarefa que cria um ou mais diretórios.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(valuetype Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="importance">Um dos valores de enumeração que especifica a importância da mensagem.</param>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Os argumentos para a formatação da mensagem.</param>
        <summary>Registra uma mensagem com a cadeia de caracteres especificada e a importância.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tome cuidado para ordenar os parâmetros corretamente ou a outra sobrecarga será chamada inadvertidamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, Microsoft.Build.Framework.MessageImportance importance, string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string subcategory, string code, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, valuetype Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">Descrição do tipo de aviso (pode ser nulo).</param>
        <param name="code">Código de mensagem (pode ser nulo)</param>
        <param name="helpKeyword">A palavra-chave ajuda para o host IDE (pode ser nulo).</param>
        <param name="file">O caminho para o arquivo, fazendo com que a mensagem (pode ser nulo).</param>
        <param name="lineNumber">A linha no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="columnNumber">A coluna no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="endLineNumber">A última linha de um intervalo de linhas no arquivo que está causando a mensagem (definida como zero se não estiver disponível).</param>
        <param name="endColumnNumber">A última coluna de um intervalo de colunas no arquivo fazendo com que a mensagem (definida como zero se não estiver disponível).</param>
        <param name="importance">Importância da mensagem.</param>
        <param name="message">A cadeia de caracteres de mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra uma mensagem usando a cadeia de caracteres especificada e outros detalhes da mensagem.  
  
 Thread-safe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Lançada quando <c>mensagem</c> é nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromResources">
      <MemberSignature Language="C#" Value="public void LogMessageFromResources (string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessageFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra uma mensagem com a cadeia de caracteres de recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:Microsoft.Build.Framework.MessageImportance> valor de uma mensagem é `Normal` por padrão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromResources">
      <MemberSignature Language="C#" Value="public void LogMessageFromResources (Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessageFromResources(valuetype Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="importance">Um dos valores de enumeração que especifica a importância da mensagem.</param>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra uma mensagem com a cadeia de caracteres de recurso especificado e a importância.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tome cuidado para ordenar os parâmetros corretamente ou a outra sobrecarga será chamada inadvertidamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromText">
      <MemberSignature Language="C#" Value="public bool LogMessageFromText (string lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessageFromText(string lineOfText, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineOfText" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="lineOfText">A linha de texto para fazer logon de.</param>
        <param name="messageImportance">Um dos valores de <see cref="T:Microsoft.Build.Framework.MessageImportance" /> que indica o nível de importância da linha de comando.</param>
        <summary>Registra uma mensagem de erro ou aviso de determinada linha de texto.</summary>
        <returns>
          <see langword="true" />Se o erro foi registrado em log; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mensagens de erros e avisos são registrados apenas para linhas que se ajustam o formato canônico. Todas as outras linhas são tratadas como mensagens.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lineOfText" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromFile">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">O nome do arquivo para as mensagens de log.</param>
        <summary>Registra erros em log, avisos e mensagens para cada linha de texto no arquivo especificado.</summary>
        <returns>
          <see langword="true" />para indicar que pelo menos um erro foi registrado em log; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erros e avisos são registrados para linhas que atendem a um determinado formato canônico. Todas as outras linhas são registradas como mensagens.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromFile">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromFile (string fileName, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromFile(string fileName, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="fileName">O nome do arquivo para as mensagens de log.</param>
        <param name="messageImportance">Um dos valores de enumeração que especifica a importância de registrado mensagens.</param>
        <summary>Registra erros em log, avisos e mensagens para cada linha de texto no arquivo especificado. Também registra a importância de mensagens.</summary>
        <returns>
          <see langword="true" />para indicar que pelo menos um erro foi registrado em log; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erros e avisos são registrados para linhas que atendem a um determinado formato canônico. Todas as outras linhas são registradas como mensagens.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lançada quando <c>filename</c> é nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromStream">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromStream (System.IO.TextReader stream, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromStream(class System.IO.TextReader stream, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.TextReader" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="stream">Um <see cref="T:System.IO.TextReader" /> que lê o fluxo de log do.</param>
        <param name="messageImportance">Um dos valores de <see cref="T:Microsoft.Build.Framework.MessageImportance" /> que indica o nível de importância da linha de comando.</param>
        <summary>Registra uma mensagem de erro ou aviso do fluxo específico.</summary>
        <returns>
          <see langword="true" />Se o erro foi registrado em log; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public void LogWarning (string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarning(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra um aviso com a mensagem especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public void LogWarning (string subcategory, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarning(string subcategory, string warningCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="warningCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">A descrição do tipo de aviso.</param>
        <param name="warningCode">O código de aviso.</param>
        <param name="helpKeyword">A palavra-chave Ajuda que será associada ao aviso.</param>
        <param name="file">O caminho para o arquivo que contém o aviso.</param>
        <param name="lineNumber">A linha no arquivo onde o aviso é exibido.</param>
        <param name="columnNumber">A coluna no arquivo de onde o aviso é exibido.</param>
        <param name="endLineNumber">A linha final do arquivo onde o aviso é exibido.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o aviso é exibido.</param>
        <param name="message">A mensagem.</param>
        <param name="messageArgs">Argumentos opcionais para formatar a cadeia de caracteres da mensagem.</param>
        <summary>Registra um aviso com a mensagem especificada e outros detalhes de aviso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros `subCategory`, `warningCode`, `helpKeyword`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromException">
      <MemberSignature Language="C#" Value="public void LogWarningFromException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">A exceção para fazer logon.</param>
        <summary>Registra um aviso usando a mensagem da exceção especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromException">
      <MemberSignature Language="C#" Value="public void LogWarningFromException (Exception exception, bool showStackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromException(class System.Exception exception, bool showStackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exception">A exceção para fazer logon</param>
        <param name="showStackTrace">
          <see langword="true" />para incluir o rastreamento de pilha no log; Caso contrário, <see langword="false" />.</param>
        <summary>Registra um aviso com a mensagem e, opcionalmente, o rastreamento de pilha da exceção determinado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningFromResources (string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um aviso usando a cadeia de caracteres de recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não é thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningFromResources (string subcategoryResourceName, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromResources(string subcategoryResourceName, string warningCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="warningCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">O nome do recurso de cadeia de caracteres que descreve o tipo de aviso.</param>
        <param name="warningCode">O código de aviso.</param>
        <param name="helpKeyword">A palavra-chave Ajuda que será associada ao aviso.</param>
        <param name="file">O caminho para o arquivo que contém o aviso.</param>
        <param name="lineNumber">A linha no arquivo onde o aviso é exibido.</param>
        <param name="columnNumber">A coluna no arquivo de onde o aviso é exibido.</param>
        <param name="endLineNumber">A linha final do arquivo onde o aviso é exibido.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o aviso é exibido.</param>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um aviso usando a cadeia de caracteres do recurso especificado e outros detalhes de aviso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros `subCategoryResourceName`, `warningCode`, `helpKeyword`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningWithCodeFromResources (string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningWithCodeFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um aviso com um aviso de código usando a cadeia de caracteres de recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a mensagem é iniciada com um código de aviso, o código é extraído e registrado com a mensagem.  
  
 Se um prefixo de palavra-chave de ajuda foi fornecido, ele também será registrado em log com a mensagem. A palavra-chave da ajuda é composta acrescentando-se o nome do recurso da cadeia de caracteres para o prefixo da palavra-chave da ajuda. Uma tarefa pode fornecer um prefixo de palavra-chave de ajuda com o construtor de classe base <xref:Microsoft.Build.Utilities.Task>, ou a propriedade <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningWithCodeFromResources (string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, params object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningWithCodeFromResources(string subcategoryResourceName, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">O nome do recurso de cadeia de caracteres que descreve o tipo de aviso.</param>
        <param name="file">O caminho para o arquivo que contém o aviso.</param>
        <param name="lineNumber">A linha no arquivo onde o aviso é exibido.</param>
        <param name="columnNumber">A coluna no arquivo de onde o aviso é exibido.</param>
        <param name="endLineNumber">A linha final do arquivo onde o aviso é exibido.</param>
        <param name="endColumnNumber">A coluna final no arquivo onde o aviso é exibido.</param>
        <param name="messageResourceName">O nome de recurso da cadeia de caracteres a ser carregado.</param>
        <param name="messageArgs">Os argumentos para formatar a cadeia de caracteres carregada.</param>
        <summary>Registra um aviso com um aviso de código usando a cadeia de caracteres do recurso especificado e outros detalhes de aviso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a mensagem é iniciada com um código de aviso, o código é extraído e registrado com a mensagem.  
  
 Se um prefixo de palavra-chave de ajuda foi fornecido, ele também será registrado em log com a mensagem. A palavra-chave da ajuda é composta acrescentando-se o nome do recurso da cadeia de caracteres para o prefixo da palavra-chave da ajuda. Uma tarefa pode fornecer um prefixo de palavra-chave de ajuda com o construtor de classe base <xref:Microsoft.Build.Utilities.Task>, ou a propriedade <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A>.  
  
 Os parâmetros `subCategoryResourceName`, e `file` pode ser `null`.  
  
 Os parâmetros `lineNumber`, `columnNumber`, `endLineNumber`, e `endColumnNumber` deve ser definido como 0 se não estiverem disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MarkAsInactive">
      <MemberSignature Language="C#" Value="public void MarkAsInactive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkAsInactive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.MarkAsInactive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica isso <see langword="TaskLoggingHelper" /> que ele não é mais necessário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é thread-safe, no entanto, você deve chamar InitializeLifetimeService e MarkAsInactive, nessa ordem, ou você deve chamar nenhum método e você deve chamar nenhum método de uma vez.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskName">
      <MemberSignature Language="C#" Value="protected string TaskName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da tarefa pai.</summary>
        <value>O nome da tarefa pai.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskResources">
      <MemberSignature Language="C#" Value="public System.Resources.ResourceManager TaskResources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Resources.ResourceManager TaskResources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define os recursos específicos de cultura usados pelos métodos de registro em log.</summary>
        <value>Um <see cref="T:System.Resources.ResourceManager" /> que representa os recursos específicos de cultura usados pelos métodos de registro em log. Este valor pode ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se as classes derivadas têm localizado cadeias de caracteres, eles devem registrar seus recursos com essa propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
