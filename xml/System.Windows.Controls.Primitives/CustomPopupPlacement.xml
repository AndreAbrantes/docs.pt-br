<Type Name="CustomPopupPlacement" FullName="System.Windows.Controls.Primitives.CustomPopupPlacement">
  <TypeSignature Language="C#" Value="public struct CustomPopupPlacement" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CustomPopupPlacement extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define parâmetros de posicionamento personalizado para um controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Controls.Primitives.CustomPopupPlacement> estrutura define um local para um <xref:System.Windows.Controls.Primitives.Popup> controle em relação ao seu pai e define como o <xref:System.Windows.Controls.Primitives.Popup> move para se tornar mais visível quando ele é obscurecido por um limite de tela.  
  
 Um <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback?displayProperty=nameWithType> delegado retorna uma matriz dessas estruturas personalizadas como opções de posicionamento para uma <xref:System.Windows.Controls.Primitives.Popup> quando o <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> está definida como <xref:System.Windows.Controls.Primitives.PlacementMode.Custom>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPopupPlacement (System.Windows.Point point, System.Windows.Controls.Primitives.PopupPrimaryAxis primaryAxis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Controls.Primitives.PopupPrimaryAxis primaryAxis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="primaryAxis" Type="System.Windows.Controls.Primitives.PopupPrimaryAxis" />
      </Parameters>
      <Docs>
        <param name="point">O <see cref="T:System.Windows.Point" /> que é relativo a <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> onde o canto superior esquerdo do <see cref="T:System.Windows.Controls.Primitives.Popup" /> é colocado.</param>
        <param name="primaryAxis">O <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> ao longo do qual um <see cref="T:System.Windows.Controls.Primitives.Popup" /> controle move quando ele é obstruído por uma borda da tela.</param>
        <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">O <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura a ser comparado.</param>
        <summary>Compara a essa estrutura com outra <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura para determinar se eles são iguais.</summary>
        <returns>
          <see langword="true" />Se as estruturas têm os mesmos valores; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o código hash para esta estrutura.</summary>
        <returns>O código hash para esta estrutura.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.Primitives.CustomPopupPlacement placement1, System.Windows.Controls.Primitives.CustomPopupPlacement placement2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement1, valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placement1" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
        <Parameter Name="placement2" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
      </Parameters>
      <Docs>
        <param name="placement1">A primeira <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura a ser comparado.</param>
        <param name="placement2">O segundo <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura a ser comparado.</param>
        <summary>Compara dois <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estruturas para determinar se eles são iguais.</summary>
        <returns>
          <see langword="true" />Se as estruturas têm os mesmos valores; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.Primitives.CustomPopupPlacement placement1, System.Windows.Controls.Primitives.CustomPopupPlacement placement2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement1, valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placement1" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
        <Parameter Name="placement2" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
      </Parameters>
      <Docs>
        <param name="placement1">A primeira <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura a ser comparado.</param>
        <param name="placement2">O segundo <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estrutura a ser comparado.</param>
        <summary>Compara dois <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> estruturas para determinar se eles não são iguais.</summary>
        <returns>
          <see langword="true" />Se as estruturas não têm os mesmos valores; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o ponto que é relativa ao objeto de destino onde o canto superior esquerdo do <see cref="T:System.Windows.Controls.Primitives.Popup" /> controle é placedl.</summary>
        <value>Um <see cref="T:System.Windows.Point" /> que é usado para posicionar um <see cref="T:System.Windows.Controls.Primitives.Popup" /> controle. O valor padrão é (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto de destino é o elemento que o <xref:System.Windows.Controls.Primitives.Popup> é relativo. Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryAxis">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PopupPrimaryAxis PrimaryAxis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PopupPrimaryAxis PrimaryAxis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupPrimaryAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a direção na qual mover um <see cref="T:System.Windows.Controls.Primitives.Popup" /> controlar quando o <see cref="T:System.Windows.Controls.Primitives.Popup" /> é obscurecida por limites da tela.</summary>
        <value>A direção na qual mover um <see cref="T:System.Windows.Controls.Primitives.Popup" /> controlar quando o <see cref="T:System.Windows.Controls.Primitives.Popup" /> é obscurecida por limites da tela.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
