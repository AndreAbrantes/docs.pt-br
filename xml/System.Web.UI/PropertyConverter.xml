<Type Name="PropertyConverter" FullName="System.Web.UI.PropertyConverter">
  <TypeSignature Language="C#" Value="public static class PropertyConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PropertyConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém funções auxiliares para converter valores de propriedade em cadeias de caracteres.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PropertyConverter> classe é usada pela estrutura de página ASP.NET e não se destina a ser acessada diretamente no seu código. Você pode usar o <xref:System.Enum> estrutura para converter valores de cadeia de caracteres para e de enumeradores, ou <xref:System.ComponentModel.TypeConverter> para converter objetos.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumFromString">
      <MemberSignature Language="C#" Value="public static object EnumFromString (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object EnumFromString(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">Um <see cref="T:System.Type" /> que representa o tipo de enumeração para criar a partir de <c>valor</c> parâmetro.</param>
        <param name="value">O <see cref="T:System.String" /> que representa um valor do enumerador.</param>
        <summary>Converte a representação de cadeia de caracteres em um valor do tipo de enumeração especificado.</summary>
        <returns>Uma enumeração de tipo <paramref name="enumType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PropertyConverter.EnumFromString%2A> método é usado para converter um valor de cadeia de caracteres para o valor de enumeração equivalente.  
  
> [!NOTE]
>  Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código. Para converter um valor de cadeia de caracteres para o valor de enumeração equivalente, use o <xref:System.Enum.Parse%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="enumType" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="enumType" /> não é um <see cref="T:System.Enum" />.  
  
 \- ou -  
  
 <paramref name="value" />é uma cadeia de caracteres vazia ("") ou contém somente espaços em branco.  
  
 \- ou -  
  
 <paramref name="value" /> é um nome, mas não uma das constantes nomeadas definidas para a enumeração.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EnumToString">
      <MemberSignature Language="C#" Value="public static string EnumToString (Type enumType, object enumValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnumToString(class System.Type enumType, object enumValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="enumValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">Um <see cref="T:System.Type" /> que representa o tipo de enumeração de <c>enumValue</c>.</param>
        <param name="enumValue">O valor a ser convertido.</param>
        <summary>Converte o valor do tipo de enumeração especificado em sua representação de cadeia de caracteres equivalente.</summary>
        <returns>A representação da cadeia de caracteres de <paramref name="enumValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PropertyConverter.EnumToString%2A> método é usado para converter um valor de enumeração em sua representação de cadeia de caracteres equivalente.  
  
> [!NOTE]
>  Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código. Para converter um valor de enumeração em sua representação de cadeia de caracteres equivalente, use o <xref:System.Enum.Format%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="enumType" /> ou <paramref name="enumValue" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="enumType" /> não é um tipo <see cref="T:System.Enum" />.  
  
 \- ou -  
  
 O <paramref name="enumValue" /> parâmetro contém um valor de uma enumeração que difere no tipo de <paramref name="enumType" />.  
  
 \- ou -  
  
 O tipo de <paramref name="enumValue" /> não é um tipo subjacente de <paramref name="enumType" />.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjectFromString">
      <MemberSignature Language="C#" Value="public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ObjectFromString(class System.Type objType, class System.Reflection.MemberInfo propertyInfo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objType" Type="System.Type" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objType">O <see cref="T:System.Type" /> para criar a partir de <c>valor</c>.</param>
        <param name="propertyInfo">As propriedades para usar durante a conversão.</param>
        <param name="value">O <see cref="T:System.String" /> para converter em um objeto.</param>
        <summary>Converte o valor de cadeia de caracteres para o tipo de objeto especificado.</summary>
        <returns>Um objeto do tipo <paramref name="objType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PropertyConverter.ObjectFromString%2A> método é usado para converter um valor de cadeia de caracteres em um objeto.  
  
> [!NOTE]
>  Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código. Para converter um valor de cadeia de caracteres em um objeto, use o `Parse` método para o objeto se o objeto fornece um `Parse` método. Por exemplo, um <xref:System.Int32> objeto pode ser criado de uma cadeia de caracteres por meio de <xref:System.Int32.Parse%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Um objeto do tipo especificado pelo <paramref name="objType" /> não é possível criar o <paramref name="value" /> parâmetro.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
