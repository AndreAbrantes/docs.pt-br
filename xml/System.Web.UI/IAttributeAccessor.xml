<Type Name="IAttributeAccessor" FullName="System.Web.UI.IAttributeAccessor">
  <TypeSignature Language="C#" Value="public interface IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define métodos usados por controles de servidor ASP.NET para fornecer acesso programático a qualquer atributo declarado na marca de abertura de um controle de servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você criar um controle de servidor personalizado que herda o <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, ou <xref:System.Web.UI.WebControls.ListItem> classe, o .NET Framework automaticamente fornece acesso programático aos atributos porque cada uma dessas classes que implementam o <xref:System.Web.UI.IAttributeAccessor> interface.  
  
 Se você criar um controle de servidor personalizado que não herda de uma dessas classes e planejar permitir acesso programático aos atributos que não coincidem com as propriedades do controle com rigidez de tipos, certifique-se de implementar o <xref:System.Web.UI.IAttributeAccessor> interface.  
  
   
  
## Examples  
 [!code-csharp[IAttributeAccessor_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#1)]
 [!code-vb[IAttributeAccessor_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Um <see cref="T:System.String" /> que representa o nome do atributo de controle de servidor.</param>
        <summary>Quando implementado por uma classe, recupera a propriedade de atributo especificado no controle do servidor.</summary>
        <returns>O valor do atributo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra uma implementação de <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> método.  
  
 [!code-csharp[IAttributeAccessor_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#3)]
 [!code-vb[IAttributeAccessor_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome do atributo a ser definido.</param>
        <param name="value">O valor atribuído ao atributo.</param>
        <summary>Quando implementado por uma classe, designa um atributo e seu valor a ser atribuído ao controle de servidor ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra uma possível implementação de <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> método.  
  
 [!code-csharp[IAttributeAccessor_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#2)]
 [!code-vb[IAttributeAccessor_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
