<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define um controle e um evento opcional do controle como um gatilho de controle de postback assíncrono que faz o controle <see cref="T:System.Web.UI.UpdatePanel" /> ser atualizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.AsyncPostBackTrigger> controle para ativar os controles para os gatilhos para ser um <xref:System.Web.UI.UpdatePanel> controle. Controles que são gatilhos para um painel de atualização causam uma atualização do conteúdo do painel após um postback assíncrono. Definir um controle de disparador assíncrona é útil nos seguintes cenários:  
  
-   Para controles que estão fora de um painel.  
  
-   Para controles que estão dentro de um painel quando o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> é de propriedade `false`.  
  
-   Para controles que estão dentro de painéis aninhados, para fazer com que uma atualização de painéis do pai.  
  
 O controle que o <xref:System.Web.UI.AsyncPostBackTrigger> referências de controle devem ser no mesmo contêiner de nomeação, como o painel de atualização para as quais ele é um gatilho. Não há suporte para gatilhos que são baseados em controles em outros contêineres de nomenclatura.  
  
 Adicionar <xref:System.Web.UI.AsyncPostBackTrigger> controla usando o **Coleção UpdatePanelTrigger** caixa de diálogo no designer ou criando uma `Triggers` elemento declarativamente no <xref:System.Web.UI.UpdatePanel> controle. O <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> propriedade é necessária, mas o <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriedade é opcional. Se o <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriedade não for especificada, o <xref:System.ComponentModel.DefaultEventAttribute> atributo do controle é usado para determinar o evento padrão. Por exemplo, o evento padrão para o <xref:System.Web.UI.WebControls.Button> controle é o <xref:System.Web.UI.WebControls.Button.Click> evento. O <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriedade diferencia maiusculas de minúsculas.  
  
 Você também pode referenciar um contêiner de nomenclatura como um disparador. Nesse caso, todos os controles filho no contêiner que causam um postback são considerados gatilhos para o <xref:System.Web.UI.UpdatePanel> controle.  
  
 Adicionando programaticamente <xref:System.Web.UI.AsyncPostBackTrigger> não há suporte para controles. Para registrar programaticamente um controle de postagem, use o <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método o <xref:System.Web.UI.ScriptManager> controle. Em seguida, chame o <xref:System.Web.UI.UpdatePanel.Update%2A> método do <xref:System.Web.UI.UpdatePanel> controlar quando o controle envia de volta.  
  
 Se você definir um controle usando <xref:System.Web.UI.PostBackTrigger> e <xref:System.Web.UI.AsyncPostBackTrigger>, uma exceção será lançada.  
  
   
  
## Examples  
 O exemplo a seguir mostra como adicionar um <xref:System.Web.UI.AsyncPostBackTrigger> controle declarativamente. Um <xref:System.Web.UI.WebControls.Button> controle que está fora de um <xref:System.Web.UI.UpdatePanel> controle, que permite aos usuários inserir um termo de pesquisa para localizar no `Products` tabela do banco de dados Northwind. Um <xref:System.Web.UI.WebControls.GridView> controle que está dentro do <xref:System.Web.UI.UpdatePanel> controle mostra os resultados. O <xref:System.Web.UI.WebControls.Button> controle é especificado como um disparador assíncrono para o <xref:System.Web.UI.UpdatePanel> controle.  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância de um <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adicionar <xref:System.Web.UI.AsyncPostBackTrigger> controla usando o **Coleção UpdatePanelTrigger** caixa de diálogo no designer ou criando uma `Triggers` elemento declarativamente no <xref:System.Web.UI.UpdatePanel> controle.  
  
 Adicionando <xref:System.Web.UI.AsyncPostBackTrigger> controles programaticamente não tem suporte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do controle que dispara um postback assíncrono para um <see cref="T:System.Web.UI.UpdatePanel" /> controle.</summary>
        <value>Uma ID de controle de servidor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o evento de controle de postback que dispara um controle <see cref="T:System.Web.UI.UpdatePanel" /> a ser atualizado.</summary>
        <value>O nome do evento. O valor padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriedade é opcional. Se não for especificado, o <xref:System.ComponentModel.DefaultEventAttribute> atributo do controle é usado para determinar o evento padrão. A tabela a seguir lista os eventos padrão para alguns controles comuns do ASP.NET 2.0.  
  
|Controle|Evento padrão|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um valor que indica se o gatilho foi invocado.</summary>
        <returns>
          <see langword="true" />Se o gatilho foi chamado; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os desenvolvedores de controle podem substituir o <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> método para fornecer lógica personalizada para determinar se o disparador foi invocado. Para ver um gatilho personalizado no `Triggers` elemento o <xref:System.Web.UI.UpdatePanel> controle, você pode adicionar uma diretiva para a página ou o elemento do arquivo Web. config.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa o <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> controlar e determina se o evento que é chamado no gatilho existe e se é válido.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Não <see cref="T:System.Web.UI.ScriptManager" /> controle foi encontrado na página.  
  
 \- ou -  
  
 O evento que é nomeado o <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> propriedade não foi encontrada para o controle que é nomeado o <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> propriedade.  
  
 \- ou -  
  
 O evento que é nomeado o <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> propriedade para o controle que é nomeado o <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> propriedade não corresponde a uma assinatura de manipulador de eventos padrão.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">O remetente do evento.</param>
        <param name="e">Os dados do evento.</param>
        <summary>Gera o evento que irá disparar um postback e atualização de um <see cref="T:System.Web.UI.UpdatePanel" /> controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma representação de cadeia de caracteres do atual <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> controle.</summary>
        <returns>Uma cadeia de caracteres que representa o atual <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> controle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
