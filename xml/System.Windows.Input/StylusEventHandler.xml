<Type Name="StylusEventHandler" FullName="System.Windows.Input.StylusEventHandler">
  <TypeSignature Language="C#" Value="public delegate void StylusEventHandler(object sender, StylusEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StylusEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusEventHandler" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A fonte do evento.</param>
    <param name="e">Os dados do evento.</param>
    <summary>Representa o m√©todo que manipula um evento de caneta para uma classe que a implementa o <see cref="T:System.Windows.IInputElement" /> interface.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.StylusEventHandler> delegado para designar um manipulador para o <xref:System.Windows.Input.Stylus.StylusDown> evento.  
  
 [!code-csharp[StylusSnippets#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSnippets/CSharp/Window1.xaml.cs#18)]
 [!code-vb[StylusSnippets#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSnippets/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
