<Type Name="HtmlHeadBuilder" FullName="System.Web.UI.HtmlControls.HtmlHeadBuilder">
  <TypeSignature Language="C#" Value="public class HtmlHeadBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlHeadBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlHeadBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interage com o analisador para criar um <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> controle.</summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides">
      <para>Para criar um construtor de controle personalizado para um <see cref="T:System.Web.UI.HtmlControls.HtmlHead" />-derivado de controle, você precisa herdar dessa classe.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlHeadBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlHeadBuilder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.AllowWhitespaceLiterals" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se os caracteres de espaço em branco literal no controle devem ser processados ou ignorados.</summary>
        <returns>
          <see langword="false" /> em todos os casos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação do <xref:System.Web.UI.HtmlControls.HtmlHeadBuilder.AllowWhitespaceLiterals%2A> método é substituído para retornar sempre `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlHeadBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">O nome da marca do controle filho.</param>
        <param name="attribs">Uma matriz de atributos contidos no controle filho.</param>
        <summary>Obtém o <see cref="T:System.Type" /> para o <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> os controles filho do controle.</summary>
        <returns>O <see cref="T:System.Type" /> de controle do filho do controle especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlHeadBuilder.GetChildControlType%2A> método retorna o tipo de controle para elementos HTML de filho representados por <xref:System.Web.UI.HtmlControls.HtmlTitle>, <xref:System.Web.UI.HtmlControls.HtmlLink>, e <xref:System.Web.UI.HtmlControls.HtmlMeta> controles. Esse método retorna uma referência nula (`Nothing` no Visual Basic) para todos os outros controles filho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
