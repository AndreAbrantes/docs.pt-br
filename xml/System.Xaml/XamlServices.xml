<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece serviços de nível superior (métodos estáticos) para as tarefas comuns de XAML de ler XAML e gravar um grafo de objeto; ou ler um grafo de objeto e gravar a saída do arquivo XAML para fins de serialização.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os modos do <xref:System.Xaml.XamlServices> classe que são usados no XAML mais comuns lendo e gravando cenários dependem de criar instâncias de leitores XAML e gravadores XAML. Esses leitores e gravadores são implementações especializadas mas internas de classes públicas, como <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, e <xref:System.Xaml.XamlObjectWriter>. Para usar <xref:System.Xaml.XamlServices> na maioria dos cenários, você pode contar com as implementações padrão de interna para obter os resultados desejados. Para cenários mais especializados, você pode definir os leitores e gravadores por conta própria e passá-las como argumentos para as sobrecargas do <xref:System.Xaml.XamlServices> métodos.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>é não o XAML para leitura ou XAML recomendado escrevendo API definida se você estiver processando tipos definidos pelo WPF ou tipos baseados em WPF. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para ler ou carregamento XAML (ou BAML); e <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para write-back de XAML. Essas classes usam APIs de serviços XAML do .NET Framework e leitores XAML e gravadores XAML internamente em sua implementação; No entanto, eles também fornecem suporte e o contexto do esquema XAML especializado para conceitos específicos do WPF, como otimizações para propriedades de dependência e WPF tipos conhecidos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">O fluxo para carregar como entrada.</param>
        <summary>Carrega um <see cref="T:System.IO.Stream" /> fonte para um leitor XAML e grava a saída como um gráfico de objeto.</summary>
        <returns>O gráfico de objeto que é gravado como saída.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Assinaturas diferentes para o <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> método especificar diferentes tipos de entrada para a fonte de XAML. O <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> implementação interna cria primeiro um <xref:System.Xml.XmlReader> chamando <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> e, em seguida, cria uma nova instância de um especializado <xref:System.Xaml.XamlReader> que processa a entrada.  
  
 Para que o <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> chamada para criar com êxito um gráfico de objeto, o seguinte deve ser verdadeiro:  
  
-   A fonte está bem formada e um XML válido.  
  
-   A fonte é XAML válido no nível de linguagem.  
  
-   Os tipos XAML que são especificados na origem XAML deve ser resolvido para os tipos de backup nos namespaces XAML relevantes. Por exemplo, tipos XAML para namespaces do WPF podem resolver para um namespace XAML WPF conforme especificado no XAML; os assemblies do WPF devem ser incluído no projeto ou disponíveis em tempo de execução; e assim por diante.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>não é recomendada leitura XAML ou XAML gravar API definida se você estiver processando [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos ou tipos baseados em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para ler ou carregamento XAML; e <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para write-back de XAML. Usam essas classes <xref:System.Xaml> APIs internamente em sua implementação; no entanto, eles também fornecem suporte para conceitos específicos do WPF que influenciam a natureza do XAML para leitura e gravação, como otimizações para propriedades de dependência.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">O <see cref="T:System.IO.TextReader" /> para usar como base para a criação <see cref="T:System.Xml.XmlReader" />.</param>
        <summary>Cria um leitor XAML de um <see cref="T:System.IO.TextReader" />e retorna um gráfico de objeto.</summary>
        <returns>O grafo de objeto que é retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para retornar o gráfico de objeto, o `textReader` entrada deve ser construída usando sua entrada relevante. Por exemplo, ele deve passar um <xref:System.IO.StringReader> que é construído usando uma entrada de XAML como cadeia de caracteres válida para o <xref:System.IO.StringReader.%23ctor%28System.String%29> construtor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">O nome do arquivo para carregar e usar como origem.</param>
        <summary>Carrega um <see cref="T:System.IO.Stream" /> fonte para um leitor XAML e retorna um gráfico de objeto.</summary>
        <returns>O grafo de objeto que é retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Assinaturas diferentes para o <xref:System.Xaml.XamlServices.Load%2A> método especificar diferentes tipos de entrada para a fonte de XAML. O <xref:System.Xaml.XamlServices.Load%2A> implementação interna cria primeiro um <xref:System.Xml.XmlReader> chamando <xref:System.Xml.XmlReader.Create%28System.String%29> e, em seguida, cria uma nova instância de um especializado <xref:System.Xaml.XamlReader> que processa a entrada.  
  
 Para que o <xref:System.Xaml.XamlServices.Load%28System.String%29> chamada para criar com êxito um gráfico de objeto, o seguinte deve ser verdadeiro:  
  
-   A fonte está bem formada e um XML válido.  
  
-   A fonte é XAML válido no nível de linguagem.  
  
-   Os tipos XAML que são especificados na origem XAML deve ser resolvido para os tipos de backup nos namespaces XAML relevantes. Por exemplo, tipos XAML para namespaces do WPF podem resolver para um namespace XAML WPF conforme especificado no XAML; os assemblies do WPF devem ser incluídos no projeto ou estar disponível em tempo de execução; e assim por diante.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="fileName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">A implementação de leitor XAML para usar como o leitor para este <see langword="Load" /> operação.</param>
        <summary>Carrega uma implementação de leitor XAML específica e retorna um gráfico de objeto.</summary>
        <returns>O grafo de objeto que é retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você normalmente deve usar essa assinatura apenas nos seguintes casos:  
  
-   Você definiu sua própria implementação de um <xref:System.Xaml.XamlReader>.  
  
-   Você especificou as configurações para um <xref:System.Xaml.XamlReader> que diferem das configurações padrão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> implementação para usar como o leitor para este <see langword="Load" /> operação.</param>
        <summary>Carrega uma implementação específica de leitor XML e retorna um gráfico de objeto.</summary>
        <returns>O gráfico de objeto de saída.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você normalmente deve usar essa assinatura apenas se você tiver definido sua própria implementação de um <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">A entrada de cadeia de caracteres XAML a ser analisada.</param>
        <summary>Lê o XAML como saída de cadeia de caracteres e retorna um grafo de objeto.</summary>
        <returns>O grafo de objeto que é retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para que o <xref:System.Xaml.XamlServices.Parse%2A> chamada para criar com êxito uma árvore de objetos, o seguinte deve ser verdadeiro:  
  
-   O `xaml` entrada esteja bem formada e um XML válido.  
  
-   O `xaml` entrada é XAML válido no nível de linguagem.  
  
-   Os tipos XAML que são especificados no `xaml` entrada deve ser resolvido para fazendo tipos nos namespaces XAML relevantes. Por exemplo, tipos XAML para um namespace do WPF podem resolver para um namespace XAML WPF conforme especificado no XAML; os assemblies do WPF devem ser incluídos no projeto ou estar disponível em tempo de execução; e assim por diante.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>não é recomendada leitura XAML ou XAML gravar API definida se você estiver processando [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos ou tipos baseados em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para ler ou carregamento XAML, e <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para write-back de XAML. Usam essas classes <xref:System.Xaml> APIs internamente em sua implementação; no entanto, eles também fornecem suporte para conceitos específicos do WPF que influenciam a natureza do XAML para leitura e gravação, como otimizações para propriedades de dependência.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="xaml" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa uma árvore de objeto fornecido em uma representação de nó XAML e retorna uma representação de cadeia de caracteres de saída do XAML.</summary>
        <returns>A saída de marcação XAML como uma cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A saída desse método é o `ToString` resultado de uma <xref:System.Xml.XmlWriter> que é criado pela chamada de método. Que <xref:System.Xml.XmlWriter> é criado usando as seguintes configurações: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> é `true`; e <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> é `true`.  
  
 A cadeia de caracteres retornada pode ser carregada como um XML válido por meio de <xref:System.Xml.XmlReader.Create%2A> método se você processou a cadeia de caracteres em um fluxo, ou em um leitor mais especificamente dedicado para XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">O fluxo de destino.</param>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em um fluxo de saída para a serialização.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>não é recomendada leitura XAML ou XAML gravar API definida se você estiver processando [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] tipos ou tipos baseados em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Para [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uso, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> para ler ou carregamento XAML; e <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> para write-back de XAML. Usam essas classes <xref:System.Xaml> APIs internamente em sua implementação; no entanto, eles também fornecem suporte para conceitos específicos do WPF que influenciam a natureza do XAML para leitura e gravação, como otimizações para propriedades de dependência.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="stream" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em uma saída que seja fornecido <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">O nome e o local do arquivo para gravar a saída.</param>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, grava-o em um arquivo de saída em um local fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `fileName` o valor do parâmetro é usado como o `outputFileName` de entrada para uma chamada para <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, que cria um <xref:System.Xml.XmlWriter> como parte da chamada de método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> é uma cadeia de caracteres vazia.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xaml.XamlWriter" /> implementação para usar.</param>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e grava-o gravador XAML fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você normalmente deve usar essa assinatura apenas nos seguintes casos:  
  
-   Você definiu sua própria implementação de um <xref:System.Xaml.XamlWriter>.  
  
-   Você especificou as configurações para o <xref:System.Xaml.XamlWriter> que diferem das configurações padrão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> implementação para usar.</param>
        <param name="instance">A raiz do gráfico de objeto para processar.</param>
        <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, grava fornecido <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">O <see cref="T:System.Xaml.XamlReader" /> implementação para usar.</param>
        <param name="xamlWriter">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
        <summary>Conecta-se um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um conjunto intermediário comum de nós XAML. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é um wrapper em torno <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, onde `closeWriter` é especificado como `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />ou <paramref name="xamlWriter" /> entrada é <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">O contexto do esquema XAML não corresponde entre fornecido <paramref name="xamlReader" /> e <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">O <see cref="T:System.Xaml.XamlReader" /> implementação para usar.</param>
        <param name="xamlWriter">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
        <param name="closeWriter">
          <see langword="true" />para fechar o gravador após a chamada for concluída; <see langword="false" /> para deixar o gravador ativa na última posição escrita.</param>
        <summary>Conecta-se um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um conjunto intermediário comum de nós XAML. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos. Fornece um parâmetro para especificar se deseja fechar o gravador depois da chamada ser concluída.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />ou <paramref name="xamlWriter" /> entrada é <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">O contexto do esquema XAML não corresponde entre fornecido <paramref name="xamlReader" /> e <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
