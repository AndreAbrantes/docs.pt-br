<Type Name="ICollectionContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;">
  <TypeSignature Language="C#" Value="public interface ICollectionContract&lt;C&gt; : System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollectionContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.ICollectionContract`1" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">O tipo dos elementos na coleção. <c>C</c> deve implementar o <see cref="T:System.AddIn.Contract.IContract" /> interface.</typeparam>
    <summary>Representa uma coleção genérica de <see cref="T:System.AddIn.Contract.IContract" /> objetos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.AddIn.Contract.Collections.ICollectionContract%601> pode ser redimensionada dinamicamente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.AddIn.Contract.IContract" /> para adicionar ao <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Adiciona um <see cref="T:System.AddIn.Contract.IContract" /> para o <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar se um <xref:System.AddIn.Contract.Collections.ICollectionContract%601> é somente leitura, chame o <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os elementos do <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar se um <xref:System.AddIn.Contract.Collections.ICollectionContract%601> é somente leitura, chame o <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.AddIn.Contract.IContract" /> a ser localizado no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Retorna um valor que indica se o especificado <see cref="T:System.AddIn.Contract.IContract" /> está no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>
          <see langword="true" />Se especificado <see cref="T:System.AddIn.Contract.IContract" /> está no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (C[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!C[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="C[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">A matriz unidimensional que é o destino dos elementos copiados do <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <param name="arrayIndex">O índice de base zero em <c>matriz</c> no qual a cópia começa.</param>
        <summary>Copia todo o <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> para uma matriz unidimensional compatível, iniciando no índice especificado da matriz de destino.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayIndex" /> é menor que 0.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> é multidimensional.  
  
 -ou-  
  
 O número de elementos na origem <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> é maior que o espaço disponível do <paramref name="arrayIndex" /> ao final da matriz de destino.  
  
 -ou-  
  
 Tipo <paramref name="C" /> não pode ser convertido automaticamente para o tipo da matriz de destino.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o número de elementos contidos no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>O número de elementos contidos no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um valor que indica se o <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> é somente leitura.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.AddIn.Contract.IContract" /> a ser removido de <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Remove a primeira ocorrência de um determinado <see cref="T:System.AddIn.Contract.IContract" /> do <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>
          <see langword="true" /> se <paramref name="item" /> for removido com êxito; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se <paramref name="item" /> não tiver sido encontrado no <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar se um <xref:System.AddIn.Contract.Collections.ICollectionContract%601> é somente leitura, chame o <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> é somente leitura.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
