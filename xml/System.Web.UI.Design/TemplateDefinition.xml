<Type Name="TemplateDefinition" FullName="System.Web.UI.Design.TemplateDefinition">
  <TypeSignature Language="C#" Value="public class TemplateDefinition : System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateDefinition extends System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TemplateDefinition" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos e propriedades que definem um elemento de modelo em um controle de servidor Web em tempo de design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.TemplateDefinition> classe fornece uma classe de definição de modelo base que pode ser herdada de e estendida para um designer de controle para usar para fornecer suporte para controles de modelo em um host de design como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Um design de host usa as propriedades e métodos do <xref:System.Web.UI.Design.TemplateDefinition> classe para facilitar a criação e edição de um modelo em tempo de design.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como derivar uma classe personalizada do <xref:System.Web.UI.Design.ControlDesigner> classe. Esse designer de controle dá suporte a um controle com quatro modelos possíveis.  
  
 Para experimentar, adicione uma referência ao assembly System.Design.dll, compile o código e, em seguida, em um design de host, como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], examine a página no modo de Design. Selecione o controle, clique na lista de ação para selecionar um modelo a ser modificado e, em seguida, usar o recurso de arrastar e soltar para mover os controles no modelo.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designer">O pai <see cref="T:System.Web.UI.Design.ControlDesigner" /> objeto.</param>
        <param name="name">O nome do modelo.</param>
        <param name="templatedObject">O objeto que contém o modelo.</param>
        <param name="templatePropertyName">O nome da propriedade que representa este modelo no **propriedades** lista no host de design.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Web.UI.Design.TemplateDefinition" /> classe usando o designer fornecido, o nome do modelo, o modelo e o nome da propriedade.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" />is <see langword="null" />,  
  
 -ou-  
  
 <paramref name="templatedObject" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">O pai <see cref="T:System.Web.UI.Design.ControlDesigner" /> objeto.</param>
        <param name="name">O nome do modelo.</param>
        <param name="templatedObject">O objeto que contém o modelo.</param>
        <param name="templatePropertyName">O nome da propriedade que representa este modelo no **propriedades** lista no host de design.</param>
        <param name="serverControlsOnly">Um valor booliano que indica se o conteúdo do modelo deve permitir que somente os controles de servidor Web.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Web.UI.Design.TemplateDefinition" /> classe usando o designer fornecido, nome do modelo, modelo, nome da propriedade e se deseja limitar o conteúdo do modelo para controles de servidor Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" />is <see langword="null" />,  
  
 -ou-  
  
 <paramref name="templatedObject" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="designer">O pai <see cref="T:System.Web.UI.Design.ControlDesigner" /> objeto.</param>
        <param name="name">O nome do modelo.</param>
        <param name="templatedObject">O objeto que contém o modelo.</param>
        <param name="templatePropertyName">O nome da propriedade que representa este modelo no **propriedades** lista no host de design.</param>
        <param name="style">Um <see cref="T:System.Web.UI.WebControls.Style" /> objeto ao qual aplicar a cada modelo.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Web.UI.Design.TemplateDefinition" /> classe usando o designer fornecido, o nome do modelo, o modelo, o nome da propriedade, e <see cref="T:System.Web.UI.WebControls.Style" /> objeto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" />is <see langword="null" />,  
  
 -ou-  
  
 <paramref name="templatedObject" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">O pai <see cref="T:System.Web.UI.Design.ControlDesigner" /> objeto.</param>
        <param name="name">O nome do modelo.</param>
        <param name="templatedObject">O objeto que contém o modelo.</param>
        <param name="templatePropertyName">O nome da propriedade que representa este modelo no **propriedades** lista no host de design.</param>
        <param name="style">Um <see cref="T:System.Web.UI.WebControls.Style" /> objeto ao qual aplicar a cada modelo.</param>
        <param name="serverControlsOnly">Um valor booliano que indica se o modelo deve limitar o conteúdo para controles de servidor Web.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Web.UI.Design.TemplateDefinition" /> classe usando o designer fornecido, o nome do modelo, o modelo, o nome da propriedade, <see cref="T:System.Web.UI.WebControls.Style" /> objeto e se deseja limitar o conteúdo para controles de servidor Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" />is <see langword="null" />,  
  
 -ou-  
  
 <paramref name="templatedObject" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEditing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.AllowEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o modelo deve permitir a edição do seu conteúdo.</summary>
        <value>
          <see langword="true" />Se a edição é permitida; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para alterar o padrão, as classes derivadas devem substituir o <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a marcação HTML que representa o conteúdo do modelo.</summary>
        <value>Marcação HTML para o conteúdo do modelo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera um valor que indica se o modelo deve limitar o conteúdo para controles de servidor Web, como definido no <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> construtor. Esta propriedade é somente para leitura.</summary>
        <value>
          <see langword="true" />Se o conteúdo é limitado a controles de servidor Web; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o estilo que deve ser aplicado ao modelo como definido no <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> construtor. Esta propriedade é somente para leitura.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.Style" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora o <xref:System.Web.UI.WebControls.Style> propriedade é somente leitura, as propriedades da <xref:System.Web.UI.WebControls.Style> pode ser definido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera ou define um valor que indica se o modelo dá suporte à associação de dados.</summary>
        <value>
          <see langword="true" />Se o modelo dá suporte à associação de dados; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedObject">
      <MemberSignature Language="C#" Value="public object TemplatedObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TemplatedObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o componente no qual reside o modelo. Esta propriedade é somente para leitura.</summary>
        <value>O componente como definido quando isso <see cref="T:System.Web.UI.Design.TemplateDefinition" /> foi criado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora isso <xref:System.Web.UI.Design.TemplateDefinition.TemplatedObject%2A> propriedade é somente leitura, suas propriedades podem ser definidas e se <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> for true, o conteúdo pode ser editado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyName">
      <MemberSignature Language="C#" Value="public string TemplatePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome da propriedade para o modelo de host de design deve exibir na grade de propriedades.</summary>
        <value>O nome do modelo como ele deve aparecer no **propriedades** lista de host de design.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
