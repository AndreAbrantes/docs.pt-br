<Type Name="ExpressionsCollectionConverter" FullName="System.Web.UI.Design.ExpressionsCollectionConverter">
  <TypeSignature Language="C#" Value="public class ExpressionsCollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionsCollectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionsCollectionConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece um conversor de tipo de expressão coleções de associação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classe converte um <xref:System.Web.UI.ExpressionBindingCollection> para uma cadeia de caracteres para a grade de edição de propriedade em tempo de design, que sempre aparece como uma cadeia de caracteres vazia ("").  
  
 Um designer de host, tais como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], usa o <xref:System.Web.Compilation.ExpressionBuilder> e <xref:System.Web.UI.Design.ExpressionEditor> classe implementações com o <xref:System.Web.UI.Design.ExpressionsCollectionEditor> e <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classes para definir as associações de expressão de propriedades de controle em tempo de design e o <xref:System.Web.UI.Design.ControlPersister> para manter as expressões de tempo de execução. Cadeias de caracteres de expressão fazem referência a um recurso localizável, uma configuração de aplicativo, uma cadeia de caracteres de conexão ou um tipo de expressão personalizada. A cadeia de caracteres de expressão é associada à propriedade de controle em tempo de design e, em seguida, usada em tempo de execução para determinar o valor da propriedade.  
  
> [!NOTE]
>  Você nunca deve acessar diretamente um conversor de tipo. Essa implementação de <xref:System.ComponentModel.TypeConverter> destina-se somente para uso por um <xref:System.Web.UI.ExpressionBindingCollection> objeto em tempo de design.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionsCollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Você nunca deve acessar diretamente um conversor de tipo. Essa implementação de <xref:System.ComponentModel.TypeConverter> destina-se somente para uso por um <xref:System.Web.UI.ExpressionBindingCollection> objeto em tempo de design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> objeto que indica o componente ou controle a expressão de associação de coleção pertence.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> objeto que pode ser usado para fornecer informações de cultura adicional.</param>
        <param name="value">O objeto a ser convertido.</param>
        <param name="destinationType">O tipo para o qual converter.</param>
        <summary>Converte uma coleção de associação de expressão para o tipo especificado.</summary>
        <returns>Se <paramref name="destinationType" /> não é do tipo <see cref="T:System.String" />, do objeto produzido pela conversão de tipo; caso contrário, se <paramref name="destinationType" /> é uma cadeia de caracteres, uma cadeia de caracteres vazia ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Você nunca deve acessar diretamente um conversor de tipo. Essa implementação de <xref:System.ComponentModel.TypeConverter> destina-se somente para uso por um <xref:System.Web.UI.ExpressionBindingCollection> objeto em tempo de design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
