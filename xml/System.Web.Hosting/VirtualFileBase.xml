<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a implementação de núcleo para o <see cref="T:System.Web.Hosting.VirtualFile" /> e <see cref="T:System.Web.Hosting.VirtualDirectory" /> objetos. Uma classe abstrata, ele não pode ser instanciado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Hosting.VirtualFileBase> classe abstrata fornece os métodos comuns e propriedades compartilhadas entre o <xref:System.Web.Hosting.VirtualFile> e <xref:System.Web.Hosting.VirtualDirectory> objetos. Implementações dessas classes fornece o tempo de execução do ASP.NET com acesso a arquivos e caminhos usados para compilação. Para obter mais informações sobre como usar arquivos virtuais e caminhos, consulte o <xref:System.Web.Hosting.VirtualPathProvider> classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando você herda o <see cref="T:System.Web.Hosting.VirtualFileBase" /> classe, você deve substituir o <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> propriedade para indicar se o objeto derivado é um diretório virtual ou um arquivo virtual. Se você derivar do <see cref="T:System.Web.Hosting.VirtualFile" /> ou <see cref="T:System.Web.Hosting.VirtualDirectory" /> classe, o <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> propriedade já está definida.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa a classe para uso por uma instância de classe herdada. Este construtor pode ser chamado somente por uma classe herdada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora diretamente, você não pode construir uma instância do <xref:System.Web.Hosting.VirtualFileBase> classe, você pode chamar o construtor do construtor de uma classe herdada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece um <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância tempo de vida infinito, impedindo que uma concessão que está sendo criado.</summary>
        <returns>Sempre <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método na sua classe base. Sempre retorna `null` e, portanto, impede que uma concessão de ser criado que limita o tempo de vida do arquivo virtual ou diretório.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância representa um arquivo virtual ou um diretório virtual.</summary>
        <value>
          <see langword="true" />Se o <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância é uma máquina virtual, diretório; caso contrário, <see langword="false" /> se o <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância é um arquivo virtual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome de exibição do recurso virtual.</summary>
        <value>O nome de exibição do arquivo virtual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Hosting.VirtualFileBase.Name%2A> propriedade é normalmente o nome de arquivo e extensão associado ao recurso, embora recursos virtuais podem usar nomes arbitrários.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>O <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> propriedade deve retornar a caixa correta do recurso virtual para o provedor de caminho virtual. A caixa correta pode ser diferente de maiusculas e minúsculas no caminho original.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o caminho do arquivo virtual.</summary>
        <value>O caminho para o arquivo virtual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> propriedade retorna o caminho para o arquivo ou diretório representado pelo objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
