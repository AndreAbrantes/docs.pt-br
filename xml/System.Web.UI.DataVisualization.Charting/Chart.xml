<Type Name="Chart" FullName="System.Web.UI.DataVisualization.Charting.Chart">
  <TypeSignature Language="C#" Value="public class Chart : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Chart" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataVisualization.Charting.ChartWebDesigner, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Chart runat=server&gt;&lt;Series&gt;&lt;{0}:Series Name="Series1"&gt;&lt;/{0}:Series&gt;&lt;/Series&gt;&lt;ChartAreas&gt;&lt;{0}:ChartArea Name="ChartArea1"&gt;&lt;/{0}:ChartArea&gt;&lt;/ChartAreas&gt;&lt;/{0}:Chart&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serve como a classe raiz do controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe expõe todas as propriedades, métodos e eventos do controle da Web do gráfico.  
  
 Duas propriedades importantes do <xref:System.Web.UI.DataVisualization.Charting.Chart> classe o <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> e <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> propriedades, que são propriedades de coleção. O <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> repositórios de propriedades de coleção <xref:System.Web.UI.DataVisualization.Charting.Series> objetos, que são usados para armazenar dados a ser exibida, juntamente com os atributos dos dados. O <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> repositórios de propriedades de coleção <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objetos, que são usados principalmente para desenhar um ou mais gráficos usando um conjunto de eixos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse construtor para criar uma nova instância do <xref:System.Web.UI.DataVisualization.Charting.Chart> classe em tempo de execução.  
  
 No entanto, para simplificar, é recomendável que você crie um <xref:System.Web.UI.DataVisualization.Charting.Chart> instância em tempo de design.  
  
 Este é o objeto raiz do <xref:System.Web.UI.DataVisualization.Charting.Chart> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Alinha os pontos de dados ao longo do eixo X usando seus rótulos de eixo. Aplicável quando várias séries são indexadas e seus valores de X são cadeias de caracteres.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">Uma lista de séries separada por vírgula que terá seus pontos de dados alinhados com o eixo X usando rótulos de eixo do ponto de dados.</param>
        <summary>Alinha os pontos de dados de séries diferentes ao longo do eixo X usando seus rótulos de eixo. A série especificada no gráfico é alinhada usando uma ordem de classificação crescente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para alinhar pontos de dados de séries diferentes ao longo do eixo X usando seus rótulos de eixo e é aplicável quando:  
  
-   Várias séries são exibidos e são indexados; ou seja, todos os pontos de dados têm um <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> 0, ou o <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> é de propriedade `true`.  
  
-   Todos os pontos de dados têm rótulos do eixo de não vazio, que são exclusivos para seus <xref:System.Web.UI.DataVisualization.Charting.Series>. Se eles não forem exclusivos, uma exceção será lançada.  
  
 Essa situação é muito comum quando a associação de dados resulta na criação de várias séries, e `string` valores são usados para valores do eixo x.  
  
 Dois problemas podem surgir quando vários indexado séries são plotadas e os valores de X são definidos usando `string` valores:  
  
-   Não é garantir que os pontos de dados de séries diferentes com a mesma cadeia de valores de X serão plotados no mesmo índice ao longo do eixo X.  
  
-   Somente o rótulo do eixo dos pontos de dados na primeira série será exibido, mesmo que os pontos de dados de outras séries com o mesmo índice tenham rótulos de eixo muito.  
  
 Por padrão, os pontos são plotados na ordem em que eles são armazenados em sua série. Para especificar uma ordem de classificação, use um `AlignDataPointsByAxisLabel` sobrecarga do método que tem um `sortingOrder` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder">Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> que indica se a ordem de classificação crescente ou decrescente é usada em rótulos de eixo, que, por sua vez, determina a ordem na qual os pontos que ocupavam anteriormente o mesmo espaço de eixo são exibidos.</param>
        <summary>Alinha os pontos de dados usando seus rótulos de eixo. Todas as séries do gráfico são alinhadas, usando a ordem de classificação especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">Uma lista separada por vírgulas de séries que devem ser alinhada por rótulo de eixo.</param>
        <param name="sortingOrder">Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> que determina se a ordem de classificação crescente ou decrescente é usada em rótulos de eixo, que, por sua vez, determina a ordem na qual os pontos que ocupavam anteriormente o mesmo espaço de eixo são exibidos.</param>
        <summary>Alinha os pontos de dados usando seus rótulos de eixo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para alinhar pontos de dados de séries diferentes ao longo do eixo X usando seus rótulos de eixo e é aplicável quando:  
  
-   Várias séries são exibidos e são indexados; ou seja, todos os pontos de dados têm um <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> 0, ou o <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> é de propriedade `true`.  
  
-   Todos os pontos de dados têm rótulos do eixo de não vazio, que são exclusivos para seus <xref:System.Web.UI.DataVisualization.Charting.Series>. Se eles não forem exclusivos, uma exceção será lançada.  
  
 Essa situação é muito comum quando a associação de dados resulta na criação de várias séries, e `string` valores são usados para valores do eixo x.  
  
 Dois problemas podem surgir quando vários indexado séries são plotadas e os valores de X são definidos usando `string` valores:  
  
-   Não é garantir que os pontos de dados de séries diferentes com a mesma cadeia de valores de X serão plotados no mesmo índice ao longo do eixo X.  
  
-   Somente o rótulo do eixo dos pontos de dados na primeira série será exibido, mesmo que os pontos de dados de outras séries com o mesmo índice tenham rótulos de eixo muito.  
  
 Por padrão, os pontos são plotados na ordem em que eles são armazenados em sua série. Para especificar uma ordem de classificação, use um `AlignDataPointsByAxisLabel` sobrecarga do método que tem um `sortingOrder` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateText">
      <MemberSignature Language="C#" Value="public string AlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AlternateText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo exibido no <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controlar quando a imagem do gráfico não está disponível.</summary>
        <value>Um <see langword="string" /> valor que representa o texto alternativo exibido no <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controlar quando a imagem do gráfico não está disponível.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Annotations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> que é usado para armazenar anotações de gráfico.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> que é usado para armazenar anotações de gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todas as anotações de gráfico são armazenadas na propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina se a suavização é usada quando texto e elementos gráficos são desenhados.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Suavização suaviza out "bordas irregulares" preenchendo os pixels com cores intermediárias e é especialmente eficiente para suavizar as bordas de gráficos que não são desenhados como retângulos. Por exemplo, a suavização é muito eficiente para gráficos de pizza e gráficos de linhas, mas não é tão eficiente de barra e gráficos de colunas.  
  
 A suavização pode ser aplicada a tipos primitivos de texto e/ou elementos gráficos como retângulos, círculos e assim por diante.  
  
 Observe que a suavização afetará o desempenho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define as cores de ponto de série e dados atribuídas automaticamente, para permitir o acesso programático em tempo de execução.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.DataVisualization.Charting.Chart> as cores são atribuídas automaticamente em tempo de execução, não há nenhuma maneira de saber quais serão as cores antes da hora de quando o gráfico renderizado; o `Color` retornará a propriedade de um valor atribuído automaticamente <xref:System.Drawing.Color.Empty> neste momento.  
  
 Se você chamar o <xref:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors%2A> método, as cores para a série e pontos de dados serão definidas, o que permite acesso programático.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da tela de fundo do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um valor <see cref="T:System.Drawing.Color" /> que representa a cor da tela de fundo do objeto de gráfico. A cor padrão é <see cref="System.Drawing.Color.White" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode definir essa propriedade para qualquer valor ARGB (alfa, vermelho, verde, azul) válido. Observe que para o <xref:System.Web.UI.DataVisualization.Charting.Chart> do objeto, o componente alfa não pode ser definido como um valor diferente de 255. Isso também significa que, para o <xref:System.Web.UI.DataVisualization.Charting.Chart> objeto apenas, um <xref:System.Drawing.Color.Transparent%2A> valor não pode ser usado.  
  
 O <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> valor será a primeira cor usada se você estiver usando cores de gradiente do plano de fundo.  
  
 O valor alfa controla a opacidade da cor. Se você definir essa cor como "transparente" — ou seja, se você usar um valor alfa de 0, nenhuma cor será atribuído ao plano de fundo do título. Como resultado, o plano de fundo será transparente.  
  
 A tabela a seguir representa o <xref:System.Web.UI.DataVisualization.Charting.Series> tipos que oferecem suporte a gradientes:  
  
|Tipos de série|2D|3D|  
|------------------|--------|--------|  
|Barra|X|-|  
|Diagrama em caixa|X|X|  
|Bolha|-|-|  
|Cartão vela|X|X|  
|Column|X|X|  
|Rosca|X|-|  
|Barra de erros|-|-|  
|Linha rápida|-|-|  
|Ponto rápido|-|-|  
|Funil|X|X|  
|Gantt|X|-|  
|Kagi|-|-|  
|Linha|-|-|  
|Pizza|X|-|  
|Ponto|-|-|  
|Ponto e Figura|X|-|  
|Polar|-|-|  
|Pirâmide|X|X|  
|Radar|X|X|  
|Coluna de intervalo|X|-|  
|Renko|X|-|  
|Spline|-|-|  
|Área de área de spline|X|-|  
|Intervalo de spline|X|-|  
|Área empilhada|X|-|  
|Área empilhada 100|X|-|  
|Barra empilhada|X|-|  
|100 de barra empilhada|X|-|  
|Coluna empilhada|X|-|  
|Colunas empilhadas 100|X|-|  
|Linha de etapa|-|-|  
|Estoque|-|-|  
|Quebra de linha três|X|-|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a orientação do gradiente da tela de fundo de um controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />. Também determina se um gradiente é usado.</summary>
        <value>Uma enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" />. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> propriedade para determinar se um <xref:System.Web.UI.DataVisualization.Charting.Chart> controle exibirá um gradiente e é usado determinar a orientação do gradiente se houver um.  
  
 Para obter uma lista de padrões disponíveis, consulte o <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> enumeração.  
  
 Para usar cores de gradiente:  
  
 Definir a cor primária do plano de fundo do gráfico com o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> propriedade.  
  
 Definir a cor secundária do plano de fundo do gráfico com o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> propriedade.  
  
 Defina <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> propriedade para o estilo de gradiente desejado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de hachura do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <value>Uma enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" />. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> enumeração Especifica o padrão de hachura usado por um pincel de tipo <xref:System.Drawing.Drawing2D.HatchBrush>. O padrão de hachura consiste em uma cor de plano de fundo sólida e as linhas desenhadas no plano de fundo.  
  
 Para obter uma lista de estilos de hachurado disponíveis, consulte o <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> enumeração.  
  
 **Observação** a cor das linhas de hachura é determinada pelo <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a imagem de tela de fundo do controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um valor <see langword="string" /> que representa a URL de um arquivo de imagem. O valor padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade define um caminho para uma imagem de plano de fundo para um <xref:System.Web.UI.DataVisualization.Charting.Chart> legenda, e pode ser uma URL absoluta ou relativa.  
  
 Para posicionar a imagem, use o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> e <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> propriedades.  
  
 Você também pode especificar uma das cores exibidas pela imagem como "transparente", definindo o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor%2A> propriedade.  
  
 Uma imagem pode ser originado de qualquer arquivo de gráficos válido com suporte pelo .NET Framework, incluindo ícones.  
  
 Imagens de plano de fundo têm precedência sobre outras propriedades do plano de fundo, como a cor do gradiente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento da imagem de plano de fundo usada para o <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> modo de desenho.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" />. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina o alinhamento da imagem do plano de fundo para o <xref:System.Web.UI.DataVisualization.Charting.Chart> controle; ele só é aplicada quando o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> está definida como <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle que será exibido como transparente.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor que será exibido como transparente quando a imagem do gráfico é desenhada. O valor padrão é <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de desenho da imagem de plano de fundo do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" />. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina como a imagem é exibida, por exemplo, lado a lado, escala e assim por diante.  
  
 Se uma imagem é dimensionada, ela será estendida para se ajustar dentro dos limites do gráfico. Se a imagem é colocada lado a lado, ele é repetidamente desenhado, a partir do canto superior esquerdo do gráfico.  
  
 Para obter mais informações sobre os modos de encapsulamento disponíveis, consulte o <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> tópico de enumeração.  
  
 Se o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> está definida como <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, o local onde a imagem é desenhada é determinado pelo <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> configuração de propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor secundária do plano de fundo do gráfico.</summary>
        <value>Um valor <see cref="T:System.Drawing.Color" />. O valor padrão é <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> propriedade determina a cor do plano de fundo secundária de muitos <xref:System.Web.UI.DataVisualization.Charting.Chart> objetos e é usado quando as cores de gradiente estão sendo aplicadas.  
  
 Você pode definir <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> para qualquer valor ARGB (alfa, vermelho, verde, azul) válido.  
  
 Se a hachura for usada, o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> propriedade determina a cor das linhas de hachura do gráfico.  
  
 Para usar cores de gradiente do plano de fundo de um gráfico:  
  
-   Definir a cor primária com a <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> propriedade.  
  
-   Definir a cor secundária com o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> propriedade.  
  
-   Definir o <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> propriedade para o estilo de gradiente desejado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da borda do gráfico.</summary>
        <value>Um valor <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter ou definir a cor da borda, use <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor%2A> em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da borda da imagem do gráfico inteiro.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> que representa a cor da borda da imagem do gráfico inteiro. O valor padrão é <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode definir essa propriedade para qualquer válido ARGB (valor alfa, vermelho, verde e azul).  
  
 Esta propriedade é semelhante de <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> propriedade, a única diferença é que o <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> propriedade não está disponível na janela de propriedades em tempo de design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de toda a linha de borda da imagem do gráfico.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> que determina o estilo de linha da borda da imagem do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina o estilo de linha usado para a linha de borda de imagem de gráfico. A linha pode ser sólida, pontilhada e assim por diante  
  
 Para obter mais opções de estilo, consulte o <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> tópico de enumeração.  
  
 Esta propriedade é semelhante de <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> propriedade, a única diferença é que o <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> propriedade não está disponível na janela de propriedades em tempo de design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura da linha de borda para a imagem do gráfico inteiro.</summary>
        <value>Um <see langword="integer" /> valor que determina a largura da linha de borda da imagem do gráfico, em pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> objeto, que fornece a funcionalidade de capa de borda para o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> objeto que fornece funcionalidade de capa de borda para o controle de gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar uma capa de borda do gráfico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo da borda do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.BorderStyle" /> do gráfico.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura da borda do gráfico.</summary>
        <value>Um valor <see langword="integer" /> que determina a largura da borda, em pixels, do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter ou definir a largura da borda, use <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth%2A> em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de compilação de <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <value>Um <see langword="string" /> que representa o número de compilação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> somente leitura que é usado para armazenar objetos <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> usado para armazenar objetos <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este permite de propriedade de coleção acessar o <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> objeto, que armazena <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objetos e também fornece métodos e propriedades usados para manipular a coleção.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea>objetos são usados para plotar uma ou mais gráficos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ImageMapEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ImageMapEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ImageMapEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a área do mapa de imagem ativa definida por <see cref="P:System.Web.UI.DataVisualization.Charting.DataPoint.PostBackValue" /> no controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> é clicada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compression">
      <MemberSignature Language="C#" Value="public int Compression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Compression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de compactação para a imagem do gráfico.</summary>
        <value>Um <see langword="integer" /> que representa a quantidade de compactação para toda a imagem do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A compactação é expresso como uma porcentagem Por exemplo, para usar a compactação de 50%, defina essa propriedade como 50.  
  
 A compactação é usada para todos os métodos de processamento, conforme determinado pelo <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> propriedade, mas somente para as imagens JPEG, que são especificados pelo <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg> valor de enumeração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentImageLocation">
      <MemberSignature Language="C#" Value="public string CurrentImageLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.CurrentImageLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a URL da imagem atual no qual o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle será renderizado.</summary>
        <value>Um <see langword="string" /> valor que representa a URL da imagem do gráfico atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não terá efeito se a <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> está definida como <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre pouco antes da imagem do gráfico é desenhada. Todos os dados do gráfico está disponível e todas as propriedades do gráfico tem sido definidas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento tem dois recursos exclusivos:  
  
-   Todos os dados do gráfico está disponível. ou seja, a série e seus pontos de dados são preenchidos. Isso é especialmente útil se a associação de dados está sendo usada, porque os dados podem ser examinados e o gráfico pode ser ajustado antes de ser desenhada.  
  
-   Todas as propriedades do gráfico tiverem sido definidas, incluindo as propriedades que foram definidas como "Automática". Em outras palavras, "Auto" propriedades agora armazenar os valores calculados automaticamente e podem ser examinadas e modificadas antes do gráfico ser desenhado. Os exemplos são o <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A> e <xref:System.Web.UI.DataVisualization.Charting.Axis.Maximum%2A> propriedades da <xref:System.Web.UI.DataVisualization.Charting.Axis> classe.  
  
 Use este evento para modificar ou personalizar a imagem do gráfico antes de ele é desenhado.  
  
 Quando as alterações são feitas para uma área do gráfico, como a escala do eixo, as propriedades da área do gráfico devem ser recalculadas para renderizar o gráfico corretamente. Para recalcular o gráfico, chame o <xref:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale%2A> método depois de fazer modificações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de desenhar a legenda do gráfico. Use este evento para personalizar os itens de legenda do gráfico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> evento é usado principalmente para personalizar a legenda antes que ela é desenhada. Padrão e itens de legenda personalizada podem ser removidos ou modificados, e itens personalizados também podem ser adicionados. Além disso, a ordem dos itens de legenda pode ser alterada.  
  
 A imagem do gráfico também pode ser modificada antes desenhada usando o argumento do remetente.  
  
 Observe que um item de legenda padrão é um item que é criado para uma série de dados ou ponto de dados, mas um item de legenda personalizado não está conectado de nenhuma maneira para os dados do gráfico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeMapAreas">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeMapAreas" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre pouco antes do mapa de imagem de gráfico é renderizado. Use este evento para personalizar os itens de áreas de mapa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs.MapAreaItems%2A> propriedade o <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs> classe pode ser usada para:  
  
-   Excluir ou modificar itens do mapa que foram criadas automaticamente para um objeto de gráfico. qualquer ponto de dados, série, legenda item ou faixa objeto linha que tem uma não-vazia `Url`, `MapAreaAttributes` ou `ToolTip` propriedade terá um objeto da área de mapa associado.  
  
-   Adicione áreas de mapa personalizado que tenham uma forma definida pelo usuário e as coordenadas.  
  
> [!NOTE]
>  O argumento do remetente do tipo <xref:System.Web.UI.DataVisualization.Charting.Chart> é somente leitura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados da qual o gráfico é associado.</param>
        <param name="seriesGroupByField">O nome do campo usado para agrupar os dados da série.</param>
        <param name="xField">O nome do campo para valores de X.</param>
        <param name="yFields">Uma lista separada por vírgulas de nomes dos campos para os valores Y.</param>
        <param name="otherFields">As outras propriedades de ponto de dados podem ser associadas.</param>
        <summary>Os dados associam um gráfico à tabela com uma série criada por um valor exclusivo em uma determinada coluna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Série será automaticamente adicionada ao gráfico, dependendo do número de valores exclusivos da determinado `seriesGroupByField` coluna da fonte de dados; em outras palavras, a criação da série depende de agrupamento de uma coluna.  
  
 A fonte de dados pode ser um <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> ou um <xref:System.Data.DataView> objeto. Observe que todas as coleções que implementam o <xref:System.Collections.IEnumerable> interface pode ser usada.  
  
 Propriedades do ponto de outros dados além de X e Y podem ser vinculados. O formato é: PointProperty = campo [{formato}] [, PointProperty = campo [{formato}]]. Por exemplo: "dica de ferramenta = preço {C1} Href = WebSiteName".  
  
Essas propriedades de ponto de dados incluem: 

- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.PostBackValue%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A?displayProperty=nameWithType>, que são os nomes das propriedades personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados da qual o gráfico é associado.</param>
        <param name="seriesGroupByField">O nome do campo usado para agrupar os dados da série.</param>
        <param name="xField">O nome do campo para valores de X.</param>
        <param name="yFields">Uma lista separada por vírgulas de nomes dos campos para os valores Y.</param>
        <param name="otherFields">As outras propriedades de ponto de dados podem ser associadas.</param>
        <param name="sortingOrder">A série será classificada pelos valores de campo de grupo na ordem especificada.</param>
        <summary>Os dados associam um gráfico à tabela com uma série criada por um valor exclusivo em uma determinada coluna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Série será automaticamente adicionada ao gráfico, dependendo do número de valores exclusivos da determinado `seriesGroupByField` coluna da fonte de dados; em outras palavras, a criação da série depende de agrupamento de uma coluna.  
  
 A fonte de dados pode ser um <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> ou um <xref:System.Data.DataView> objeto.  
  
 Observe que todas as coleções que implementam o <xref:System.Collections.IEnumerable> interface pode ser usada.  
  
 Propriedades do ponto de outros dados além de X e Y podem ser vinculados. O formato é: PointProperty = campo [{formato}] [, PointProperty = campo [{formato}]]. Por exemplo: "dica de ferramenta = preço {C1} Href = WebSiteName".  
  
 Uma lista dessas propriedades de ponto de dados é o seguinte: <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A> e <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, que são os nomes das propriedades personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados, que pode ser qualquer objeto <see cref="T:System.Collections.IEnumerable" />.</param>
        <summary>Cria e associa automaticamente dados da série para a tabela de dados especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada coluna da tabela torna-se um valor de Y para uma série, com uma série por coluna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados, que pode ser qualquer objeto <see cref="T:System.Collections.IEnumerable" />.</param>
        <param name="xField">O nome do campo usado para os valores de X da série.</param>
        <summary>Cria e associa automaticamente dados da série à tabela de dados especificada e opcionalmente popula os valores de X.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada coluna da tabela torna-se um valor de Y para uma série, com uma série por coluna.  
  
 Também é possível fornecer o campo de valor de X da série.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />, que fornece métodos e propriedades que lidam com os dados.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />, que fornece métodos e propriedades que lidam com os dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade em tempo de execução para:  
  
-   Copie os valores de Y.  
  
-   Filtre dados.  
  
-   Agrupar dados.  
  
-   Substitua dados ausentes por pontos vazios.  
  
-   Exportar dados para um <xref:System.Data.DataSet> objeto.  
  
-   Classificar os dados.  
  
-   Aplica uma fórmula financeira aos dados.  
  
 Consulte o <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> visão geral da classe para obter mais detalhes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartDataSourceConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a fonte de dados do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um <see cref="T:System.Object" /> que representa a fonte de dados do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os pontos de dados em uma série podem ser associados a uma fonte de dados a qualquer momento usando o <xref:System.Web.UI.DataVisualization.Charting.Chart.DataSource%2A> propriedade.  
  
 Para forçar o gráfico para associar à fonte de dados, chame o <xref:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable%2A> método.  
  
 A seguir está uma lista de objetos que você pode usar como a fonte de dados:  
  
-   DataView  
  
-   Leitores de dados (SQL, OleDB)  
  
-   DataSet  
  
-   DataTable  
  
-   Origem da associação  
  
-   IDataSource  
  
-   Matrizes  
  
-   Listas  
  
-   Todos os objetos enumeráveis  
  
-   SqlCommand / OleDbCommand (fonte de dados-associação de dados somente)  
  
-   SqlDataAdapter / OleDbDataAdapter (fonte de dados-associação de dados somente)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionUrl">
      <MemberSignature Language="C#" Value="public string DescriptionUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DescriptionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o local de uma descrição detalhada do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um <see langword="string" /> valor que representa a URL de uma descrição detalhada do gráfico.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Descarta o objeto, usando o <see cref="T:System.IDisposable" /> interface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />para liberar recursos gerenciados e não; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Versões não gerenciados e, opcionalmente, gerenciados recursos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se o gerenciamento de estado é ativado.</summary>
        <value>
          <see langword="true" />Se o gerenciamento de estado estiver habilitado; Caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `true` para habilitar o gerenciamento de estado para o <xref:System.Web.UI.DataVisualization.Charting.Chart> controle.  
  
 O estado de exibição salvo é determinado pelo <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> ou <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> propriedades.  
  
> [!NOTE]
>  Essa propriedade deve ser definida antes do Page_Load (o Page_Init ou o construtor funcionará) ou ele não terá efeito.  
  
 Para consultar de mais informações sobre a documentação do Visual Studio que discute o gerenciamento de estado ou de estado de exibição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de fonte do controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.FontInfo" /> objeto que representa as propriedades de fonte do controle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor do texto de <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor que representa a cor do texto do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é aplicável a essa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Chamado quando um valor numérico deve ser convertido em uma cadeia de caracteres.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object chartElement, System.Web.UI.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object chartElement, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chartElement" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="chartElement">O elemento de gráfico.</param>
        <param name="elementType">O tipo de elemento.</param>
        <summary>Retorna o contorno do elemento gráfico.</summary>
        <returns>Um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementOutline" /> objeto que contém:  
  
-   Uma matriz de pontos em coordenadas absolutos que podem ser usados como marcadores de estrutura de tópicos em torno deste elemento gráfico.  
  
-   Um <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> objeto para desenhar uma estrutura de tópicos em torno deste elemento gráfico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `chartElement` não é parte do gráfico, ou o `elementType` não pode ser combinado com `chartElement`, o resultado conterá uma matriz vazia de pontos de marcador. Os pontos de marcador são classificados no sentido horário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHtmlImageMap">
      <MemberSignature Language="C#" Value="public string GetHtmlImageMap (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlImageMap(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetHtmlImageMap(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome da marca de mapa de imagem.</param>
        <summary>Retorna o mapa de imagem HTML do gráfico renderizado no momento. Um dos sobrecarregados <c>SaveImage</c> métodos de <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> deve ser chamado antes de chamar esse método.</summary>
        <returns>Um <see langword="string" /> valor que representa o mapa de imagem HTML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">O tipo de serviço solicitada do gráfico.</param>
        <summary>Retorna o serviço solicitado de gráfico.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o tipo de serviço ou <see langword="null" /> se o serviço não pode ser encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a altura da imagem do gráfico inteiro em pixels.</summary>
        <value>Um valor <see cref="T:System.Web.UI.WebControls.Unit" /> que representa a largura, em pixels, de toda a imagem do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não especifique o valor de porcentagem (%) ou ponto (pt). Caso contrário, uma exceção será gerada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina o elemento do gráfico, se houver, que está localizado em um ponto definido por determinadas coordenadas X e Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame esse método para determinar o elemento do gráfico, se houver, que está localizado em um momento específico.  
  
 Esse método é geralmente usado em algum evento de mouse — por exemplo, MouseDown — determinar qual gráfico elemento, o usuário final clicado. As coordenadas X e Y do mouse obtidas os parâmetros de evento são usadas para o `x` e `y` valores de parâmetro desta chamada de método.  
  
 As propriedades de retornado <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto pode ser usado para determinar qual elemento de gráfico foi clicado; o <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto também fornece uma instância do objeto real selecionado, se houver.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">O valor da coordenada X do ponto em que o usuário clicou.</param>
        <param name="y">O valor da coordenada Y do ponto em que o usuário clicou.</param>
        <summary>Determina o elemento do gráfico, se houver, que está localizado em um ponto definido por determinadas coordenadas X e Y.</summary>
        <returns>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />, que fornece informações sobre o elemento gráfico, se houver, que está no local especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame esse método para determinar o elemento do gráfico, se houver, que está localizado em um momento específico.  
  
> [!IMPORTANT]
>  Para que esse método funcione corretamente, o <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> propriedade deve ser definida como `false`.  
  
 Esse método pode ser usado com o <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> eventos do lado do servidor quando você implementar a busca detalhada. No entanto, é altamente recomendável que você use mapas de imagem do lado do cliente para análise de dados devido à facilidade de uso.  
  
 As propriedades de retornado <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto pode ser usado para determinar qual elemento de gráfico foi clicado; o <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto também fornece uma instância do objeto real selecionado, se houver.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">O valor da coordenada X do ponto do usuário clicou.</param>
        <param name="y">O valor da coordenada Y do ponto do usuário clicou.</param>
        <param name="ignoreTransparent">Um sinalizador que determina se os elementos transparentes são ignorados.</param>
        <summary>Determina o elemento de gráfico, se houver, que está localizado em um ponto definido pelas coordenadas X e Y de dado. Elementos transparentes, opcionalmente, podem ser ignorados.</summary>
        <returns>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" />, que fornece informações sobre o elemento gráfico, se houver, que está no local especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame esse método para determinar o elemento do gráfico, se houver, que está localizado em um momento específico.  
  
 Para ignorar elementos transparentes, defina a `ignoreTransparent` parâmetro `true`.  
  
> [!IMPORTANT]
>  Para que esse método funcione corretamente, o <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> propriedade deve ser definida como `false`.  
  
 Esse método pode ser usado com o <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> eventos do lado do servidor quando você implementar a busca detalhada. No entanto, é altamente recomendável que você use mapas de imagem do lado do cliente para análise de dados devido à facilidade de uso.  
  
 As propriedades de retornado <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto pode ser usado para determinar qual elemento de gráfico foi clicado; o <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto também fornece uma instância do objeto real selecionado, se houver.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">O valor da coordenada X do ponto do usuário clicou.</param>
        <param name="y">O valor da coordenada Y do ponto do usuário clicou.</param>
        <param name="requestedElement">Um sinalizador que determina o tipo de elemento gráfico a ser testada.</param>
        <summary>Determina que se um elemento gráfico de um determinado tipo está localizado em um ponto definido por determinado X e Y coordenadas.</summary>
        <returns>Um <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> objeto que fornece informações sobre o elemento de gráfico, se houver, encontrada no local especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame este método para determinar se um elemento gráfico do tipo em questão está localizado em um momento específico.  
  
> [!IMPORTANT]
>  Para que esse método funcione corretamente, o <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> propriedade deve ser definida como `false`.  
  
 Esse método pode ser usado com o <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> eventos do lado do servidor quando você implementar a busca detalhada. No entanto, é altamente recomendável que você use mapas de imagem do lado do cliente para análise de dados devido à facilidade de uso.  
  
 As propriedades de retornado <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto pode ser usado para determinar qual elemento de gráfico foi clicado; o <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto também fornece uma instância do objeto real selecionado, se houver.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, params System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Web.UI.DataVisualization.Charting.ChartElementType[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">A coordenada X do ponto de dados especificado.</param>
        <param name="y">A coordenada Y do ponto de dados especificado.</param>
        <param name="ignoreTransparent">Um sinalizador que indica que os elementos transparentes devem ser ignorados.</param>
        <param name="requestedElement">Uma matriz de <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementType" /> objetos que especificam os tipos para testar, para filtrar o resultados. Se omitido, procurando tipos de elemento será ignorado e todos os tipos de elemento serão válidos.</param>
        <summary>Determina que se um elemento gráfico que é um dos tipos especificados está localizado em um ponto definido por coordenadas X e Y determinadas.</summary>
        <returns>Uma matriz de <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> objetos que fornece informações sobre o elemento de gráfico, se houver, encontrada no local especificado. A matriz contém pelo menos um elemento, que pode ser <see cref="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Nothing" />. Os objetos no resultado são classificados de cima para baixo de diferentes camadas de controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame esse método para determinar o elemento de medidor, se houver, que está localizado em um momento específico. Esse método é geralmente usado em alguns eventos relacionados ao mouse, por exemplo, MouseDown, para determinar qual clicou o usuário final do elemento do medidor. As coordenadas X e Y do mouse obtidas os parâmetros de evento são usadas para os valores de parâmetro X e Y desta chamada de método.  
  
 As propriedades de retornado <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto pode ser usado para determinar qual elemento de gráfico foi clicado; o <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> objeto também fornece uma instância do objeto real selecionado, se houver.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageLocation">
      <MemberSignature Language="C#" Value="public string ImageLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("ChartPic_#SEQ(300,3)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o local em que um arquivo de imagem será salvo quando a renderização de <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> for executada.</summary>
        <value>Um valor de <see langword="string" /> que representa a URL em que o arquivo de imagem está salvo no servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não terá efeito se <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> é definido como <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>.  
  
 Quando você processa uma imagem de gráfico usando o método de marca de imagem, uma imagem de gráfico é gerada e, em seguida, salvos em disco no servidor, em um formato que é determinado pelo <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> propriedade.  
  
 A URL onde o arquivo de imagem é salvo pode ser absoluta ou relativa; a extensão de arquivo que tem o arquivo de imagem é determinada pelo <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> propriedade.  
  
 O arquivo de imagem pode ser codificado para sempre ser um nome de arquivo, ou você pode usar o sinal "#" para usar identificadores de usuário (UIDs) ou um número especificado de arquivos exclusivamente nomeados, que é conhecido como um rodízio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Images" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> objeto, que armazena <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" /> objetos para o gráfico.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> objeto, que armazena <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" /> objetos para o gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para adicionar <xref:System.Web.UI.DataVisualization.Charting.NamedImage> objetos e remover <xref:System.Web.UI.DataVisualization.Charting.NamedImage> objetos do <xref:System.Web.UI.DataVisualization.Charting.NamedImagesCollection> objeto do <xref:System.Web.UI.DataVisualization.Charting.Chart>. Essa propriedade de coleção está disponível em tempo de execução apenas.  
  
 Uma imagem — ou seja, um objeto é derivado do tipo <xref:System.Drawing.Image>, como <xref:System.Drawing.Bitmap>, que é criada dinamicamente — podem ser armazenados na coleção e, em seguida, são atribuídos em um momento posterior para qualquer relacionadas à imagem de <xref:System.Web.UI.DataVisualization.Charting.Chart> propriedade, como <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A>.  
  
 Quando você atribui um <xref:System.Web.UI.DataVisualization.Charting.NamedImage> objeto a uma propriedade relacionadas à imagem no <xref:System.Web.UI.DataVisualization.Charting.Chart> classe, use o nome do <xref:System.Web.UI.DataVisualization.Charting.NamedImage> de objeto para o `string` valor da propriedade de imagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageStorageMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ImageStorageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de armazenamento para a renderização da imagem do gráfico.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ImageStorageMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade define o tipo de armazenamento usado para renderizar imagens do gráfico. Consulte <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode> para obter opções.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageType ImageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageType ImageType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de imagem na qual o gráfico é renderizado se <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> renderização é usada.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageType" /> valor de enumeração que especifica o tipo de imagem na qual o gráfico é renderizado. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina o tipo de arquivo de imagem que é usado para renderização.  
  
 Formatos de arquivo possíveis são <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Bmp>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Emf>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg>, e <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Png>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapAreaAttributesEncoded">
      <MemberSignature Language="C#" Value="public bool IsMapAreaAttributesEncoded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapAreaAttributesEncoded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapAreaAttributesEncoded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se os atributos da área de mapa são codificados. Os atributos da área de mapa podem carregar dados de várias fontes de dados. O controle de gráfico não impede que um usuário final de carregamento de dados não confiáveis de várias fontes de dados. Por esse motivo, é recomendável que você valide os dados e codificá-lo.</summary>
        <value>
          <see langword="true" />Se os atributos da área de mapa são codificados; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapEnabled">
      <MemberSignature Language="C#" Value="public bool IsMapEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se os mapas de imagem do lado do cliente estão habilitados.</summary>
        <value>
          <see langword="true" />Se os mapas de imagem estão habilitados; Caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir essa propriedade como `false` desabilitará os mapas de imagem. Isso ocorrerá mesmo nas seguintes circunstâncias:  
  
-   O `Url`, `MapAreaAttributes`, `LabelMapAreaAttributes`, `LegendMapAreaAttributes` ou `ToolTip` propriedade de um elemento de gráfico é definida.  
  
-   Um <xref:System.Web.UI.DataVisualization.Charting.MapArea> objeto foi adicionado para o <xref:System.Web.UI.DataVisualization.Charting.MapAreasCollection> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se uma gradação suave é aplicada quando as sombras são desenhadas.</summary>
        <value>
          <see langword="true" />Se as sombras são desenhadas usando suavização, <see langword="false" /> se não forem. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o valor da `ShadowOffset` propriedade para uma série de ponto de dados, área do gráfico ou legenda é diferente de zero, uma sombra será aplicada usando uma cor definida pelo seu `ShadowColor` propriedade.  
  
 Se o valor da <xref:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows%2A> é de propriedade `true`, uma gradação suave será aplicada a sombra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Legends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" /> usado para armazenar todos os objetos <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> usados pelo controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" /> usado para armazenar todos os objetos <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade de coleção armazena todos os <xref:System.Web.UI.DataVisualization.Charting.Legend> objetos usados pelo <xref:System.Web.UI.DataVisualization.Charting.Chart> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">O fluxo para carregar do.</param>
        <summary>Carrega um modelo para o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle de um fluxo de imagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método se você deseja carregar um modelo de um fluxo, como um fluxo de memória, o fluxo de arquivos e assim por diante.  
  
 Certifique-se de definir o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propriedade `true` antes de salvar o modelo com o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> método.  
  
 Se um modelo carregado tem duas séries de dados, as propriedades de aparência da série são aplicadas sequencialmente ao gráfico. Em outras palavras, as propriedades de aparência da série do primeiro modelo são atribuídas à primeira série do gráfico, as propriedades de aparência do segundo modelo série são aplicadas para a segunda série do gráfico e a primeira série do modelo é usada novamente para a terceira série do gráfico e assim por diante. O mesmo é verdadeiro para áreas do gráfico e todas as coleções que têm propriedades de aparência.  
  
 Modelos podem ser usados para simular paletas personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do arquivo do modelo a ser carregado. Você deve especificar o caminho completo do modelo a ser carregado do disco.</param>
        <summary>Carrega um modelo com o nome especificado do disco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `name` parâmetro deve usar um caminho completo, por exemplo, C:\MyPic.jpg. Observe que você também deve especificar a extensão de arquivo.  
  
 Esse método carrega um modelo de disco que foi salvo usando o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> método.  
  
 Certifique-se de definir o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propriedade `true` antes de salvar o modelo com o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> método.  
  
 Se um modelo carregado tem duas séries de dados, as propriedades de aparência da série são aplicadas sequencialmente ao gráfico. Em outras palavras, as propriedades de aparência da série do primeiro modelo são atribuídas à primeira série do gráfico, as propriedades de aparência do segundo modelo série são aplicadas para a segunda série do gráfico e a primeira série do modelo é usada novamente para a terceira série do gráfico e assim por diante. O mesmo é verdadeiro para áreas do gráfico e todas as coleções que têm propriedades de aparência.  
  
 Modelos podem ser usados para simular paletas personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Object" /> que representa o estado de controle a ser restaurado.</param>
        <summary>Restaura informações de estado de exibição de uma solicitação de página anterior salva pelo método <see cref="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.MapAreas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.MapAreasCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> objeto, que armazena as áreas de mapa para o gráfico.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> objeto que armazena as áreas de mapa para o gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade em tempo de design ou tempo de execução a adicionar áreas de mapa personalizado ao gráfico. Áreas de mapa personalizado, ao contrário das áreas do mapa que correspondem a um elemento de gráfico tem uma forma definida pelo usuário e as coordenadas.  
  
 Para usar o gráfico como um mapa de imagem, o <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> propriedade da raiz <xref:System.Web.UI.DataVisualization.Charting.Chart> deve ser definido como `true`, que é o padrão.  
  
 Se você renderizar o gráfico como um fluxo binário, uma técnica especial deve ser usada para implementar os mapas de imagem do lado do cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.WebControls.ImageMapEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.WebControls.ImageMapEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ImageMapEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.ImageMapEventArgs" /> objeto que fornece dados para o evento.</param>
        <summary>Invoca os delegados que foram registrados com o <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> evento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomize(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O objeto <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando o gráfico de todos os dados são preparados para serem personalizados antes do desenho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um objeto de <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando todos os dados são preparados para personalização antes de desenho de legenda do gráfico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeMapAreas">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeMapAreas (System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeMapAreas(class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeMapAreas(System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" /> que contém os dados do evento.</param>
        <summary>Ocorre quando dados de áreas de mapa estão preparados para serem personalizados antes do desenho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (object caller, System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(object caller, class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnFormatNumber(System.Object,System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="caller">O chamador de evento, que pode ser uma imagem de gráfico, um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> ou um <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> objeto.</param>
        <param name="e">Um objeto de <see cref="T:System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" /> que contém os argumentos de evento.</param>
        <summary>Ocorre ao converter um valor numérico em uma cadeia de caracteres.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPostPaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" /> objeto que fornece dados para o evento.</param>
        <summary>Ocorre depois que um elemento de gráfico é pintado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPrePaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" /> objeto que fornece dados para o evento.</param>
        <summary>Ocorre depois que o plano de fundo do elemento de gráfico é pintado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre imediatamente antes de um elemento de gráfico desenhado e é gerado uma vez para a imagem do gráfico e uma vez para cada uma da <xref:System.Web.UI.DataVisualization.Charting.ChartArea>, <xref:System.Web.UI.DataVisualization.Charting.Legend>, <xref:System.Web.UI.DataVisualization.Charting.Series> e <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos que existem na imagem do gráfico. Observe que esse evento não é gerado para <xref:System.Web.UI.DataVisualization.Charting.Series> e <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos para gráficos 3D.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="position" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O objeto de gráfico no qual desenhar a imagem do gráfico.</param>
        <param name="position">Posição da imagem do gráfico nos elementos gráficos.</param>
        <summary>Desenha a imagem do gráfico nos elementos gráficos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a paleta para o controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" /> que determina a paleta a ser usada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma paleta é usada para atribuir automaticamente as cores para elementos de dados se ambas as seguintes condições forem atendidas:  
  
-   os pontos de dados em si não têm cores atribuídas a eles.  
  
-   os pontos de dados pertencentes a série de dados também não tem uma cor atribuída.  
  
 Se nenhuma cor de ponto de dados ou de série é especificados explicitamente, as cores usadas dependem do tipo de gráfico e o <xref:System.Web.UI.DataVisualization.Charting.Chart> paleta do objeto ou a paleta de uma série associada, se um for especificado.  
  
> [!NOTE]
>  Se o `Palette` propriedade para ambas as <xref:System.Web.UI.DataVisualization.Charting.Chart> e <xref:System.Web.UI.DataVisualization.Charting.Series> objetos é definido como <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>e nenhuma cor será atribuída à série de dados relevantes ou pontos de dados, os pontos de dados não serão desenhados e serão exibidos como "empty" áreas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de cores de paleta personalizada.</summary>
        <value>Uma matriz de objetos <see cref="T:System.Drawing.Color" /> que representa o conjunto de cores usado para as séries no gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se precisar de mais de 16 cores ou se você deseja aplicar suas próprias cores ao gráfico, você deve definir uma paleta personalizada. Uma paleta personalizada permitem que você adicione suas próprias cores na ordem em que você deseja que apareçam no gráfico. Esse tipo de paleta é especialmente útil se o número de séries do gráfico é desconhecido no tempo de design.  
  
 Essa propriedade não tiver nenhuma efeito quando o <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> é de propriedade *não* definido como <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Um <see cref="T:System.Collections.IEnumerable" /> objeto que representa a fonte de dados que está associada ao controle do gráfico.</param>
        <summary>A fonte de dados especificado para a ligação de dados a <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PostPaint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre depois que o elemento do gráfico. Esse evento é gerado para elementos como <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> e <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PrePaint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre depois que o plano de fundo do elemento de gráfico é desenhado. Esse evento é gerado para elementos como <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> e <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Um argumento do evento como um <see langword="string" /> objeto.</param>
        <summary>Gera eventos para o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controlar quando um formulário é enviado para o servidor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um objeto <see cref="T:System.Web.UI.HtmlTextWriter" />.</param>
        <summary>Renderiza o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controle para o parâmetro de saída especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RenderType RenderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RenderType RenderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RenderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RenderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o método de renderização usado para exibir uma imagem de gráfico.</summary>
        <value>Um valor de enumeração <see cref="T:System.Web.UI.DataVisualization.Charting.RenderType" /> que representa o método de renderização usado para exibir uma imagem de gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A lista a seguir descreve as três maneiras em que uma imagem de gráfico pode ser renderizada:  
  
-   O <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag> renderizar tipo faz com que um arquivo temporário a ser salvo em disco no servidor. O gráfico é exibido ao lado de cliente usando um \<IMG > marca com o atributo SRC definido como a URL especificada pelo <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> propriedade.  
  
-   Se o <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming> renderizar tipo for especificado, não há nenhum arquivo de imagem temporário no servidor. Em vez disso, a imagem do gráfico é enviada como um fluxo binário e é exibida usando um \<IMG > marca com o atributo SRC definido para outra página. aspx que é responsável por gerar a imagem do gráfico.  
  
-   A processar o tipo de <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageMap> faz com que um mapa de imagem a ser criado, mas não resulta na exibição de uma imagem de gráfico real. Essa opção só deve ser tomada ao usar um mapa de imagem que tem um tipo de processamento de <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming>.  
  
 Observe que você pode controlar os arquivos de imagem como temporários são salvas em disco usando o <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine os valores da propriedade de gráfico calculados automaticamente para “Automático”.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Várias propriedades do gráfico podem ser definidas como "Auto" — por exemplo, <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A>; essas propriedades são calculadas antes do gráfico está sendo processado. "Auto" geralmente é representado como um <xref:System.Double.NaN> valor.  
  
 Chame esse método para redefinir essas propriedades de seu valor calculado como "Automático" (<xref:System.Double.NaN>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle deve desenhar da direita para a esquerda para idiomas da direita para esquerda (RTL).</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft" /> valor de enumeração que indica se o controle deve desenhar da direita para a esquerda para idiomas da direita para esquerda (RTL). O valor padrão é <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft.No" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade afeta a direção das chaves de cor da legenda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="imageStream">O fluxo de imagem.</param>
        <summary>Salva a imagem do gráfico no fluxo especificado. As propriedades <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> e outros <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> propriedades de controle são usadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFileName">O nome do arquivo de imagem.</param>
        <summary>Salva a imagem do gráfico no arquivo especificado. As propriedades <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />, <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> e outros <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> propriedades de controle são usadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">O fluxo de imagem.</param>
        <param name="format">O formato de imagem do gráfico.</param>
        <summary>Salva a imagem do gráfico no fluxo especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">O nome do arquivo de imagem.</param>
        <param name="format">O formato de imagem do gráfico.</param>
        <summary>Salva uma imagem de gráfico no arquivo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva alterações de estado de exibição do controle de servidor que ocorreram desde a hora em que ocorreu o postback da página no servidor.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o estado de exibição atual para o controle de servidor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public void SaveXml (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveXml(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveXml(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do arquivo para salvar.</param>
        <summary>Salva o estado atual do gráfico para um arquivo XML. Esse método é usado principalmente para fins de suporte. A execução do thread deve ter permissão de gravação de arquivo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Serializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> objeto, que é usado para gráfico de serialização.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> objeto que é usado para gráfico de serialização.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade em tempo de design ou de execução para serializar o gráfico.  
  
 Para uma discussão detalhada sobre o <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> de classe, consulte a visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Series" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> objeto que contém <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objetos.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> objeto que contém <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> objetos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade de coleção permite que você acesse o <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> classe quais repositórios <xref:System.Web.UI.DataVisualization.Charting.Series> objetos e também fornece métodos e propriedades usados para manipular a esta coleção.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series>repositório de objetos <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos, bem como os atributos de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se as exceções não críticas devem ser suprimidas.</summary>
        <value>
          <see langword="true" />Se as exceções não críticas devem ser suprimidas; Caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você definir essa propriedade como `true`, as exceções não críticas serão suprimidas.  
  
 Quando o <xref:System.Web.UI.DataVisualization.Charting.Chart> controle corretamente não pode plotar o gráfico usando os dados e outras configurações fornecidas, uma exceção será lançada. Embora seja útil exibir exceções durante o teste do aplicativo, eles não devem ser mostrados quando o aplicativo é liberado.  
  
> [!NOTE]
>  Definir essa propriedade como `true` pode ocultar problemas sérios no código de origem do aplicativo de usuário. Essa configuração também pode causar uma imagem de gráfico a ser gerado que pode falsificar seus dados. É altamente recomendável que esse modo ser apenas a versão usada em compilações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Os argumentos do evento como um <see langword="string" /> objeto.</param>
        <summary>Gera eventos para o <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> controlar quando um formulário é enviado para o servidor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> tipo a ser usado ao aplicar a suavização ao texto.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> valor de enumeração a ser usado ao aplicar a suavização ao texto. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality.High" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a suavização é aplicada ao texto, o <xref:System.Web.UI.DataVisualization.Charting.Chart> controle usará essa propriedade para determinar o tipo de textual suavização para aplicar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Titles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" /> que armazena todos os objetos <see cref="T:System.Web.UI.DataVisualization.Charting.Title" /> usados pelo controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" /> que armazena todos os objetos <see cref="T:System.Web.UI.DataVisualization.Charting.Title" /> usados pelo controle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.Chart.Titles%2A> propriedade armazena todos os <xref:System.Web.UI.DataVisualization.Charting.Title> objetos usados pelo <xref:System.Web.UI.DataVisualization.Charting.Chart> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ValidateDataSource(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">O objeto para verificar.</param>
        <summary>Verifica se um controle associado a dados pode trabalhar com o objeto, a que ele associará.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateContent">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina o estado de exibição para ser persistente no cliente.</summary>
        <value>Um <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> valor de enumeração que representa o estado de exibição. O valor padrão é <see cref="F:System.Web.UI.DataVisualization.Charting.SerializationContents.Default" />, que significa que o estado de exibição consistirá em todas as propriedades do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para definir o estado de exibição do <xref:System.Web.UI.DataVisualization.Charting.Chart> controle.  
  
 Quando você define essa propriedade, o estado de exibição é salvo automaticamente pelo <xref:System.Web.UI.DataVisualization.Charting.Chart> controlar e também é carregado automaticamente quando ocorre um postback.  
  
 Para obter maior flexibilidade, use o <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> propriedade para o estado de exibição definida pelo usuário.  
  
 Para habilitar o gerenciamento de estado, defina o <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> propriedade `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateData">
      <MemberSignature Language="C#" Value="public string ViewStateData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("ViewStateData has been deprecated. Please investigate Control.ViewState instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estado de exibição definida pelo usuário do controle.</summary>
        <value>Um <see langword="string" /> valor que representa o estado de exibição do controle, que é inserido no documento da Web no cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você especificar dados persistam no cliente, esta propriedade fornece maior flexibilidade em comparação com o <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> propriedade.  
  
 Quando o estado de exibição definida pelo usuário é implementado, é responsabilidade do desenvolvedor para definir o estado de exibição e utilizar o estado de exibição quando um postback ocorre.  
  
 O `Save` e `Load` métodos do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> objeto opcionalmente pode ser usado para definir o estado de exibição, bem como para carregar o estado de exibição quando ocorre um postback. Consulte o código de exemplo abaixo para obter um exemplo disso.  
  
 Para simplificar, quando você especifica o estado de gráfico a ser salvo, use o <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> propriedade, que pode ser definida como dados, propriedades de aparência visual ou ambos.  
  
 Para habilitar o gerenciamento de estado, defina o <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> propriedade `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura da imagem do gráfico inteiro em pixels.</summary>
        <value>Um valor <see cref="T:System.Web.UI.WebControls.Unit" /> que representa a largura, em pixels, de toda a imagem do gráfico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não especifique o valor de porcentagem (%) ou ponto (pt). Caso contrário, uma exceção será gerada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
