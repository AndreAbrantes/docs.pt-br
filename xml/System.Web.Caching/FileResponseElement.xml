<Type Name="FileResponseElement" FullName="System.Web.Caching.FileResponseElement">
  <TypeSignature Language="C#" Value="public class FileResponseElement : System.Web.Caching.ResponseElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FileResponseElement extends System.Web.Caching.ResponseElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.FileResponseElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Caching.ResponseElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa a parte de uma entrada de cache de saída, armazenada como um arquivo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Caching.FileResponseElement> classe representa a parte de corpo (em vez de cabeçalho) de uma entrada de cache de saída. Os dados de um <xref:System.Web.Caching.FileResponseElement> objeto pode ser armazenado como uma parte ou todo um arquivo. ASP.NET e provedores personalizados de cache de saída podem retornar uma resposta em várias partes, usando qualquer combinação de <xref:System.Web.Caching.FileResponseElement> objetos. Por exemplo, um provedor pode retornar uma resposta que está segmentada em três diferentes <xref:System.Web.Caching.FileResponseElement> objetos e cada objeto podem ser recuperados de um deslocamento em um arquivo físico diferente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileResponseElement (string path, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">O caminho totalmente qualificado para o arquivo.</param>
        <param name="offset">A posição do arquivo onde a cadeia de caracteres começa.</param>
        <param name="length">O comprimento dos dados, começando no deslocamento que representa os dados de cache de saída no arquivo definido pelo <c>caminho</c>.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Caching.FileResponseElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a resposta completa do cache de saída está contida em um único arquivo, um provedor inicializa o <xref:System.Web.Caching.FileResponseElement> classe usando um deslocamento de zero e um comprimento igual ao tamanho do arquivo inteiro. Se a resposta do cache de saída completo está contida em apenas uma parte de um arquivo, um provedor inicializa o <xref:System.Web.Caching.FileResponseElement> classe usando o deslocamento no arquivo onde a resposta do cache de saída é iniciado e um comprimento igual ao tamanho da resposta de cache de saída é armazenada no arquivo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="length" /> é menor que zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tamanho dos dados, começando no deslocamento que contém os dados para um <see cref="T:System.Web.Caching.FileResponseElement" /> instância.</summary>
        <value>O tamanho dos dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a resposta completa do cache de saída está contida em um único arquivo, um provedor de cache de saída inicializa o <xref:System.Web.Caching.FileResponseElement> classe usando um comprimento igual ao tamanho do arquivo inteiro. Se a resposta do cache de saída completo está contida em apenas uma parte de um arquivo, um provedor inicializa o <xref:System.Web.Caching.FileResponseElement> classe usando um comprimento igual ao tamanho da resposta de cache de saída é armazenada no arquivo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a posição do arquivo onde os dados de um <see cref="T:System.Web.Caching.FileResponseElement" /> instância inicia.</summary>
        <value>O ponto de partida dos dados no arquivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a resposta completa do cache de saída está contida em um único arquivo, um provedor inicializa o <xref:System.Web.Caching.FileResponseElement> classe usando um deslocamento de zero, se a resposta do cache de saída completa está contida em apenas parte de um arquivo, inicializa um provedor a <xref:System.Web.Caching.FileResponseElement> classe usando o deslocamento no arquivo onde a resposta do cache de saída é iniciado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o local do arquivo que contém dados de um <see cref="T:System.Web.Caching.FileResponseElement" /> instância.</summary>
        <value>O caminho totalmente qualificado do arquivo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
