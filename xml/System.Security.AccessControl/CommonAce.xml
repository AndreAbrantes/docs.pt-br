<Type Name="CommonAce" FullName="System.Security.AccessControl.CommonAce">
  <TypeSignature Language="C#" Value="public sealed class CommonAce : System.Security.AccessControl.QualifiedAce" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommonAce extends System.Security.AccessControl.QualifiedAce" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonAce" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.QualifiedAce</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma ACE (entrada de controle de acesso).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.AccessControl.CommonAce> classe representa os oito tipos mais comuns de ACE:  
  
-   <xref:System.Security.AccessControl.AceType.AccessAllowed>  
  
-   <xref:System.Security.AccessControl.AceType.AccessAllowedCallback>  
  
-   <xref:System.Security.AccessControl.AceType.AccessDenied>  
  
-   <xref:System.Security.AccessControl.AceType.AccessDeniedCallback>  
  
-   <xref:System.Security.AccessControl.AceType.SystemAudit>  
  
-   <xref:System.Security.AccessControl.AceType.SystemAuditCallback>  
  
-   <xref:System.Security.AccessControl.AceType.SystemAlarm>  
  
-   <xref:System.Security.AccessControl.AceType.SystemAlarmCallback>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonAce (System.Security.AccessControl.AceFlags flags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, bool isCallback, byte[] opaque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.AccessControl.AceFlags flags, valuetype System.Security.AccessControl.AceQualifier qualifier, int32 accessMask, class System.Security.Principal.SecurityIdentifier sid, bool isCallback, unsigned int8[] opaque) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flags" Type="System.Security.AccessControl.AceFlags" />
        <Parameter Name="qualifier" Type="System.Security.AccessControl.AceQualifier" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="isCallback" Type="System.Boolean" />
        <Parameter Name="opaque" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="flags">Sinalizadores que especificam informações sobre a herança, a propagação de herança e auditar as condições para a nova entrada de controle de acesso (ACE).</param>
        <param name="qualifier">O uso da nova ACE.</param>
        <param name="accessMask">A máscara de acesso para a ACE.</param>
        <param name="sid">O <see cref="T:System.Security.Principal.SecurityIdentifier" /> associado com a nova ACE.</param>
        <param name="isCallback">
          <see langword="true" />para especificar que o novo ACE é um tipo de retorno de chamada ACE.</param>
        <param name="opaque">Dados opacos associados com a nova ACE. Dados opacos só são permitidos para tipos ACE de retorno de chamada. O comprimento dessa matriz não deve ser maior que o valor de retorno de <see cref="M:System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)" /> método.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.CommonAce" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAce.BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comprimento, em bytes, da representação binária da atual <see cref="T:System.Security.AccessControl.CommonAce" /> objeto. Usar este comprimento com o <see cref="M:System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)" /> método antes do empacotamento a ACL em uma matriz binária.</summary>
        <value>O comprimento, em bytes, da representação binária da atual <see cref="T:System.Security.AccessControl.CommonAce" /> objeto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm">A matriz de bytes no qual o conteúdo de <see cref="T:System.Security.AccessControl.CommonAce" /> é realizar marshaling do objeto.</param>
        <param name="offset">O deslocamento no qual iniciar a realização de marshaling.</param>
        <summary>Empacota o conteúdo de <see cref="T:System.Security.AccessControl.CommonAce" /> o objeto para o início da matriz de bytes especificada no deslocamento especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" />é negativa ou muito alto para permitir todo o <see cref="T:System.Security.AccessControl.CommonAce" /> sejam copiados para o <paramref name="binaryForm" /> matriz.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxOpaqueLength">
      <MemberSignature Language="C#" Value="public static int MaxOpaqueLength (bool isCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxOpaqueLength(bool isCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isCallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isCallback">
          <see langword="true" />para especificar que o <see cref="T:System.Security.AccessControl.CommonAce" /> objeto é um tipo de ACE de retorno de chamada.</param>
        <summary>Obtém o comprimento máximo permitido de um BLOB de dados opaco para entradas de controle de acesso (ACEs) do retorno de chamada.</summary>
        <returns>O comprimento permitido de um BLOB de dados opaco.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
