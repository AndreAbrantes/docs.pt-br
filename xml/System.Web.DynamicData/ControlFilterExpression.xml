<Type Name="ControlFilterExpression" FullName="System.Web.DynamicData.ControlFilterExpression">
  <TypeSignature Language="C#" Value="public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ControlFilterExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modifica uma consulta de banco de dados usando a chave de dados do item selecionado em um controle associado a dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.DynamicData.ControlFilterExpression> classe que é projetado para ser usado quando uma página contém dois controles de associação de dados, como um <xref:System.Web.UI.WebControls.GridView> controle e um <xref:System.Web.UI.WebControls.ListView> controle. Um controle é a origem, onde uma chave de dados (linha) estiver selecionada. Outro controle é o destino onde os dados são exibidos com base na chave de dados selecionada. Os dados de destino são obtidos por um controle de fonte de dados que executa a consulta que é definida no <xref:System.Web.UI.WebControls.QueryExtender> classe e que é criado usando a chave de dados selecionada.  
  
 Para usar o <xref:System.Web.DynamicData.ControlFilterExpression> classe em uma página, siga estas etapas:  
  
-   Adicionar o <xref:System.Web.UI.WebControls.QueryExtender> controle para a página.  
  
-   Definir o `TargetControlID` propriedade o <xref:System.Web.UI.WebControls.QueryExtender> controle para a identificação do controle de fonte de dados de destino.  
  
-   Adicionar um <xref:System.Web.DynamicData.ControlFilterExpression> de instância para o <xref:System.Web.UI.WebControls.QueryExtender> controle.  
  
-   Definir o `ControlID` propriedade o <xref:System.Web.DynamicData.ControlFilterExpression> elemento para o controle de associação de dados de origem.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.DynamicData.ControlFilterExpression> classe para fazer referência a um controle associado a dados de origem, onde a chave de dados está selecionada. O <xref:System.Web.UI.WebControls.QueryExtender> controlar aponta para um controle de fonte de dados de destino que obtém dados que são filtrados usando a chave de dados selecionada. No exemplo, o controle de associação de dados de origem faz referência a uma tabela pai e o controle de associação de dados de destino faz referência a uma tabela filho.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="SourceGridViewID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.DynamicData.ControlFilterExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public string Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da coluna que a consulta se baseia.</summary>
        <value>O nome da coluna que a consulta se baseia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se essa propriedade estiver vazia, o <xref:System.Web.DynamicData.ControlFilterExpression> controle trata a chave de dados selecionada como a chave primária da tabela atual. Isso é útil em um cenário de lista-detalhes onde os controles de associação de dados de origem e destino operam nos dados da mesma tabela.  
  
 Se você atribuir um valor para a propriedade, o <xref:System.Web.DynamicData.ControlFilterExpression> controle trata a chave de dados como uma chave estrangeira. O valor atribuído a essa propriedade se torna o nome da coluna que é exibido no controle de associação de dados de destino. Isso é útil em um cenário de pai-filho, em que o controle de associação de dados de destino opera nos dados da tabela filho e o controle de associação de dados de origem opera nos dados da tabela pai.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.DynamicData.ControlFilterExpression> classe para definir a coluna que o filtro se aplica.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a ID do controle de associação de dados de origem.</summary>
        <value>A ID do controle de associação de dados de origem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.DynamicData.ControlFilterExpression.ControlID%2A> propriedade identifica o controle de associação de dados de origem do qual a chave de dados está selecionada. A chave de dados selecionado é usada pelo <xref:System.Web.DynamicData.ControlFilterExpression> controle para criar a consulta.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.DynamicData.ControlFilterExpression> classe para definir a ID do controle de associação de dados de origem.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">A consulta de fonte de dados para modificar.</param>
        <summary>Obtém a consulta de fonte de dados para modificar.</summary>
        <returns>O objeto que representa a consulta de fonte de dados que é modificada por este <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instância.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.DynamicData.ControlFilterExpression.GetQueryable%28System.Linq.IQueryable%29> método modifica a consulta com base na chave de controle de associação de dados de origem de dados selecionada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">O estado para restaurar.</param>
        <summary>Restaura o estado de exibição salvo anteriormente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva as alterações de estado de exibição desde a hora em que a página foi enviada para o servidor.</summary>
        <returns>O objeto que contém as alterações de estado de exibição. Se não houver nenhum estado de exibição associado ao objeto, este método retorna <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">O controle no qual o <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instância está contida, como o <see cref="T:System.Web.UI.WebControls.QueryExtender" /> controle.</param>
        <param name="context">O aplicativo atual do <see cref="T:System.Web.HttpContext" /> objeto.</param>
        <param name="dataSource">Fonte de dados de destino para a <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> instância. Se o <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instância está contida no <see cref="T:System.Web.UI.WebControls.QueryExtender" /> controle, este parâmetro é a fonte de dados que o <see cref="T:System.Web.UI.WebControls.QueryExtender" /> controle refere-se a</param>
        <summary>Inicializa a expressão de filtro com informações de fonte de dados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que o <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> objeto para controlar alterações em seu estado de exibição para que eles podem ser armazenados no objeto de estado de exibição do controle e seja mantido em solicitações para a mesma página.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
