<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define uma interface implementada por objetos que criar modelos de campo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe deve ser implementada pela <xref:System.Web.DynamicData.FieldTemplateFactory> classe para criar um modelo de campo. Essa interface fornece métodos que inicializam o <xref:System.Web.DynamicData.FieldTemplateFactory> e cria modelos de campo.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Especifica a coluna de dados a ser usado para exibir o modelo de campo.</param>
        <param name="mode">Especifica o modo de exibição do modelo de campo.</param>
        <param name="uiHint">Especifica o modelo de campo a ser usado.</param>
        <summary>Cria uma instância de um campo de modelo usando o <see cref="T:System.Web.DynamicData.MetaColumn" /> classe, o <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> classe e <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> propriedade.</summary>
        <returns>Uma instância de um <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> quando implementada em uma classe de objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modelos de campo de dados dinâmicos do ASP.NET são controles de usuário do ASP.NET que os controles de dados são mapeados para tipos de dados em um modelo de dados. Modelos de campo geralmente derivam <xref:System.Web.DynamicData.FieldTemplateUserControl>, a classe que permite acesso aos campos de dados, colunas de dados e metadados em modelos de dados. Projetos de dados dinâmicos fornecem padrão modelos de campo, mas você pode modificá-las ou criar modelos de campo personalizado. Quando imlemented, esse método cria um modelo de campo com base na coluna de dados, o modo da coluna de dados e o <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriedade. Especificar o `uiHint` parâmetro se você deseja processar dados usando um modelo de campo personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Especifica o modelo de dados que usa o modelo de campo.</param>
        <summary>Inicializa um <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> usando o modelo de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dados dinâmicos do ASP.NET usam modelos de campo para exibir campos de dados individuais. Modelos de campo geralmente são implementados como controles de usuário que mapeiam tipos de dados em um modelo de dados para campos individuais no controle de dados. Esse método inicializa a <xref:System.Web.DynamicData.FieldTemplateFactory> classe, que é usado para criar modelos de campo usando o modelo de dados de modelo do campo será usado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
