<Type Name="DiscoveryVersionConverter" FullName="System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter">
  <TypeSignature Language="C#" Value="public class DiscoveryVersionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoveryVersionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a funcionalidade para alterar uma versão de protocolo WS-Discovery para outro tipo.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscoveryVersionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Digite as informações de formato de descritor que auxilia na conversão de um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto em outro tipo.</param>
        <param name="sourceType">O <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto é alterado para o tipo deste conversor.</param>
        <summary>Retorna um valor que indica se é possível alterar a determinado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto para o tipo desse conversor e usando as informações de contexto e a cultura especificadas.</summary>
        <returns>
          <see langword="true" />Se for possível alterar especificado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto para o tipo deste conversor; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Digite as informações de formato de descritor que auxilia na conversão de um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto em outro tipo.</param>
        <param name="destinationType">O tipo para o qual o <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto é alterado.</param>
        <summary>Retorna um valor que indica se é possível alterar a determinado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> para o tipo especificado e usando as informações de contexto e a cultura especificadas.</summary>
        <returns>
          <see langword="true" />Se for possível alterar especificado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto para o tipo especificado; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Digite as informações de formato de descritor que auxilia na conversão de um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto em outro tipo.</param>
        <param name="culture">As informações de cultura a ser usada na conversão de tipo.</param>
        <param name="value">O <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto para alterar.</param>
        <summary>Converte a determinado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto para o tipo deste conversor, usando as informações de contexto e a cultura especificadas.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que foi alterado para o tipo deste conversor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Digite as informações de formato de descritor que auxilia na conversão de um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto em outro tipo.</param>
        <param name="culture">As informações de cultura a ser usada na conversão de tipo.</param>
        <param name="value">O <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> para alterar.</param>
        <param name="destinationType">O tipo para o qual o <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> objeto está sendo alterado.</param>
        <summary>Converte a determinado <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> para o tipo especificado, usando as informações de contexto e a cultura especificadas.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que foi alterado para o tipo especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
