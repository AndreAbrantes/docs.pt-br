<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa as configurações usadas pelo cliente para validar o certificado apresentado pelo serviço usando a autenticação SSL. Ele também contém um certificado para o serviço que é explicitamente configurado no cliente a ser usado para criptografar mensagens para o serviço usando a segurança de mensagem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada pelo <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> propriedade o <xref:System.ServiceModel.Description.ClientCredentials> classe.  
  
   
  
## Examples  
 Esse código mostra uma maneira de criar uma instância dessa classe.  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações usadas para validar o certificado de serviço obtido usando autenticação SSL.</summary>
        <value>As configurações usadas para validar o certificado de serviço obtido usando autenticação SSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> classe representa as configurações usadas pelo proxy do cliente para autenticar certificados de serviço que são obtidos usando negociação SSL/TLS.  
  
   
  
## Examples  
 Este código mostra como acessar essa propriedade.  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o certificado padrão a ser usado para o serviço.</summary>
        <value>O certificado padrão a ser usado para o serviço.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.  
  
   
  
## Examples  
 Este código mostra como acessar essa propriedade.  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um certificado com escopo definido para usar para representar o serviço que o cliente está se comunicando.</summary>
        <value>Um certificado no escopo a ser usado para representar o serviço que o cliente está se comunicando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que o cliente configurar o certificado de serviço para usar com base na URL do serviço, que ele se comunica. Isso é especialmente útil em cenários de token emitidos onde um cliente pode se comunicar a vários serviços (o serviço end bem como serviços de token de segurança intermediário). Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.  
  
 Se uma associação requer um certificado para o serviço e nenhum certificado específico para a URL do serviço é encontrado na `ScopedCertificates`, o certificado padrão é usado.  
  
   
  
## Examples  
 Este código mostra como definir essa propriedade.  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Especifica o certificado padrão a ser usado para o serviço.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esses métodos de obtém um certificado do repositório no local especificado que corresponde parâmetros especificados.  
  
 Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">O nome diferenciado do assunto.</param>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado de serviço.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <summary>Especifica o certificado padrão a ser usado para o serviço. Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método obtém um certificado do repositório no local especificado que corresponde a `subjectName` parâmetro.  
  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual (padrão).  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
   
  
## Examples  
 O código a seguir usa esse método para especificar um certificado x. 509 a ser usado.  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subjectName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">O local do repositório de certificados de serviço usa para obter o certificado de serviço.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <param name="findType">O tipo de pesquisa x. 509 a ser executado.</param>
        <param name="findValue">O valor para pesquisar no repositório de certificados x. 509.</param>
        <summary>Especifica o certificado padrão a ser usado para o serviço. Para associações que usam a segurança de mensagens baseada em certificado, esse certificado é usado para criptografar mensagens para o serviço e deve ser usada pelo serviço para assinar respostas ao cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método obtém um certificado do repositório no local especificado que corresponde a `findType` e `findValue` parâmetros.  
  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual (padrão).  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
 Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeração.  
  
 A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado. Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException> é gerada.  
  
   
  
## Examples  
 O código a seguir usa esse método para especificar um certificado x. 509 a ser usado.  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="findValue" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">O nome totalmente qualificado.</param>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado de serviço.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <param name="targetService">A URL que define o escopo.</param>
        <summary>Define um certificado pelo nome da entidade, o repositório de certificados local e nome do repositório de certificados e o armazena em uma coleção a ser usado para a URL que define o escopo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual (padrão).  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
   
  
## Examples  
 Esse código mostra como chamar esse método.  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetService" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado de serviço.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <param name="findType">O tipo de pesquisa x. 509 a ser executado.</param>
        <param name="findValue">O valor para pesquisar no repositório de certificados x. 509.</param>
        <param name="targetService">A URL que define o escopo.</param>
        <summary>Define um local de repositório de certificado por certificado, o nome do repositório de certificados, o tipo de pesquisa x. 509 e o valor de pesquisa e o armazena em uma coleção a ser usado para a URL que define o escopo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual (padrão).  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
 Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeração.  
  
 A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado. Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException> será lançada.  
  
   
  
## Examples  
 Esse código mostra como chamar esse método.  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetService" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Tentativa de definir quando a credencial é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o validador de certificado SSL para usar.</summary>
        <value>Uma instância de <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que você use o WCF X509CertificateValidator para validar um certificado de servidor em um cliente do WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
