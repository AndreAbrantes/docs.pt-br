<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa as configurações usadas pelo serviço para validar o certificado apresentado pelos clientes. Ele também contém um certificado de serviço a ser usado para criptografar as respostas ou retornos de chamada para clientes quando <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem é usado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O certificado definido nesta classe é usado para criptografar mensagens para o cliente somente para associações que são configurados com `MutualCertificateDuplex` modo de autenticação de segurança de mensagem.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação.</summary>
        <value>As configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O código a seguir mostra como usar essa propriedade para definir propriedades de autenticação de certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o certificado para uso em <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem.</summary>
        <value>O <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> a ser usado para criptografar mensagens enviadas ao cliente pelo serviço no caso-se transporte duplex uncorrelated o <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem é usado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade é usada para associações que são configuradas para modo de segurança de mensagem quando `MutualCertificateDuplex` modo de autenticação de segurança de mensagem é usado.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para obter o certificado.  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de definir uma credencial de somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">O nome diferenciado do assunto.</param>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <summary>Permite que você especifique o certificado a ser usado para criptografar mensagens para o cliente, especificando o nome diferenciado do assunto. Essa configuração é usada somente com associações que estão configuradas com o <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]o `subjectName` parâmetro, consulte <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local (padrão).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual.  
  
 Se o aplicativo cliente é executado sob uma conta de sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo cliente é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
   
  
## Examples  
 O código a seguir mostra como usar esse método para definir o certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado.</param>
        <param name="storeName">O nome do certificado x. 509 repositório para abrir.</param>
        <param name="findType">O tipo de pesquisa x. 509 a ser executado.</param>
        <param name="findValue">O valor para pesquisar no repositório de certificados x. 509.</param>
        <summary>Especifica o certificado a ser usado para criptografar mensagens para o cliente. Essa configuração é usada somente com associações que estão configuradas com o <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores para `storeLocation` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local (padrão).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual.  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é geralmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` são incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
 Os valores para `findType` são incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeração.  
  
 A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto de certificados no armazenamento especificado. Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, um <xref:System.InvalidOperationException> é gerada.  
  
   
  
## Examples  
 O código a seguir mostra como usar esse método para definir o certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
