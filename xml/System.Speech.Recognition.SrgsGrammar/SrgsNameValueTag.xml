<Type Name="SrgsNameValueTag" FullName="System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag">
  <TypeSignature Language="C#" Value="public class SrgsNameValueTag : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsNameValueTag extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um elemento para associar um valor de semântico de uma expressão em uma gramática.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse objeto é semelhante do `tag` elemento definido pelo World Wide Web Consortium (W3C) [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). No entanto, o <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value%2A> propriedade deste objeto não pode ser um script. O conteúdo de <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value%2A> pode ser do tipo <xref:System.Boolean>, <xref:System.Double>, <xref:System.Int32>, ou <xref:System.String>. Valores de cadeia de caracteres devem ser colocados entre aspas duplas.  
  
 Para adicionar semântica como script, use <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>.  
  
   
  
## Examples  
 O exemplo a seguir cria uma gramática para escolher as cidades para um voo. O exemplo usa <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> para atribuir um valor semântico para cada cidade, que é o código para aeroporto da cidade.  
  
 O exemplo constrói dois <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> instâncias, cada uma delas Especifica uma chave semântica. Ambos regra referências de destino o mesmo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto, chamado `cities`, mas o resultado de reconhecimento de referência de regra de marca com uma chave semântica diferente. A chave semântica identifica uma cidade identificada como a cidade de saída ou a cidade de chegada de voo. O manipulador para o <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento usa as chaves para recuperar os valores de semântica criados usando <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> do resultado de reconhecimento.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize a SpeechRecognitionEngine object.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build a rule with a list of cities, assign a semantic value to each city.  
        SrgsItem chi = new SrgsItem("Chicago");  
        chi.Add(new SrgsNameValueTag("ORD"));  
        SrgsItem bos = new SrgsItem("Boston");  
        bos.Add(new SrgsNameValueTag("BOS"));  
        SrgsItem mia = new SrgsItem("Miami");  
        mia.Add(new SrgsNameValueTag("MIA"));  
        SrgsItem dal = new SrgsItem("Dallas");  
        dal.Add(new SrgsNameValueTag("DFW"));  
  
        SrgsOneOf cities = new SrgsOneOf(new SrgsItem[] { chi, bos, mia, dal });  
        SrgsRule citiesRule = new SrgsRule("flightCities");  
        citiesRule.Add(cities);  
  
        // Build the root rule, add rule references to the cities rule.  
        SrgsRule flightBooker = new SrgsRule("bookFlight");  
        flightBooker.Add(new SrgsItem("I want to fly from"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "departureCity"));  
        flightBooker.Add(new SrgsItem("to"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "arrivalCity"));  
  
        // Build an SrgsDocument object from the flightBooker rule and add the cities rule.  
        SrgsDocument cityChooser = new SrgsDocument(flightBooker);  
        cityChooser.Rules.Add(citiesRule);  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar departArrive = new Grammar(cityChooser);  
        departArrive.Name = ("Cities Grammar");  
        recognizer.LoadGrammarAsync(departArrive);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized: " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The departure city is: " + e.Result.Semantics["departureCity"].Value);  
      Console.WriteLine("  The destination city is: " + e.Result.Semantics["arrivalCity"].Value);  
    }  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsNameValueTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsNameValueTag (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O valor usado para definir o <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> propriedade.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> classe, especificando um valor para a instância.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria uma gramática para escolher as cidades para um voo. O exemplo usa <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> para atribuir um valor semântico para cada cidade, que é o código para aeroporto da cidade.  
  
 O exemplo constrói dois <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> instâncias, cada uma delas Especifica uma chave semântica. Ambos regra referências de destino o mesmo <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto, chamado `cities`, mas o resultado de reconhecimento de referência de regra de marca com uma chave semântica diferente. A chave semântica identifica uma cidade identificada como a cidade de saída ou a cidade de chegada de voo. O manipulador para o <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento usa as chaves para recuperar os valores de semântica criados usando <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> do resultado de reconhecimento.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize a SpeechRecognitionEngine object.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build a rule with a list of cities, assign a semantic value to each city.  
        SrgsItem chi = new SrgsItem("Chicago");  
        chi.Add(new SrgsNameValueTag("ORD"));  
        SrgsItem bos = new SrgsItem("Boston");  
        bos.Add(new SrgsNameValueTag("BOS"));  
        SrgsItem mia = new SrgsItem("Miami");  
        mia.Add(new SrgsNameValueTag("MIA"));  
        SrgsItem dal = new SrgsItem("Dallas");  
        dal.Add(new SrgsNameValueTag("DFW"));  
  
        SrgsOneOf cities = new SrgsOneOf(new SrgsItem[] { chi, bos, mia, dal });  
        SrgsRule citiesRule = new SrgsRule("flightCities");  
        citiesRule.Add(cities);  
  
        // Build the root rule, add rule references to the cities rule.  
        SrgsRule flightBooker = new SrgsRule("bookFlight");  
        flightBooker.Add(new SrgsItem("I want to fly from"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "departureCity"));  
        flightBooker.Add(new SrgsItem("to"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "arrivalCity"));  
  
        // Build an SrgsDocument object from the flightBooker rule and add the cities rule.  
        SrgsDocument cityChooser = new SrgsDocument(flightBooker);  
        cityChooser.Rules.Add(citiesRule);  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar departArrive = new Grammar(cityChooser);  
        departArrive.Name = ("Cities Grammar");  
        recognizer.LoadGrammarAsync(departArrive);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized: " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The departure city is: " + e.Result.Semantics["departureCity"].Value);  
      Console.WriteLine("  The destination city is: " + e.Result.Semantics["arrivalCity"].Value);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsNameValueTag (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">A cadeia de caracteres usada para definir o <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> propriedade o <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> objeto.</param>
        <param name="value">O objeto usado para definir o <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> propriedade o <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> objeto.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> classe, especificando um nome e um valor para a instância.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.  
  
 <paramref name="name" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> é uma cadeia de caracteres vazia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> instância.</summary>
        <value>Uma cadeia de caracteres que contém o nome do <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> instância.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> para <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">É feita uma tentativa de definir <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> para uma cadeia de caracteres vazia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor contido na <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> instância.</summary>
        <value>O valor contido na <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> instância.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os tipos válidos para o <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value%2A> propriedade são:  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Double>  
  
-   <xref:System.Int32>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">É feita uma tentativa de definir <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> para <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">É feita uma tentativa de definir <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> para um tipo inválido.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
