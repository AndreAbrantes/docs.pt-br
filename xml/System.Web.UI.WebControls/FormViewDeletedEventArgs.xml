<Type Name="FormViewDeletedEventArgs" FullName="System.Web.UI.WebControls.FormViewDeletedEventArgs">
  <TypeSignature Language="C#" Value="public class FormViewDeletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewDeletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como "Excluir") dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle exclui o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de exclusão, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido. Para determinar o número de registros afetados pela operação de exclusão, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriedade para determinar se todas as exceções ocorreram. Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriedade.  
  
> [!NOTE]
>  Se ocorrer uma exceção durante a operação de exclusão e a <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> está definida como `false`, o <xref:System.Web.UI.WebControls.FormView> controle gera novamente a exceção.  
  
 Se você quiser acessar os pares de nome/valor dos campos de chave e campos de não-chave do registro excluído, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedades, respectivamente.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> objeto passado para o método de manipulação de eventos para o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento para determinar se ocorreu uma exceção durante uma operação de exclusão.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewDeletedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">O número de linhas afetadas pela operação de exclusão.</param>
        <param name="e">Um <see cref="T:System.Exception" /> que representa a exceção gerada quando a operação de exclusão foi executada. Se nenhuma exceção for gerada, use <see langword="null" /> para esse parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> classe.  
  
 A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>|O valor de `affectedRows` parâmetro.|  
|<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>|O <xref:System.Exception?displayProperty=nameWithType> objeto contido no `e` parâmetro.|  
|<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>|Inicializado para `false`.|  
  
> [!NOTE]
>  Este construtor é usado principalmente por desenvolvedores de controle quando a geração de eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de linhas afetadas pela operação de exclusão.</summary>
        <value>O número de linhas afetadas pela operação de exclusão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> propriedade para determinar o número de registros afetados pela operação de exclusão. Essa propriedade normalmente é usada para verificar se o número correto de registros foi excluído nas seguintes situações:  
  
-   Verifique se apenas um único registro foi excluído. Às vezes, uma instrução delete escrito incorretamente pode excluir vários registros.  
  
-   Verificar se um registro foi excluído quando ocorre um erro durante a operação de exclusão que não gera uma exceção.  
  
-   Verifique se um registro foi excluído quando um controle de fonte de dados que dá suporte a detecção de conflito (concorrência otimista), como o <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.ObjectDataSource> controla, tem seu <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriedade definida como o `ConflictOptions.CompareAllValues` valor de enumeração. Sob essa configuração, um registro que foi modificado por outro usuário ao mesmo tempo não pode ser excluído.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> propriedade para verificar se um registro foi excluído durante a operação de exclusão.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a exceção (se houver) que foi gerado durante a operação de exclusão.</summary>
        <value>Um <see cref="T:System.Exception" /> que representa a exceção foi elevada durante a operação de exclusão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriedade para determinar a exceção (se houver) que foi gerado durante a operação de exclusão. Se nenhuma exceção tiver sido acionada, essa propriedade retornará `null`.  
  
> [!NOTE]
>  Se uma exceção foi gerada e optar por tratar a exceção no manipulador de eventos, certifique-se de definir o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriedade `true`; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle gera novamente a exceção.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriedade para determinar se uma exceção ocorreu durante uma operação de exclusão.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se uma exceção foi elevada durante a operação de exclusão foi manipulada no evento manipulador.</summary>
        <value>
          <see langword="true" />Se a exceção foi tratada no evento manipulador; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma exceção é gerada durante a operação de exclusão, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriedade para indicar se a exceção foi tratada no evento manipulador. Quando essa propriedade é definida como `true`, a exceção será considerada tratadas e não é gerada novamente. Se essa propriedade é definida como `false`, o <xref:System.Web.UI.WebControls.FormView> controle gera novamente a exceção. Para determinar qual exceção foi gerada, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriedade para indicar que a exceção foi tratada no evento manipulador.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um dicionário ordenado de pares de nome/valor do campo de chave do registro excluído.</summary>
        <value>Um <see cref="T:System.Collections.Specialized.OrderedDictionary" /> que contém pares de nome/valor do campo de chave do registro excluído.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> propriedade contém os valores dos campos de chave listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade de um <xref:System.Web.UI.WebControls.FormView> controle. Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> propriedade para acessar os valores dos campos de chave (conforme especificado pelo <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade) para um registro excluído. Por exemplo, você pode usar esses valores para manter um registro dos registros excluídos.  
  
> [!NOTE]
>  Esta propriedade contém apenas os campos de chave especificados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade. Para acessar os campos de não-chave, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> propriedade retorna um <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa o <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. O <xref:System.Collections.Specialized.OrderedDictionary> objeto contém <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representam os campos de chave do registro excluído. Para acessar os nomes de campo, use o <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriedade o <xref:System.Collections.Specialized.OrderedDictionary> objeto. Da mesma forma, você pode acessar os valores do campo usando o <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriedade.  
  
> [!NOTE]
>  Como um atalho, você também pode usar o indexador de <xref:System.Collections.Specialized.OrderedDictionary> objeto para acessar os valores de campo de chave. A vantagem de usar o indexador é que ela retorna valores de campo de chave diretamente. Controles que contam com a ordem dos campos da fonte de dados (como <xref:System.Web.UI.WebControls.AccessDataSource>) pode acessar valores de campo de chave somente por índice.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> propriedade para acessar os valores dos campos de chave para um registro excluído.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgsKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgsKeys/CS/formviewdeletedeventargskeyscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgsKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgsKeys/VB/formviewdeletedeventargskeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um dicionário de pares de nome/valor do campo de não-chave para o registro excluído.</summary>
        <value>Um <see cref="T:System.Collections.Specialized.OrderedDictionary" /> que contém um dicionário de pares de nome/valor do campo de não-chave para o registro excluído.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedade para acessar os valores dos campos de não-chave para um registro excluído. Por exemplo, você pode usar esses valores para manter um registro dos registros excluídos.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedade é preenchida somente quando as expressões de associação bidirecional são usadas no modelo de item. Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  
  
 O <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedade retorna um <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa o <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. O <xref:System.Collections.Specialized.OrderedDictionary> objeto contém <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representam os campos de não-chave do registro excluído. Para acessar os nomes de campo, use o <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriedade o <xref:System.Collections.Specialized.OrderedDictionary> objeto. Da mesma forma, você pode acessar os valores do campo usando o <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriedade.  
  
> [!NOTE]
>  Como um atalho, você também pode usar o indexador de <xref:System.Collections.Specialized.OrderedDictionary> objeto para acessar os valores de campo. A vantagem de usar o indexador é que ela retorna valores de campo diretamente. Controles que contam com a ordem dos campos da fonte de dados (como <xref:System.Web.UI.WebControls.AccessDataSource>) pode acessar os valores do campo somente por índice.  
  
 Essa propriedade não contém os campos de chave (conforme especificado pelo <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade) para o registro excluído. Para acessar os campos de chave, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedade para acessar os valores dos campos de não-chave para um registro excluído.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgsKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgsKeys/CS/formviewdeletedeventargskeyscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgsKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgsKeys/VB/formviewdeletedeventargskeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
