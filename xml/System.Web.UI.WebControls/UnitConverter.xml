<Type Name="UnitConverter" FullName="System.Web.UI.WebControls.UnitConverter">
  <TypeSignature Language="C#" Value="public class UnitConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnitConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.UnitConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converte um objeto <see cref="T:System.Web.UI.WebControls.Unit" /> em um objeto de outro tipo de dados e outro tipo em um objeto <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.UnitConverter> classe para converter um <xref:System.Web.UI.WebControls.Unit> a um objeto de outro tipo de dados. Você também pode usar o <xref:System.Web.UI.WebControls.UnitConverter> classe para converter um objeto de outro tipo de dados para um <xref:System.Web.UI.WebControls.Unit>.  
  
> [!NOTE]
>  Este conversor pode converter uma cadeia de caracteres para <xref:System.Web.UI.WebControls.Unit> e um <xref:System.Web.UI.WebControls.Unit> para uma cadeia de caracteres.  
  
> [!CAUTION]
>  Você nunca deve acessar diretamente um conversor de tipo. Em vez disso, chame o conversor apropriado usando <xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType>. Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter?displayProperty=nameWithType> classe base.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnitConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.UnitConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instância que especifica o contexto do objeto a ser convertido.</param>
        <param name="sourceType">O tipo de origem.</param>
        <summary>Retorna um valor que indica se o conversor de unidade pode converter do tipo de origem especificado.</summary>
        <returns>
          <see langword="true" />Se o tipo de origem pode ser convertido de; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica o contexto do objeto a ser convertido.</param>
        <param name="destinationType">O <see cref="T:System.Type" /> que representa o tipo de dados para converter.</param>
        <summary>Retorna um valor que indica se o conversor pode converter um <see cref="T:System.Web.UI.WebControls.Unit" /> objeto para o tipo especificado.</summary>
        <returns>
          <see langword="true" />Se o conversor dá suporte à conversão de um <see cref="T:System.Web.UI.WebControls.Unit" /> objeto para o tipo de destino; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instância que indica o contexto do objeto a ser convertido.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> objeto que representa informações sobre uma cultura, como o idioma, o sistema de calendário e assim por diante. Esse parâmetro não é usado neste método. Isso está reservado para versões futuras deste método. Opcionalmente, você pode passar <see langword="null" /> para esse parâmetro.</param>
        <param name="value">O objeto a ser convertido.</param>
        <summary>Executa a conversão de tipo de lista de contexto, o objeto e o argumento especificada.</summary>
        <returns>O objeto resultante da conversão.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instância que indica o contexto do objeto a ser convertido.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> objeto que representa informações sobre uma cultura, como o idioma, o sistema de calendário e assim por diante. Esse parâmetro não é usado neste método. Isso está reservado para versões futuras deste método. Opcionalmente, você pode passar <see langword="null" /> para esse parâmetro.</param>
        <param name="value">O objeto a ser convertido.</param>
        <param name="destinationType">O tipo para o qual converter.</param>
        <summary>Executa a conversão de tipo para o tipo de destino especificado recebe a lista de contexto, o objeto e o argumento especificada.</summary>
        <returns>O objeto resultante da conversão.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
