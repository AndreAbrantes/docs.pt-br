<Type Name="WizardStepCollection" FullName="System.Web.UI.WebControls.WizardStepCollection">
  <TypeSignature Language="C#" Value="public sealed class WizardStepCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WizardStepCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa uma coleção de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objetos em um controle que atua como um assistente. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepCollection> classe é usada para armazenar e gerenciar uma coleção de <xref:System.Web.UI.WebControls.WizardStepBase>-derivado objetos em um controle que atua como um assistente, como o <xref:System.Web.UI.WebControls.CreateUserWizard> controle ou <xref:System.Web.UI.WebControls.Wizard> controle. Por exemplo, o <xref:System.Web.UI.WebControls.Wizard> controlar usa o <xref:System.Web.UI.WebControls.WizardStepCollection> de classe para seu <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade.  
  
 Há várias maneiras que você pode acessar o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado objetos o <xref:System.Web.UI.WebControls.WizardStepCollection>:  
  
-   Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> propriedade para acessar diretamente um <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto em um índice com base em zero específico.  
  
-   Use o <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> método para criar um enumerador que pode ser usado para iterar pela coleção.  
  
-   Use o <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> método para copiar o conteúdo do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção em uma <xref:System.Array> objeto.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como preencher o <xref:System.Web.UI.WebControls.WizardStepCollection> coleção usando a sintaxe declarativa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/CS/wizardstepcollectiondeclarecs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/VB/wizardstepcollectiondeclarevb.aspx#3)]  
  
 O exemplo a seguir demonstra como preencher programaticamente um <xref:System.Web.UI.WebControls.WizardStepCollection> coleção.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollectioncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollectionvb.aspx#1)]  
  
 Este é o arquivo de code-behind da página da Web no exemplo anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollection.cs#2)]
 [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollection.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser acrescentado para o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <summary>Acrescenta especificado <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado ao final da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> método adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado ao final do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção. Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado para a coleção em um local de índice específico, use o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar programaticamente um <xref:System.Web.UI.WebControls.Wizard> controle e usando o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> método para adicionar <xref:System.Web.UI.WebControls.WizardStepBase>-derivado <xref:System.Web.UI.WebControls.WizardStep> objetos para o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> coleção. Observe que no exemplo, o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle é uma instância do <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objeto passado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice no qual inserir <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado.</param>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser acrescentado para o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <summary>Adiciona o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado de coleção no local do índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> método adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado de coleção no local do índice especificado.  
  
 Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado ao final do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção, use o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objeto passado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objetos derivados da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> método para remover todos os o <xref:System.Web.UI.WebControls.WizardStepBase>-objetos de derivados o <xref:System.Web.UI.WebControls.WizardStepCollection> coleção.  
  
> [!NOTE]
>  Após o <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> método Remove o <xref:System.Web.UI.WebControls.WizardStepBase>-objetos derivados da coleção, o <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> propriedade o <xref:System.Web.UI.WebControls.WizardStepCollection> coleção tem um valor de zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser encontrado na <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <summary>Determina se o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção contém um determinado <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado.</summary>
        <returns>
          <see langword="true" />Se o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado for encontrado no <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Contains%2A> método para determinar se um <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto está contido na coleção. Esse método é geralmente usado para testar a existência de um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado antes de executar uma tarefa, como remover um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado da coleção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wizardStep" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WizardStepBase[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WizardStepBase[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Uma matriz com base em zero de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos que recebe os itens são copiados da coleção.</param>
        <param name="index">A posição na matriz de destino no qual a matriz inicia o recebimento de itens copiados.</param>
        <summary>Copia todos os itens de um <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção para uma matriz unidimensional compatível de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos, iniciando no índice especificado na matriz de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> método para copiar o conteúdo da coleção para a matriz de base zero especificada. Itens são copiados iniciando no índice especificado da matriz de destino. Depois que os itens estão em uma matriz, você pode usar a sintaxe de matriz para acessar itens no <xref:System.Web.UI.WebControls.WizardStepCollection> coleção.  
  
 Como alternativa, você também pode usar o <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> método para criar um enumerador que pode ser usado para acessar os itens na coleção.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> método para copiar o <xref:System.Web.UI.WebControls.WizardStepBase> objetos da coleção para uma matriz. A matriz é iteração, em seguida, para exibir o <xref:System.Web.UI.Control.ID%2A> propriedade de cada <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado. Observe que no exemplo, o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle é uma instância do <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/CS/wizardstepcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/VB/wizardstepcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objetos o <see cref="T:System.Web.UI.WebControls.Wizard" /> do controle <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</summary>
        <value>O número de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objetos em derivados de <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> propriedade para determinar o número de <xref:System.Web.UI.WebControls.WizardStepBase>-derivado objetos o <xref:System.Web.UI.WebControls.WizardStepCollection> coleção. O <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> propriedade normalmente é usada quando a iteração na coleção para determinar seu superior associado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um <see cref="T:System.Collections.IEnumerator" />-implementado um objeto que pode ser usado para iterar por meio de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objetos na coleção.</summary>
        <returns>Um <see cref="T:System.Collections.IEnumerator" />-implementado o objeto que contém todos os o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objetos o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser pesquisado no <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <summary>Determina o valor de índice que representa a posição especificada <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto na coleção.</summary>
        <returns>Se encontrado, o índice baseado em zero da primeira ocorrência da <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado passado no atual <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção; caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.IndexOf%2A> método para determinar o índice especificado <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto atual <xref:System.Web.UI.WebControls.WizardStepCollection> coleção. Se o <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado não está na coleção, o método retornará -1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objeto passado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice no qual inserir o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado.</param>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto para inserir o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <summary>Insere especificado <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto na coleção no local do índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> método adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado de coleção no local do índice especificado.  
  
 Como alternativa, você pode usar o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> método para adicionar o <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto à coleção. Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado ao final do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção, use o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> método.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> método e o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> método executam essencialmente a mesma função. Quando o <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> método é chamado, ele simplesmente passa a `wizardStep` e `index` parâmetros para o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar programaticamente um <xref:System.Web.UI.WebControls.Wizard> controle e usando o <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> método para adicionar <xref:System.Web.UI.WebControls.WizardStepBase>-derivado de objetos para o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> coleção. Observe que no exemplo, o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle é uma instância do <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/CS/wizardstepcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/VB/wizardstepcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objetos derivados da coleção podem ser modificados.</summary>
        <value>
          <see langword="true" />Se o <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção pode ser modificada; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é derivada de <xref:System.Collections.ICollection> interface e é substituído para sempre retornar `false`.  
  
 Para obter mais informações sobre o <xref:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized%2A> propriedade, consulte o <xref:System.Collections.ICollection.IsSynchronized%2A> propriedade o <xref:System.Collections.ICollection> interface  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.WizardStep" /> objeto a ser recuperado.</param>
        <summary>Obtém um <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado da coleção no índice especificado.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto de <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção no local do índice especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> propriedade para recuperar o <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto no local do índice especificado no <xref:System.Web.UI.WebControls.WizardStepCollection> coleção usando a notação de matriz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser removido da coleção.</param>
        <summary>Remove o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> método para remover o <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção. Como alternativa, você pode usar o <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> método para remover um <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto de um local especificado no <xref:System.Web.UI.WebControls.WizardStepCollection> coleção.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> método para remover um <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção. Observe que no exemplo, o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle é uma instância do <xref:System.Web.UI.WebControls.WizardStepCollection> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/CS/wizardstepcollectionremovecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/VB/wizardstepcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objeto passado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivados do objeto a ser removido.</param>
        <summary>Remove o <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objeto derivado da coleção no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> método para remover o <xref:System.Web.UI.WebControls.WizardStepBase>-derivados do objeto do <xref:System.Web.UI.WebControls.WizardStepCollection> coleção no local do índice especificado. Como alternativa, você pode remover um determinado <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado da coleção usando o <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
        <value>Um objeto que pode ser usado para sincronizar o acesso a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto retornado nesta implementação é o <xref:System.Web.UI.WebControls.WizardStepCollection> objeto propriamente dito.  
  
 Para obter mais informações sobre o <xref:System.Web.UI.WebControls.WizardStepCollection.SyncRoot%2A> propriedade, consulte o <xref:System.Collections.ICollection.SyncRoot%2A> propriedade o <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Uma base zero <see cref="T:System.Array" /> que recebe os itens copiados do <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção.</param>
        <param name="index">A posição na matriz de destino na qual começar a receber o conteúdo copiado.</param>
        <summary>Copia todos os itens de um <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> coleção para uma matriz unidimensional, começando no índice especificado na matriz de destino.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Object" /> para acrescentar ao final da coleção.</param>
        <summary>Anexa o objeto especificado ao final da coleção.</summary>
        <returns>A posição na qual o novo elemento foi inserido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Object" /> a ser localizado na coleção.</param>
        <summary>Determina se a coleção contém o objeto especificado.</summary>
        <returns>
          <see langword="true" />Se o <see cref="T:System.Object" /> foi encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O objeto a ser pesquisado na coleção.</param>
        <summary>Determina o valor de índice que representa a posição do objeto especificado na coleção.</summary>
        <returns>O valor de índice do objeto especificado na coleção.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O índice no qual inserir o objeto na coleção.</param>
        <param name="value">O objeto a ser inserido na coleção.</param>
        <summary>Insere o objeto especificado da coleção na posição especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a coleção tem um tamanho fixo.</summary>
        <value>
          <see langword="true" />Se a coleção tem um tamanho fixo; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do objeto a ser obtido da coleção.</param>
        <summary>Obtém o objeto no índice especificado na coleção.</summary>
        <value>O objeto a ser recuperado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: myCollection [index].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O objeto a ser removido da coleção.</param>
        <summary>Remove o objeto especificado da coleção.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
