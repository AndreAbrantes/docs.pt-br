<Type Name="CircleHotSpot" FullName="System.Web.UI.WebControls.CircleHotSpot">
  <TypeSignature Language="C#" Value="public sealed class CircleHotSpot : System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CircleHotSpot extends System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CircleHotSpot" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HotSpot</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define a região de um ponto de acesso circular uma <see cref="T:System.Web.UI.WebControls.ImageMap" /> controle. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe define a região de um ponto de acesso em forma de círculo um <xref:System.Web.UI.WebControls.ImageMap> controle. Para definir a região do <xref:System.Web.UI.WebControls.CircleHotSpot> do objeto, defina o <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> propriedade para o valor que representa a coordenada x do centro da área circular. Definir o <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propriedade para o valor que representa a coordenada y do centro da área circular. Definir o <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedade para a distância do centro do círculo para a borda.  
  
 Quando um <xref:System.Web.UI.WebControls.CircleHotSpot> controle é clicado, a página seja navega para um URL, gera uma postagem para o servidor ou não faz nada. O <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriedade especifica esse comportamento. Para navegar até uma URL, defina o <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriedade `HotSpotMode.Navigate`e usar o <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> propriedade para especificar a URL de navegação. Para lançar no servidor, defina o <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriedade `HotSpotMode.PostBack`e usar o <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> propriedade para especificar um nome para o <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Esse nome será passado a <xref:System.Web.UI.WebControls.ImageMapEventArgs> dados de eventos quando o <xref:System.Web.UI.WebControls.CircleHotSpot> é clicado. Se você quiser que o <xref:System.Web.UI.WebControls.CircleHotSpot> objeto não ter nenhum comportamento, defina o <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriedade `HotSpotMode.Inactive`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar declarativamente uma <xref:System.Web.UI.WebControls.ImageMap> controle que contém duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. O <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> está definida como `HotSpotMode.Navigate`, que faz com que a página navegar até a URL especificada sempre que um usuário clica em uma das regiões de ponto de acesso. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[ImageMapClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageMapClass1/CS/imagemapclass1cs.aspx#1)]
 [!code-aspx-vb[ImageMapClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageMapClass1/VB/imagemapclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CircleHotSpot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CircleHotSpot.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.CircleHotSpot> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar programaticamente duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos, definir suas propriedades e adicioná-los para o <xref:System.Web.UI.WebControls.ImageMap> do controle <xref:System.Web.UI.WebControls.HotSpotCollection>. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[CircleHotSpot.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Cstr/CS/circlehotspot.cstrcs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Cstr/VB/circlehotspot.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCoordinates">
      <MemberSignature Language="C#" Value="public override string GetCoordinates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCoordinates() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cadeia de caracteres que representa as coordenadas x e y de um <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> centro do objeto e o comprimento do seu radius.</summary>
        <returns>Uma cadeia de caracteres que representa as coordenadas x e y de um <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> centro do objeto e o comprimento do seu radius.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método usa os valores atribuídos ao <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> e <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propriedades para retornar as coordenadas center e o valor atribuído para o <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedade para retornar o raio.  
  
 O <xref:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates%2A> método é usado internamente pelo ASP.NET para obter o texto a ser usado para as coordenadas de um <xref:System.Web.UI.WebControls.CircleHotSpot> quando ele for renderizado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar declarativamente uma <xref:System.Web.UI.WebControls.ImageMap> controle que contém duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Quando um usuário clica em um a <xref:System.Web.UI.WebControls.CircleHotSpot> objetos, o <xref:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates%2A> método retorna suas coordenadas e exibe para o usuário. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[CircleHotSpot.GetCoordinates#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.GetCoordinates/CS/circlehotspot.getcoordinatescs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.GetCoordinates#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.GetCoordinates/VB/circlehotspot.getcoordinatesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupName">
      <MemberSignature Language="C#" Value="protected override string MarkupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.MarkupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public int Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a distância do centro para a borda da região circular definido por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto.</summary>
        <value>Um inteiro que representa a distância em pixels do centro para a borda da região circular definido por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedade permite que você obtenha ou defina um valor que representa a distância em pixels do centro para a borda da região circular definido por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente um <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, você deve especificar um valor para o <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedade, bem como a <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> e <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propriedades.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.ImageMap> controle que contém duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Ele é criado declarativamente; seu <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são da mesma forma definidas declarativamente. O outro é criado programaticamente e sua <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são definidas por meio de programação. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada x do Centro de região circular definida por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto.</summary>
        <value>A coordenada x do Centro de região circular definida por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> propriedade permite que você obtenha ou defina um valor que representa a coordenada x do Centro de região circular definida por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente um <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, você deve especificar um valor para o <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> propriedade, bem como a <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.ImageMap> controle que contém duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Ele é criado declarativamente; seu <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são da mesma forma definidas declarativamente. O outro é criado programaticamente e sua <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são definidas por meio de programação. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada y do Centro de região circular definida por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto.</summary>
        <value>A coordenada y do Centro de região circular definida por este <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> objeto. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propriedade permite que você obtenha ou defina um valor que representa a coordenada y do Centro de região circular definida por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente um <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, você deve especificar um valor para o <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propriedade, bem como a <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.ImageMap> controle que contém duas <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Ele é criado declarativamente; seu <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são da mesma forma definidas declarativamente. O outro é criado programaticamente e sua <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, e <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propriedades são definidas por meio de programação. Para esse exemplo funcione corretamente, você deve fornecer sua própria imagem para o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade e atualize o caminho para a imagem adequadamente para que o aplicativo possa localizá-lo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
