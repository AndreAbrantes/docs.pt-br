<Type Name="DataGrid" FullName="System.Web.UI.WebControls.DataGrid">
  <TypeSignature Language="C#" Value="public class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGrid" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Um controle de lista com limite de dados que exibe os itens da fonte de dados em uma tabela. O controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> permite selecionar, classificar e editar esses itens.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#Introduction)  
  
-   [Acessibilidade](#Accessibility)  
  
-   [Sintaxe declarativa](#DeclarativeSyntax)  
  
    > [!NOTE]
    >  Antes de usar o <xref:System.Web.UI.WebControls.DataGrid> controlar, considere usar o <xref:System.Web.UI.WebControls.GridView> controlar em vez disso. O <xref:System.Web.UI.WebControls.GridView> controle, que foi introduzida no .NET Framework versão 2.0, é o sucessor do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Introdução  
 Use o <xref:System.Web.UI.WebControls.DataGrid> controle para exibir os campos de uma fonte de dados como colunas em uma tabela. Cada linha de <xref:System.Web.UI.WebControls.DataGrid> controle representa um registro na fonte de dados. O <xref:System.Web.UI.WebControls.DataGrid> controle oferece suporte para seleção, edição, exclusão, paginação e classificação.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Controles de servidor de validação também são fornecidos para avaliar a entrada do usuário. Para obter mais informações, consulte [sintaxe de controle de servidor de validação](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
 Tipos de coluna diferentes determinam o comportamento das colunas no controle. A tabela a seguir lista os tipos de coluna diferente que podem ser usados.  
  
|Tipo de coluna|Descrição|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|Exibe uma coluna associada a um campo em uma fonte de dados. Ele exibe cada item no campo como texto. Esse é o tipo de coluna padrão da <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|Exibe um botão de comando para cada item na coluna. Isso permite que você crie uma coluna de controles de botões personalizados, como `Add` ou `Remove` botões.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|Exibe uma coluna que contém comandos de edição para cada item na coluna.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|Exibe o conteúdo de cada item na coluna como um hiperlink. O conteúdo da coluna pode ser associado a um campo em uma fonte de dados ou texto estático.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|Exibe cada item na coluna de um modelo especificado a seguir. Isso permite que você forneça controles personalizados na coluna.|  
  
 Por padrão, o <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> está definida como `true`, que cria um <xref:System.Web.UI.WebControls.BoundColumn> objeto para cada campo na fonte de dados. Cada campo é renderizado como uma coluna no <xref:System.Web.UI.WebControls.DataGrid> controle na ordem em que cada campo é exibido na fonte de dados.  
  
 Você pode controlar manualmente as colunas que aparecem no <xref:System.Web.UI.WebControls.DataGrid> controle definindo o <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> propriedade `false` e, em seguida, listando as colunas que você deseja incluir entre a abertura e fechamento `<Columns>` marcas. As colunas especificadas são adicionadas para o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção na ordem listada. Isso permite que você controle programaticamente as colunas a <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  A ordem em que as colunas são exibidas no <xref:System.Web.UI.WebControls.DataGrid> controle é controlado pela ordem em que as colunas aparecem o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção. Embora você possa alterar programaticamente a ordem das colunas manipulando o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção, é mais fácil listar as colunas na ordem de exibição desejado.  
  
 Colunas explicitamente declaradas podem ser exibidas em conjunto com as colunas geradas automaticamente. Quando usam as explicitamente declarado colunas será processada primeiro, seguido por colunas geradas automaticamente.  
  
> [!NOTE]
>  Colunas geradas automaticamente não são adicionadas ao <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção.  
  
 A aparência do <xref:System.Web.UI.WebControls.DataGrid> controle pode ser personalizado, definindo as propriedades de estilo para as diferentes partes do controle. A tabela a seguir lista as propriedades de estilo diferente.  
  
|Propriedade de estilo|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|Especifica o estilo para itens alternados a <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|Especifica o estilo para o item que está sendo editado no <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>|Especifica o estilo para a seção de rodapé no <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>|Especifica o estilo para a seção de cabeçalho de <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|Especifica o estilo dos itens no <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A>|Especifica o estilo para a seção da página seleção de <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|Especifica o estilo para o item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle.|  
  
 Você também pode mostrar ou ocultar partes diferentes do controle. A tabela a seguir lista as propriedades que controlam quais partes são mostradas ou ocultadas.  
  
|Propriedade|Descrição|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>|Mostra ou oculta a seção de rodapé a <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>|Mostra ou oculta a seção de cabeçalho de <xref:System.Web.UI.WebControls.DataGrid> controle.|  
  
 Você pode controlar a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle adicionando programaticamente os atributos para o `<td>` e `<tr>` marcas processadas pelo controle no navegador. Atributos podem ser adicionados por meio de programação, fornecendo código no manipulador de eventos para o <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> ou <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> eventos.  
  
 Para adicionar um atributo para o `<td>` marca, primeiro obtenha o <xref:System.Web.UI.WebControls.TableCell> objeto que representa a célula no <xref:System.Web.UI.WebControls.DataGrid> controle que você deseja adicionar o atributo. O <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> coleta para o <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> propriedade o <xref:System.Web.UI.WebControls.DataGridItemEventArgs> objeto passado para o manipulador de eventos pode ser usado para obter os detalhes desejados <xref:System.Web.UI.WebControls.TableCell> objeto. Você pode usar o <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> método do <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> coleta para o <xref:System.Web.UI.WebControls.TableCell> objeto para adicionar atributos ao `<td>` marca.  
  
 Para adicionar um atributo para o `<tr>` marca, primeiro obtenha o <xref:System.Web.UI.WebControls.DataGridItem> objeto que representa a linha no <xref:System.Web.UI.WebControls.DataGrid> controle que você deseja adicionar o atributo. O <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> propriedade o <xref:System.Web.UI.WebControls.DataGridItemEventArgs> objeto passado para o manipulador de eventos pode ser usado para obter os detalhes desejados <xref:System.Web.UI.WebControls.DataGridItem> objeto. Você pode usar o <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> método do <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> coleta para o <xref:System.Web.UI.WebControls.DataGridItem> objeto para adicionar atributos ao `<tr>` marca.  
  
<a name="Accessibility"></a>   
## <a name="accessibility"></a>Acessibilidade  
 Para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controles ASP.NET e acessibilidade](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:DataGrid  
    AccessKey="string"  
    AllowCustomPaging="True|False"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSortCommand="SortCommand event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    PageSize="integer"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <Columns>  
                <asp:BoundColumn  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ReadOnly="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundColumn>  
                <asp:ButtonColumn  
                    ButtonType="LinkButton|PushButton"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonColumn>  
                <asp:EditCommandColumn  
                    ButtonType="LinkButton|PushButton"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:EditCommandColumn>  
                <asp:HyperLinkColumn  
                    DataNavigateUrlField="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    NavigateUrl="uri"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkColumn>  
                <asp:TemplateColumn  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateColumn>  
        </Columns>  
        <EditItemStyle />  
        <FooterStyle />  
        <HeaderStyle />  
        <ItemStyle />  
        <PagerStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalAlign="NotSet|Left|Center|Right|Justify"  
            Mode="NextPrev|NumericPages"  
            NextPageText="string"  
            OnDisposed="Disposed event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PrevPageText="string"  
            VerticalAlign="NotSet|Top|Middle|Bottom"  
            Visible="True|False"  
            Width="size"  
            Wrap="True|False"  
        />  
        <SelectedItemStyle />  
</asp:DataGrid>  
```  
  
   
  
## Examples  
 Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [baixar](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=11217).  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid> controle para exibir os itens na fonte de dados.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid> controle para um carrinho de compras simple.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic DataGrid Example 2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/source2vb.aspx#2)]  
  
 O exemplo de código a seguir demonstra como adicionar dinamicamente os atributos para o `<td>` e `<tr>` marcas geradas pelo <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridTrTdTags#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridTrTdTags/CS/datagridtdtrtagcs.aspx#1)]
 [!code-aspx-vb[DataGridTrTdTags#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridTrTdTags/VB/datagridtdtrtagvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridExample/CS/datagridcs.aspx#1)]
 [!code-aspx-vb[DataGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridExample/VB/datagridvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.DataGrid> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.DataGrid> classe.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a paginação personalizada está habilitada.</summary>
        <value>
          <see langword="true" /> se a paginação personalizada estiver habilitada; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permite a você exibir o conteúdo de paginação de <xref:System.Web.UI.WebControls.DataGrid> controle em segmentos de página. O número de itens em uma página é determinado pelo <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade. Se nenhum valor for especificado para o <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade, o <xref:System.Web.UI.WebControls.DataGrid> exibirá os 10 itens em uma página.  
  
 Normalmente, uma fonte de dados que contém todas as linhas a <xref:System.Web.UI.WebControls.DataGrid> controle é carregado sempre o <xref:System.Web.UI.WebControls.DataGrid> move o controle para uma página diferente. Quando a fonte de dados é muito grande, isso pode consumir muitos recursos. Paginação personalizada permite que você carregue apenas o segmento de dados necessários para exibir uma única página.  
  
 Para habilitar a paginação personalizada, defina a <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> e <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> propriedades `true`. Em seguida, forneça o código para tratar o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento.  
  
 A lógica típica para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> manipulador de eventos é primeiro definir o <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade para o índice da página que você deseja exibir.  
  
> [!NOTE]
>  O manipulador de eventos recebe um <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> objeto como um parâmetro. Você pode usar o <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> esse parâmetro para determinar o índice da página selecionada pelo usuário dos elementos de seleção da página de propriedade de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Em seguida, crie uma fonte de dados que contém os dados para exibir em uma única página e, em seguida, use o <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> método para associar os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  Como apenas um segmento de dados é carregado, você deve definir o <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> propriedade para o número total de itens no <xref:System.Web.UI.WebControls.DataGrid> controle. Isso permite que o controle determinar o número total de páginas necessário para exibir todos os itens a <xref:System.Web.UI.WebControls.DataGrid> controle. Essa propriedade normalmente programaticamente é definida uma vez o número total de itens de <xref:System.Web.UI.WebControls.DataGrid> controle é determinado.  
  
 Quando a paginação está habilitada com a <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> está definida como `false`, o <xref:System.Web.UI.WebControls.DataGrid> controle pressupõe que a fonte de dados contém todos os itens a serem exibidos. O <xref:System.Web.UI.WebControls.DataGrid> controle calcula os índices dos itens na página exibida com base no índice de página, especificado pelo <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade e o número de itens em uma página, especificado pelo <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade.  
  
 Quando o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> está definida como `true`, o <xref:System.Web.UI.WebControls.DataGrid> controle assume que a fonte de dados contém apenas os itens conforme determinado pelo <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> propriedade. Todos os itens até o número de itens especificado pelo <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade são exibidas.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> propriedade para habilitar a paginação personalizada.  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a paginação está habilitada.</summary>
        <value>
          <see langword="true" /> se a paginação estiver habilitada; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permite a você exibir o conteúdo de paginação de <xref:System.Web.UI.WebControls.DataGrid> controle em segmentos de página. O número de itens em uma página é determinado pelo <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade. Se nenhum valor for especificado para o <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade, o <xref:System.Web.UI.WebControls.DataGrid> controle exibirá os 10 itens em uma página.  
  
 Por padrão, a paginação está desabilitada. Para habilitar a paginação, defina essa propriedade como `true` e forneça o código para tratar o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento.  
  
 A lógica típica para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento é definir o <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade para o índice da página que você deseja exibir e, em seguida, usar o <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> método para associar os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  O manipulador de eventos recebe um <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> objeto como um parâmetro. Você pode usar o <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> esse parâmetro para determinar o índice da página selecionada pelo usuário dos elementos de seleção da página de propriedade de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Com paginação padrão, o <xref:System.Web.UI.WebControls.DataGrid> controle pressupõe que a fonte de dados contém todos os itens a serem exibidos. O <xref:System.Web.UI.WebControls.DataGrid> controle calcula os índices dos itens na página exibida com base no índice de página, especificado pelo <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade e o número de itens de itens em uma página, especificado pelo <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade.  
  
 Normalmente, uma fonte de dados que contém todos os itens a serem exibidos é carregada sempre o <xref:System.Web.UI.WebControls.DataGrid> controle é paginado. Quando a fonte de dados é muito grande, isso pode consumir muitos recursos. Paginação personalizada permite que você carregue apenas o segmento de dados necessários para exibir uma única página. Para obter informações adicionais sobre paginação personalizada, consulte o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> propriedade para habilitar a paginação.  
  
 [!code-aspx-csharp[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a classificação está habilitada.</summary>
        <value>
          <see langword="true" /> se a classificação estiver habilitada; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando a classificação está ativada, <xref:System.Web.UI.WebControls.LinkButton> controles são renderizados na seção de cabeçalho de cada coluna em que o <xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A> está definida. Essas <xref:System.Web.UI.WebControls.LinkButton> controles permitem que você classifique o <xref:System.Web.UI.WebControls.DataGrid> controle pela coluna selecionada. A única exceção é quando você usa um <xref:System.Web.UI.WebControls.TemplateColumn> tipo de coluna com o <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> conjunto de propriedades. Nesse caso, você deve fornecer um <xref:System.Web.UI.WebControls.Button> controlar o <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> da coluna.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.SortCommand> é gerado quando um do <xref:System.Web.UI.WebControls.LinkButton> controles é clicado. Cabe a você para fornecer o código para o manipulador de eventos. A lógica típica para o manipulador é classificar a lista e, em seguida, associar novamente os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.AllowSorting%2A> propriedade para habilitar a classificação.  
  
 [!code-aspx-csharp[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo para itens alternados no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa as propriedades de estilo para alternar itens no <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> propriedade para fornecer um estilo personalizado para alternância de itens no <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataGrid> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataGrid> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para os itens alternados, coloque o `<AlternatingItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<AlternatingItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> propriedade para especificar uma cor de plano de fundo diferente para itens alternados a <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridAlternatingItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAlternatingItemStyle/CS/datagridalternatingitemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridAlternatingItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAlternatingItemStyle/VB/datagridalternatingitemstylevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os objetos <see cref="T:System.Web.UI.WebControls.BoundColumn" /> são criados e exibidos automaticamente no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> para cada campo na fonte de dados.</summary>
        <value>
          <see langword="true" /> se os objetos <see cref="T:System.Web.UI.WebControls.BoundColumn" /> forem automaticamente criados e exibidos; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para criar automaticamente uma <xref:System.Web.UI.WebControls.BoundColumn> objeto para cada campo na fonte de dados. Cada campo é renderizado como uma coluna no <xref:System.Web.UI.WebControls.DataGrid> controle na ordem em que os campos aparecem na fonte de dados.  
  
 Nem todos os tipos de dados podem ser associados para o <xref:System.Web.UI.WebControls.DataGrid> controle. Se um campo contém um tipo de dados sem suporte, uma coluna não será criada para esse campo. Se a fonte de dados contém apenas uma coluna com um tipo de dados sem suporte, uma exceção será lançada. A tabela a seguir mostra os tipos de dados que podem ser associados ao controle.  
  
|Tipo de dados|Descrição|  
|---------------|-----------------|  
|Primitivos|Um primitivo de tipo de dados, como <xref:System.Int32?displayProperty=nameWithType>, <xref:System.Char>, <xref:System.Double>e assim por diante. Para obter uma lista completa, consulte <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType>.|  
|Cadeia de caracteres|Um objeto <xref:System.String?displayProperty=nameWithType>.|  
|DateTime|Um objeto <xref:System.DateTime?displayProperty=nameWithType>.|  
|Decimal|Um objeto <xref:System.Decimal?displayProperty=nameWithType>.|  
  
> [!NOTE]
>  Colunas explicitamente declaradas podem ser usadas em conjunto com as colunas geradas automaticamente. Quando usam as explicitamente declarado colunas será processada primeiro, seguido pelas colunas geradas automaticamente. Gerado automaticamente colunas não são adicionadas ao <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> propriedade para criar automaticamente uma <xref:System.Web.UI.WebControls.BoundColumn> objeto para cada campo na fonte de dados.  
  
 [!code-aspx-csharp[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL de uma imagem para exibir no plano de fundo do <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle.</summary>
        <value>A URL de uma imagem a ser exibida na tela de fundo do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> propriedade para especificar uma imagem a ser exibida no plano de fundo do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  Se a imagem especificada é menor do que o <xref:System.Web.UI.WebControls.DataGrid> controle, a imagem será lado a lado para preencher o plano de fundo do controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> propriedade para especificar uma imagem de plano de fundo para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridBackImageUrl/CS/datagridbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DataGridBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridBackImageUrl/VB/datagridbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão <see langword="Cancel" /> recebe um clique para um item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> é gerado quando o `Cancel` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> conjuntos de eventos a <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> evento para cancelar as edições feitas em um item de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o <see langword="Cancel" /> nome do comando. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.CancelCommandName> campo para representar o `Cancel` nome do comando.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos que representam as colunas do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> que contém uma coleção de objetos que representam as colunas do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para controlar programaticamente a coleção de colunas no <xref:System.Web.UI.WebControls.DataGrid> controle. O <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção contém colunas explicitamente declaradas renderizadas no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  Colunas explicitamente declaradas podem ser usadas em conjunto com as colunas geradas automaticamente. Quando usam as explicitamente declarado colunas será processada primeiro, seguido por colunas geradas automaticamente. Colunas geradas automaticamente não são adicionadas ao <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção.  
  
 A ordem em que as colunas são exibidas no <xref:System.Web.UI.WebControls.DataGrid> controle é controlado pela ordem em que as colunas aparecem o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção.  
  
 A tabela a seguir mostra as classes de coluna diferente que derivam de <xref:System.Web.UI.WebControls.DataGridColumn> de classe e pode ser usado no <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção.  
  
|Tipo de coluna|Descrição|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|Exibe uma coluna associada a um campo em uma fonte de dados. Ele exibe cada item no campo como texto. Esse é o tipo de coluna padrão da <xref:System.Web.UI.WebControls.DataGrid> controle.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|Exibe um botão de comando para cada item na coluna. Isso permite que você crie uma coluna de controles de botão personalizado, como o `Add` ou `Remove` botão.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|Exibe uma coluna que contém comandos de edição para cada item na coluna.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|Exibe o conteúdo de cada item na coluna como um hiperlink. O conteúdo da coluna pode ser associado a um campo em uma fonte de dados ou texto estático.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|Exibe cada item na coluna de um modelo especificado a seguir. Isso permite que você forneça controles personalizados na coluna.|  
  
> [!NOTE]
>  Embora programaticamente, você pode adicionar colunas para o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção, é mais fácil listar as colunas estaticamente e, em seguida, use o <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> propriedade para mostrar ou ocultar a coluna.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> coleção para adicionar dinamicamente uma coluna para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Columns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Columns Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumnSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList CreateColumnSet (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ArrayList CreateColumnSet(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados que está sendo usada para criar a hierarquia de controle</param>
        <param name="useDataSource">Se usar a fonte de dados para gerar colunas automaticamente ou usar o estado salvo.</param>
        <summary>Cria o conjunto de colunas a serem usadas para criar a hierarquia de controle. Quando <see cref="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" /> for true, as colunas são criadas de acordo com a fonte de dados e são acrescentadas ao conjunto de colunas definidas no <see cref="P:System.Web.UI.WebControls.DataGrid.Columns" /> coleção.</summary>
        <returns>Um <see cref="T:System.Collections.ArrayList" /> que contém o conjunto efetivo de colunas na ordem correta.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">Se usar a fonte de dados para gerar colunas automaticamente ou usar o estado salvo.</param>
        <summary>Cria a hierarquia de controle que é usada para renderizar o <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação presume que todos os filhos da coleção de controles já foi limpa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="useDataSource" />é <see langword="true" />, o valor de <see cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" /> não estiver definida, e a fonte de dados selecionada não implementar o <see cref="T:System.Collections.ICollection" /> interface.  
  
 \- ou -  
  
 <paramref name="useDataSource" />é <see langword="true" /> e a fonte de dados possui um <see cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" /> propriedade.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria o novo estilo de controle.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.Style" /> representa o novo estilo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.DataGrid.CreateControlStyle%2A> método em um servidor personalizado de controle para que ele sempre exibe o <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> sem nenhum <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> no <xref:System.Web.UI.WebControls.DataGrid>.  
  
 [!code-aspx-csharp[CustomDataGridCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataGridCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataGridCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstyle.cs#2)]
[!code-vb[CustomDataGridCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataGridItem CreateItem (int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataGridItem CreateItem(int32 itemIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">O índice para o <see cref="T:System.Web.UI.WebControls.DataGridItem" /> objeto.</param>
        <param name="dataSourceIndex">O índice do item de dados da fonte de dados.</param>
        <param name="itemType">Um dos valores de <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <summary>Cria um objeto <see cref="T:System.Web.UI.WebControls.DataGridItem" />.</summary>
        <returns>Um objeto <see cref="T:System.Web.UI.WebControls.DataGridItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.CreateItem%2A> é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataGrid> classe para criar seu <xref:System.Web.UI.WebControls.DataGridItem> objetos.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice da página exibida no momento.</summary>
        <value>O índice baseado em zero da página exibida no momento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para determinar a página exibida atualmente no <xref:System.Web.UI.WebControls.DataGrid> controlar quando a paginação está habilitada. Essa propriedade também é usada para controlar programaticamente a página que é exibida.  
  
 Você também pode ocultar interna em controles de paginação e criar controles personalizados. Para exibir uma página específica, defina essa propriedade como o índice de página que você deseja exibir e, em seguida, associar novamente os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade controle programático de página para exibir o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O índice da página especificada é um valor negativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão Excluir recebe um clique de um item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> evento é gerado quando o botão de exclusão é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> evento remove o item selecionado da fonte de dados e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> eventos para excluir um item do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando Delete. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommandName> campo para representar o nome do comando Delete.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão Editar é clicado para um item no controle de <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento é gerado quando o botão de edição é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento define o <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade para a linha selecionada e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento para editar um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando Editar. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.EditCommandName> campo para representar o nome do comando Editar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice de um item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> a ser editado.</summary>
        <value>O índice de um item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> a ser editado. O valor padrão é -1, que indica que nenhum item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> está sendo editado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade quando o <xref:System.Web.UI.WebControls.DataGrid> controle contém um <xref:System.Web.UI.WebControls.EditCommandColumn> para determinar o índice do item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle para editar.  
  
 Essa propriedade também é usada para controlar programaticamente o item que está sendo editado. A definição dessa propriedade para um índice de um item no <xref:System.Web.UI.WebControls.DataGrid> controle permitirá que os controles de edição para aquele item no <xref:System.Web.UI.WebControls.EditCommandColumn>.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade é baseado em zero.  
  
 Para cancelar a edição, defina essa propriedade como -1.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade para determinar o item selecionado para edição no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O índice especificado é menor que -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo do item selecionado para edição no <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que contém as propriedades de estilo do item selecionado para edição no <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> propriedade para fornecer um estilo personalizado para o item selecionado para edição no <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataGrid> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataGrid> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para o item selecionado para edição, coloque o `<EditItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<EditItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> propriedade para definir a cor de plano de fundo do item selecionado para edição para amarelo.  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo da seção de rodapé no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo da seção de rodapé do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para fornecer um estilo personalizado para o rodapé do <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> propriedade o <xref:System.Web.UI.WebControls.DataGrid> controle herda as configurações de estilo do <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade, o <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> propriedade também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo único. Você pode substituir as configurações de estilo herdado, definindo o <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> propriedade. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade.  
  
 Para especificar um estilo personalizado para a seção de rodapé, coloque o `<FooterStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<FooterStyle>` marca.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> propriedade para definir a cor de plano de fundo da seção de rodapé.  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo da seção de cabeçalho no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo da seção de cabeçalho do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado na seção de cabeçalho do <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> propriedade o <xref:System.Web.UI.WebControls.DataGrid> controle herda as configurações de estilo do <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade, o <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> propriedade também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo único. Você pode substituir as configurações de estilo herdado, definindo o <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> propriedade. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade.  
  
 Para especificar um estilo personalizado para a seção de cabeçalho, coloque o `<HeaderStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<HeaderStyle>` marca.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> propriedade para definir a cor de plano de fundo da seção de cabeçalho.  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataGridItem item, class System.Web.UI.WebControls.DataGridColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columns" Type="System.Web.UI.WebControls.DataGridColumn[]" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Web.UI.WebControls.DataGridItem" /> a ser inicializado.</param>
        <param name="columns">Uma matriz de <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> objetos que contém as colunas neste <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle.</param>
        <summary>Inicializa especificado <see cref="T:System.Web.UI.WebControls.DataGridItem" /> objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.InitializeItem%2A> é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataGrid> classe ao inicializar especificado <xref:System.Web.UI.WebControls.DataGridItem> objeto.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DataGridItem item, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Web.UI.WebControls.DataGridItem" /> que contém o pager.</param>
        <param name="columnSpan">O número de colunas para abranger o pager.</param>
        <param name="pagedDataSource">Um <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> que contém as propriedades para o pager.</param>
        <summary>Cria um <see cref="T:System.Web.UI.WebControls.DataGridItem" /> objeto que contém a interface do usuário de paginação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A interface do usuário de paginação é uma barra de navegação que é compilado em um único <xref:System.Web.UI.WebControls.TableCell> que se estende por todas as colunas de uma <xref:System.Web.UI.WebControls.DataGrid> controle. O <xref:System.Web.UI.WebControls.DataGrid.InitializePager%2A> é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataGrid> classe para criar a linha de pager.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre ao se clicar em qualquer botão no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> evento é gerado quando qualquer botão é clicado no <xref:System.Web.UI.WebControls.DataGrid> controle. Esse evento é geralmente usado para lidar com controles de botões com um valor de CommandName personalizado, como adicionar, o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> evento para adicionar ou remover um item de um carrinho de compras.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre no servidor quando um item no controle de <see cref="T:System.Web.UI.WebControls.DataGrid" /> é criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento é gerado quando um item no <xref:System.Web.UI.WebControls.DataGrid> controle é criado, durante ida e volta e no momento em que os dados são associados ao controle.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento normalmente é usado para controlar o conteúdo e a aparência de uma linha no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento para exibir a ordem em que os itens são criados no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre depois que um item tem limite de dados em relação ao controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> evento é gerado após um item de dados associados para o <xref:System.Web.UI.WebControls.DataGrid> controle. Esse evento é a última oportunidade de acessar o item de dados antes de ser exibido no cliente. Depois que esse evento é gerado, o item de dados é nulled-out e não está mais disponível.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataGrid> são dados limitados.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.DataGridItem" /> que representam os itens individuais no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.DataGridItemCollection" /> que contém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.DataGridItem" /> que representam os itens individuais no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.Items%2A> coleção para controlar programaticamente os itens a <xref:System.Web.UI.WebControls.DataGrid> controle. O <xref:System.Web.UI.WebControls.DataGrid.Items%2A> coleção fornece os métodos para adicionar ou remover itens na coleção. No entanto, você pode controlar o conteúdo de um item, fornecendo um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento.  
  
> [!NOTE]
>  Somente os itens associados à fonte de dados estão contidos no <xref:System.Web.UI.WebControls.DataGrid.Items%2A> coleção. O cabeçalho, rodapé e separador não são incluídos na coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.Items%2A> coleção para exibir o conteúdo de cada item de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Items Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo dos itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo dos itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado para os itens do <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataGrid> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataGrid> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para os itens do <xref:System.Web.UI.WebControls.DataGrid> controlar, coloque o `<ItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<ItemStyle>` marca.  
  
 Você também pode usar o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> propriedade para fornecer uma aparência diferente para a alternância de itens de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade para definir a cor de plano de fundo dos itens no <xref:System.Web.UI.WebControls.DataGrid> para amarelo.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um estado salvo do <see cref="T:System.Web.UI.WebControls.DataGrid" />.</param>
        <summary>Carrega um estado salvo do <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string NextPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NextPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o próximo argumento de comando. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument> campo para representar o próximo argumento de comando.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Passe o evento gerado por um controle dentro do contêiner a hierarquia de controle de servidor da interface do usuário da página.</summary>
        <returns>
          <see langword="true" />para indicar que este método é a transmissão de um evento gerado por um controle dentro do contêiner a hierarquia de controle de servidor de interface do usuário da página; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnBubbleEvent%2A> método para passar um evento gerado por um controle dentro do contêiner a hierarquia de controle de servidor da interface do usuário da página.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnCancelCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> evento é gerado quando o botão Cancelar é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> conjuntos de eventos a <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> evento para cancelar as edições feitas em um item de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnDeleteCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> evento é gerado quando o botão de exclusão é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> evento remove o item selecionado da fonte de dados e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> eventos para excluir um item do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnEditCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento é gerado quando o botão de edição é clicado para um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento define o <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade para a linha selecionada e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.EditCommand> evento para editar um item no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnItemCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> evento é gerado quando qualquer botão é clicado no <xref:System.Web.UI.WebControls.DataGrid> controle. Esse evento é geralmente usado para lidar com controles de botões com um valor de CommandName personalizado, como adicionar, o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> evento para adicionar ou remover um item de um carrinho de compras.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento é gerado quando um item no <xref:System.Web.UI.WebControls.DataGrid> controle é criado, durante ida e volta e no momento em que os dados são associados ao controle.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento normalmente é usado para controlar o conteúdo e a aparência de uma linha no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> evento para exibir a ordem em que os itens são criados no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> evento é gerado após um item de dados associados para o <xref:System.Web.UI.WebControls.DataGrid> controle. Esse evento é a última oportunidade de acessar o item de dados antes de ser exibido no cliente. Depois que esse evento é gerado, o item de dados é nulled-out e não está mais disponível.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataGrid> são dados limitados.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (System.Web.UI.WebControls.DataGridPageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.Web.UI.WebControls.DataGridPageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> é gerado quando um dos elementos de seleção da página é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento define o <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade para o índice da página que você deseja exibir e, em seguida, usa o <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> método para associar os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!NOTE]
>  O manipulador de eventos recebe um <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> objeto como um parâmetro. Você pode usar o <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> esse parâmetro para determinar o índice da página selecionada pelo usuário dos elementos de seleção da página de propriedade de <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento. Ele exibe páginas de <xref:System.Web.UI.WebControls.DataGrid> controle em incrementos de 10-item.  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSortCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCommand (System.Web.UI.WebControls.DataGridSortCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCommand(class System.Web.UI.WebControls.DataGridSortCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnSortCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.SortCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.SortCommand> evento é gerado quando uma coluna é classificada.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.SortCommand> classifica a lista de eventos e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.SortCommand> evento para classificar um <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> método.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> evento é gerado quando o botão de atualização de um item é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> evento atualiza os dados, conjuntos a <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade como -1 (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> eventos para atualizar os valores de um item no <xref:System.Web.UI.WebControls.DataGrid> controle para novos valores especificados pelo usuário.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PageCommandName">
      <MemberSignature Language="C#" Value="public const string PageCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PageCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando de página. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.PageCommandName> campo para representar o nome do comando de página.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número total de páginas necessárias para exibir os itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>O número total de páginas necessárias para exibir os itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para determinar programaticamente o número de páginas necessário para exibir os itens no <xref:System.Web.UI.WebControls.DataGrid> controle. Esta propriedade é usado apenas quando o <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> está definida como `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.PageCount%2A> propriedade para determinar o número de páginas necessário para exibir os itens a <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um dos elementos de seleção da página recebe um clique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> é gerado quando um dos elementos de seleção da página é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento define o <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> propriedade para o índice da página que você deseja exibir e, em seguida, usa o <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> método para associar os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> evento. Ele exibe páginas de <xref:System.Web.UI.WebControls.DataGrid> controle em incrementos de 10-item.  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridPagerStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPagerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo da seção de paginação do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> que contém as propriedades de estilo da seção de paginação do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado na seção de paginação do <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para especificar um estilo personalizado para a seção de paginação, coloque o `<PagerStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<PagerStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A> propriedade para especificar um estilo personalizado para os elementos da página seleção do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPagerStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPagerStyle/CS/datagridpagerstylecs.aspx#1)]
 [!code-aspx-vb[DataGridPagerStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPagerStyle/VB/datagridpagerstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de itens a ser exibido em uma página única do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>O número de itens a serem exibidos em uma única página do controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é 10.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar o número de itens a serem exibidos em uma única página do <xref:System.Web.UI.WebControls.DataGrid> controle. O <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> propriedade deve ser definida como `true` para essa propriedade tenha efeito.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade para especificar que os cinco itens é exibido em uma única página do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPageSize/CS/datagridpagesizecs.aspx#1)]
 [!code-aspx-vb[DataGridPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPageSize/VB/datagridpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O tamanho da página especificada é menor que 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define a hierarquia de controle para este <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.DataGrid> controle para configurar a hierarquia de controle no <xref:System.Web.UI.WebControls.DataGrid> controlar antes do controle é processado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string PrevPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PrevPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o argumento do comando anterior. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument> campo para representar o argumento do comando anterior.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado atual do <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <returns>O estado salvo do <see cref="T:System.Web.UI.WebControls.DataGrid" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando Select. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.SelectCommandName> campo para representar o nome do comando Select.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>O índice do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> propriedade para determinar o índice do item selecionado pelo usuário no <xref:System.Web.UI.WebControls.DataGrid> controle. Você também pode usar essa propriedade para especificar programaticamente o item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para cancelar a seleção de um item no <xref:System.Web.UI.WebControls.DataGrid> controlar, defina essa propriedade como -1.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> propriedade para determinar o número de índice do item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle. Ele também mostra como marcar e desmarcar um item por meio de programação.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O índice especificado é menor que -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.DataGridItem" /> que representa o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.DataGridItem" /> que representa o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.SelectedItem%2A> propriedade para obter um <xref:System.Web.UI.WebControls.DataGridItem> objeto que representa o item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle. Esse objeto, em seguida, pode ser usado para acessar as propriedades do item selecionado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propriedade para acessar as propriedades do item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo do item atualmente selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo do item atualmente selecionado no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> propriedade para fornecer um estilo personalizado para o item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle. Atributos de estilo comuns que podem ser ajustados incluem forecolor, backcolor, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataGrid> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataGrid> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para o item selecionado, coloque o `<SelectedItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataGrid> controle. Em seguida, você pode listar os atributos de estilo de abertura `<SelectedItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> propriedade para definir a cor de plano de fundo do item selecionado no <xref:System.Web.UI.WebControls.DataGrid> controle para amarelo.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSelectedItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSelectedItemStyle/CS/datagridselecteditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridSelectedItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSelectedItemStyle/VB/datagridselecteditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o rodapé é exibido no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>
          <see langword="true" /> para exibir o rodapé; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `true` para exibir o rodapé do <xref:System.Web.UI.WebControls.DataGrid> controle. A aparência do rodapé é controlada usando o <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> propriedade para exibir o rodapé do <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o cabeçalho automático é exibido no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <value>
          <see langword="true" /> para exibir o cabeçalho; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `true` para exibir o cabeçalho de <xref:System.Web.UI.WebControls.DataGrid>. A aparência do cabeçalho é controlada usando o <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> propriedade para ocultar o cabeçalho no <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridSortCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma coluna é classificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.SortCommand> evento é gerado quando uma coluna é classificada.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.SortCommand> classifica a lista de eventos e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.SortCommand> evento para classificar um <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortCommandName">
      <MemberSignature Language="C#" Value="public const string SortCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SortCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando de classificação. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.SortCommandName> campo para representar o nome do comando de classificação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valor para o <see cref="T:System.Web.UI.WebControls.DataGrid" /> controle.</summary>
        <value>Sempre retorna <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.TagKey%2A> propriedade permite que o fluxo de saída gravar a marcação HTML apropriada para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marca o ponto de partida para iniciar o rastreamento e salvar alterações para o controle como parte do estado de exibição do controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão Atualizar recebe um clique de um item no controle <see cref="T:System.Web.UI.WebControls.DataGrid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> evento é gerado quando o botão de atualização de um item é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> evento atualiza os dados, conjuntos do <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataGrid> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataGrid> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> eventos para atualizar os valores de um item no <xref:System.Web.UI.WebControls.DataGrid> controle para novos valores especificados pelo usuário.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando de atualização. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataGrid.UpdateCommandName> campo para representar o nome do comando de atualização.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número virtual de itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> quando a paginação personalizada é usada.</summary>
        <value>O número virtual de itens no controle <see cref="T:System.Web.UI.WebControls.DataGrid" /> quando a paginação personalizada é usada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar quantos itens no virtual o <xref:System.Web.UI.WebControls.DataGrid> controlar quando a paginação personalizada é usada. Esta propriedade é usado apenas quando o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> está definida como `true`.  
  
 Se o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> está definida como `true`, o número de páginas necessário para exibir todos os itens a <xref:System.Web.UI.WebControls.DataGrid> controle é calculado com base nos valores da <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> e <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> propriedades.  
  
 Se o <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> está definida como `false`, o número de páginas exibidas no <xref:System.Web.UI.WebControls.DataGrid> controle é calculado com base nos valores da <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> propriedade e o número total de itens na fonte de dados.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> propriedade para especificar o número total de itens no <xref:System.Web.UI.WebControls.DataGrid> controlar quando a paginação personalizada é usada.  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é um número negativo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
