<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exibe os valores de um único registro de uma fonte de dados usando modelos definidos pelo usuário. O controle <see cref="T:System.Web.UI.WebControls.FormView" /> permite que você edite, exclua e insira registros.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Modelos](#templates)  
  
-   [Associando a dados](#binding_to_data)  
  
-   [Operações de dados](#data_operations)  
  
-   [Personalizando a Interface do usuário](#customizing_the_user_interface)  
  
-   [Eventos](#events)  
  
-   [Acessibilidade](#accessibility)  
  
-   [Aplicando estilos CSS](#applying_styles)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 O <xref:System.Web.UI.WebControls.FormView> controle é usado para exibir um único registro de uma fonte de dados. Ele é semelhante ao <xref:System.Web.UI.WebControls.DetailsView> controlar, exceto que ele exibe os modelos definidos pelo usuário em vez de campos de linha. Criar seus próprios modelos fornece maior flexibilidade para controlar como os dados são exibidos. O <xref:System.Web.UI.WebControls.FormView> controle suporta os seguintes recursos:  
  
-   Associando a controles de fonte de dados, como <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Recursos internos de inserção.  
  
-   Atualizar e excluir recursos internos.  
  
-   Recursos internos de paginação.  
  
-   Acesso programático para o <xref:System.Web.UI.WebControls.FormView> modelo de objeto para definir propriedades, manipular eventos e assim por diante dinamicamente.  
  
-   Aparência personalizável através de modelos definidos pelo usuário, temas e estilos.  
  
<a name="templates"></a>   
## <a name="templates"></a>Modelos  
 Para o <xref:System.Web.UI.WebControls.FormView> controle para exibir o conteúdo, você precisa criar modelos para as diferentes partes do controle. A maioria dos modelos são opcionais. No entanto, você deve criar um modelo para o modo no qual o controle está configurado. Por exemplo, um <xref:System.Web.UI.WebControls.FormView> controle que dá suporte à inserção de registros deve ter um modelo de item de inserção definido. A tabela a seguir lista os modelos diferentes que você pode criar.  
  
|Tipo de modelo|Descrição|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Define o conteúdo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição. Este modelo geralmente contém controles de entrada e botões de comando com a qual o usuário pode editar um registro existente.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Define o conteúdo para a linha de dados vazios exibida quando o <xref:System.Web.UI.WebControls.FormView> controle está associado a uma fonte de dados que não contém quaisquer registros. Este modelo geralmente contém conteúdo para alertar o usuário que a fonte de dados não contém quaisquer registros.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Define o conteúdo da linha de rodapé. Este modelo geralmente contém qualquer conteúdo adicional que você deseja exibir na linha de rodapé. **Observação:** como alternativa, você pode simplesmente especificar texto a ser exibido na linha de rodapé, definindo o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriedade.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Define o conteúdo para a linha de cabeçalho. Este modelo geralmente contém qualquer conteúdo adicional que você deseja exibir na linha de cabeçalho. **Observação:** como alternativa, você pode simplesmente especificar texto a ser exibido na linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriedade.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Define o conteúdo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura. Este modelo geralmente contém conteúdo para exibir os valores de um registro existente.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Define o conteúdo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção. Este modelo geralmente contém controles de entrada e botões de comando com a qual o usuário pode adicionar um novo registro.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Define o conteúdo da linha de pager exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`). Este modelo geralmente contém controles com o qual o usuário pode navegar para outro registro. **Observação:** o <xref:System.Web.UI.WebControls.FormView> controle tem uma interface de usuário de linha de pager internos (IU). Você precisa criar um modelo de paginação somente se você deseja criar sua própria linha pager personalizado.|  
  
 Para exibir o valor de um campo em um modelo de item, use uma expressão de associação de dados. Para obter mais informações sobre expressões de associação de dados, consulte [sintaxe de expressão de associação de dados](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Controles de entrada no modelo de item de inserção e editar o modelo de item podem ser associados aos campos de uma fonte de dados usando uma expressão de associação bidirecional. Isso permite que o <xref:System.Web.UI.WebControls.FormView> controle para extrair os valores de controle de entrada para uma atualização ou operação de inserção automaticamente. Expressões de associação bidirecional também permitem que os controles de entrada em um modelo de item de edição para exibir automaticamente os valores do campo original. Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Associando a dados  
 O <xref:System.Web.UI.WebControls.FormView> controle pode ser vinculado a um controle de fonte de dados (como <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, ou <xref:System.Web.UI.WebControls.AccessDataSource>) ou para qualquer coleção de fonte de dados que implementa o <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interface, como <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, ou outros tipos de coleção. Use um dos seguintes métodos para associar o <xref:System.Web.UI.WebControls.FormView> controle para o tipo de fonte de dados apropriado:  
  
-   Para vincular a um controle de fonte de dados, definir o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade do <xref:System.Web.UI.WebControls.FormView> o controle para o <xref:System.Web.UI.Control.ID%2A> valor do controle de fonte de dados. O <xref:System.Web.UI.WebControls.FormView> controle automaticamente associa ao controle de fonte de dados especificado e pode tirar proveito da fonte de dados com recursos de controle para executar a inserir, atualizar, excluir e funcionalidade de paginação. Esse é o método preferencial para associar aos dados.  
  
-   Para vincular a uma fonte de dados que implementa o <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interface, definir programaticamente o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propriedade do <xref:System.Web.UI.WebControls.FormView> controle à fonte de dados e, em seguida, chamar o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método. Ao usar esse método, o <xref:System.Web.UI.WebControls.FormView> controle não fornece inserindo internas, atualizar, excluir e funcionalidade de paginação. Você precisa fornecer essa funcionalidade por meio do evento apropriado.  
  
 Para obter mais informações sobre associação de dados, consulte [ASP.NET mapa de conteúdo de acesso de dados](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Sempre que possível, é altamente recomendável que os valores são codificada em HTML antes de eles serem exibidos neste controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Controles de servidor de validação também são fornecidos para avaliar a entrada do usuário. Para obter mais informações, consulte [Introdução aos controles de validação](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Operações de dados  
 O <xref:System.Web.UI.WebControls.FormView> controle fornece muitos recursos internos que permitem ao usuário atualizar, excluir, inserir e percorrer os itens no controle. Quando o <xref:System.Web.UI.WebControls.FormView> controle está associado a um controle de fonte de dados, o <xref:System.Web.UI.WebControls.FormView> controle pode tirar proveito da fonte de dados de recursos do controle e fornecer a atualização automática, excluir, inserir e funcionalidade de paginação.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView> controle pode oferecer suporte para atualização, exclusão, inserção e operações de paginação com outros tipos de fontes de dados; no entanto, você deve fornecer um manipulador de eventos apropriado com a implementação para essas operações.  
  
 Porque o <xref:System.Web.UI.WebControls.FormView> controle usa modelos, ele não fornece uma maneira de gerar automaticamente os botões de comando para executar a atualização, exclusão ou operações de inserção. Você deve incluir manualmente esses botões de comando no modelo apropriado. O <xref:System.Web.UI.WebControls.FormView> controle reconhece determinados botões que têm suas `CommandName` propriedades definidas como valores específicos. A seguinte tabela lista os botões de comando que o <xref:System.Web.UI.WebControls.FormView> controle reconhece.  
  
|Botão|Valor CommandName|Descrição|  
|------------|-----------------------|-----------------|  
|Cancelar|"Cancelar"|Usado na atualização ou inserção de operações para cancelar a operação e descartar os valores inseridos pelo usuário. O <xref:System.Web.UI.WebControls.FormView> controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade.|  
|Excluir|"Delete"|Usada em operações de exclusão para excluir o registro exibido da fonte de dados. Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleting> e <xref:System.Web.UI.WebControls.FormView.ItemDeleted> eventos.|  
|Editar|"Edit"|Usado em operações de atualização colocar o <xref:System.Web.UI.WebControls.FormView> controle no modo de edição. O conteúdo especificado no <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade é exibida para a linha de dados.|  
|Inserir|"Inserir"|Usada em operações de inserção para a tentativa de inserir um novo registro na fonte de dados usando os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserting> e <xref:System.Web.UI.WebControls.FormView.ItemInserted> eventos.|  
|Novo|"Novo"|Usado em operações de inserção para colocar o <xref:System.Web.UI.WebControls.FormView> controle no modo de inserção. O conteúdo especificado no <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade é exibida para a linha de dados.|  
|Página|"Página"|Usada em operações de paginação para representar um botão na linha de pager que realiza a paginação. Para especificar a operação de paginação, defina a `CommandArgument` propriedade do botão "Avançar", "Anterior", "First", "Último" ou o índice da página para o qual navegar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> eventos. **Observação:** esse tipo de botão normalmente é usado apenas no modelo de pager.|  
|Atualização|"Atualização"|Usado em operações de atualização para tentar atualizar o registro exibido na fonte de dados com os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating> e <xref:System.Web.UI.WebControls.FormView.ItemUpdated> eventos.|  
  
 Ao contrário do botão Excluir (o que exclui o registro exibido imediatamente), quando o botão de edição ou novo é clicado, o <xref:System.Web.UI.WebControls.FormView> controle entra em Editar ou modo de inserção, respectivamente. No modo de edição, o conteúdo dentro do <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade é exibida para o item de dados atual. Normalmente, o modelo de item de edição é definido, de modo que o botão de edição é substituído por uma atualização e um botão de cancelamento. Controles que são apropriados para o tipo de dados do campo de entrada (como um <xref:System.Web.UI.WebControls.TextBox> ou um <xref:System.Web.UI.WebControls.CheckBox> controle) também geralmente são exibidos com um valor de campo para o usuário modificar. Clique no botão de atualização atualiza o registro na fonte de dados, ao clicar no botão Cancelar abandona quaisquer alterações.  
  
 Da mesma forma, o conteúdo de <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade é exibida para o item de dados quando o controle está no modo de inserção. O modelo de item de inserção geralmente é definido para que o novo botão é substituído por uma inserção e um botão de cancelamento e controles de entrada vazios são exibidos para o usuário insira os valores para o novo registro. Clicar no botão de inserção insere o registro na fonte de dados, ao clicar no botão Cancelar abandona quaisquer alterações.  
  
 O <xref:System.Web.UI.WebControls.FormView> controle fornece um recurso de paginação, o que permite ao usuário navegar para outros registros na fonte de dados. Quando habilitada, uma linha de pager é exibida no <xref:System.Web.UI.WebControls.FormView> controle que contém os controles de navegação de página. Para habilitar a paginação, defina a <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriedade `true`. Você pode personalizar a linha de pager, definindo as propriedades dos objetos contidos no <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> e <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriedade. Em vez de usar a linha de pager internos da interface do usuário, você pode criar sua própria interface do usuário usando o <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> propriedade.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizando a interface do usuário  
 Você pode personalizar a aparência do <xref:System.Web.UI.WebControls.FormView> controle definindo as propriedades de estilo para as diferentes partes do controle. A tabela a seguir lista as propriedades de estilo diferente.  
  
|Propriedade de estilo|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|As configurações de estilo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|As configurações de estilo para a linha de dados vazios exibido no <xref:System.Web.UI.WebControls.FormView> quando a fonte de dados não contém todos os registros de controle.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|As configurações de estilo para a linha de rodapé do <xref:System.Web.UI.WebControls.FormView> controle.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|As configurações de estilo para a linha de cabeçalho a <xref:System.Web.UI.WebControls.FormView> controle.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|As configurações de estilo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|As configurações de estilo para a linha de pager exibido no <xref:System.Web.UI.WebControls.FormView> controlar quando o recurso de paginação está habilitado.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|As configurações de estilo para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura.|  
  
<a name="events"></a>   
## <a name="events"></a>Eventos  
 O <xref:System.Web.UI.WebControls.FormView> controle fornece vários eventos que você pode programar. Isso permite que você execute uma rotina personalizada sempre que um evento ocorre. A tabela a seguir lista os eventos com suporte a <xref:System.Web.UI.WebControls.FormView> controle.  
  
|Evento|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Ocorre quando um botão é clicado dentro de um controle <xref:System.Web.UI.WebControls.FormView>. Esse evento geralmente é usado para executar uma tarefa quando um botão é clicado no controle.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Ocorre depois que todos os <xref:System.Web.UI.WebControls.FormViewRow> objetos são criados no <xref:System.Web.UI.WebControls.FormView> controle. Esse evento geralmente é usado para modificar os valores de um registro antes de ser exibido.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Ocorre quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como "Excluir") é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle excluir o registro da fonte de dados. Esse evento geralmente é usado para verificar os resultados da operação de exclusão.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Ocorre quando um botão de exclusão é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle excluir o registro da fonte de dados. Esse evento geralmente é usado para cancelar a operação de exclusão.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Ocorre quando um botão de inserção (um botão com sua `CommandName` propriedade definida como "Insert") é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle inserir o registro. Esse evento geralmente é usado para verificar os resultados da operação de inserção.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Ocorre quando um botão de inserção é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle inserir o registro. Esse evento geralmente é usado para cancelar a operação de inserção.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Ocorre quando um botão de atualização (um botão com sua `CommandName` propriedade definida como "Update") é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle atualiza a linha. Esse evento geralmente é usado para verificar os resultados da operação de atualização.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Ocorre quando um botão de atualização é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle atualiza o registro. Esse evento geralmente é usado para cancelar a operação de atualização.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Ocorre após o <xref:System.Web.UI.WebControls.FormView> controle alterar modos (para edição, inserção ou modo somente leitura). Esse evento geralmente é usado para executar uma tarefa quando o <xref:System.Web.UI.WebControls.FormView> modos de alterações do controle.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Ocorre antes do <xref:System.Web.UI.WebControls.FormView> controle alterar modos (para edição, inserção ou modo somente leitura). Esse evento geralmente é usado para cancelar uma alteração de modo.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Ocorre quando um dos botões de paginação é acionado, mas após o controle <xref:System.Web.UI.WebControls.FormView> manipular a operação de paginação. Esse evento é geralmente usado quando você precisa executar uma tarefa depois que o usuário navega para um registro diferente no controle.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Ocorre quando um dos botões de paginação é acionado, mas antes de o controle <xref:System.Web.UI.WebControls.FormView> manipular a operação de paginação. Esse evento geralmente é usado para cancelar a operação de paginação.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Acessibilidade  
 Para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controles ASP.NET e acessibilidade](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Aplicando estilos CSS  
 O <xref:System.Web.UI.WebControls.FormView> controle permite que você especifique regras de estilo CSS na marcação. Se você usar modelos para personalizar a aparência do <xref:System.Web.UI.WebControls.FormView> controle, você pode especificar a marcação nos modelos de estilos CSS. Nesse caso, nenhuma tabela externa adicional é necessária. Você pode impedir que a tabela está sendo processado, definindo o <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> propriedade `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar um <xref:System.Web.UI.WebControls.FormView> controle para exibir os valores de um <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 O exemplo a seguir demonstra como usar um <xref:System.Web.UI.WebControls.FormView> controle de edição de registros existentes.  
  
> [!IMPORTANT]
>  O controle neste exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 O exemplo a seguir demonstra como usar um <xref:System.Web.UI.WebControls.FormView> controle para inserir novos registros.  
  
> [!IMPORTANT]
>  O controle neste exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.FormView> classe. Adicionar dinamicamente um <xref:System.Web.UI.WebControls.FormView> controlar para uma página, crie um novo <xref:System.Web.UI.WebControls.FormView> do objeto, defina suas propriedades e, em seguida, adicioná-lo para o <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> coleção de um contêiner de controle, como <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como adicionar dinamicamente um <xref:System.Web.UI.WebControls.FormView> controle a uma página.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o recurso de paginação está habilitado.</summary>
        <value>
          <see langword="true" />Para habilitar o recurso de paginação; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controle tem recursos internos de paginação, o que permite que um usuário navegar para um registro diferente na fonte de dados. O recurso de paginação pode ser usado com qualquer objeto de fonte de dados que oferece suporte a <xref:System.Collections.ICollection?displayProperty=nameWithType> interface ou uma fonte de dados que oferece suporte à capacidade de paginação.  
  
 Para habilitar o recurso de paginação, defina a <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriedade `true`. Você pode determinar o número total de itens na fonte de dados subjacente usando a <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriedade. Para determinar o índice do item exibido no momento, use o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade.  
  
 Quando a paginação estiver habilitada, uma linha adicional chamada de linha de pager é exibida automaticamente no <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager contém os controles de navegação de página e pode ser exibida na parte superior, inferior, ou tanto a parte superior e inferior do controle. A linha de pager tem pager internos quatro modos de exibição. A tabela a seguir descreve os quatro modos.  
  
|Modo|Descrição|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Um conjunto de controles de paginação consiste em botões anterior e próximo.|  
|`PagerButton.NextPreviousFirstLast`|Um conjunto de controles de paginação consiste em anteriores, em seguida, botões primeiro e último.|  
|`PagerButton.Numeric`|Um conjunto de controles de paginação que consiste em botões de link numerados para acessar páginas diretamente. Este é o modo padrão.|  
|`PagerButton.NumericFirstLast`|Um conjunto de controles de paginação consiste em botões numerados e primeiro e último link.|  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView> controle oculta automaticamente a linha de pager quando a fonte de dados contém menos de dois registros.  
  
 Você pode controlar as configurações da linha de pager (como o modo de exibição pager, o número de links da página para exibir em uma hora e o rótulo de texto do controle de pager) usando o <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriedade. Para controlar a aparência da linha pager (incluindo sua cor de plano de fundo e a cor da fonte), use o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriedade. O <xref:System.Web.UI.WebControls.FormView> controle também permite que você defina um modelo personalizado para a linha de pager. Para obter mais informações sobre como criar um modelo de linha de paginação personalizada, consulte <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 O <xref:System.Web.UI.WebControls.FormView> controle fornece vários eventos que você pode usar para executar uma ação personalizada quando ocorre paginação. A tabela a seguir lista os eventos disponíveis.  
  
|Evento|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Ocorre quando um dos botões de paginação é acionado, mas após o controle <xref:System.Web.UI.WebControls.FormView> manipular a operação de paginação. Esse evento é geralmente usado quando você precisa executar uma tarefa depois que o usuário navega para um registro diferente no controle.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Ocorre quando um dos botões de paginação é acionado, mas antes de o controle <xref:System.Web.UI.WebControls.FormView> manipular a operação de paginação. Esse evento geralmente é usado para cancelar a operação de paginação.|  
  
> [!NOTE]
>  Esses eventos não são gerados quando você altera o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade programaticamente.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriedade para habilitar o recurso de paginação em um <xref:System.Web.UI.WebControls.FormView> controle.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem a ser exibida na tela de fundo de um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>A URL para uma imagem para exibir no plano de fundo do <see cref="T:System.Web.UI.WebControls.FormView" /> controle. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> propriedade para especificar a URL para uma imagem para exibir no plano de fundo de um <xref:System.Web.UI.WebControls.FormView> controle.  
  
> [!NOTE]
>  Se a imagem especificada é menor do que o <xref:System.Web.UI.WebControls.FormView> controle, a imagem é colocada lado a lado para preencher o plano de fundo. Se a imagem for maior do que o controle, a imagem é recortada.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> propriedade para exibir uma imagem personalizada no plano de fundo de um <xref:System.Web.UI.WebControls.FormView> controle.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto que representa a linha de pager exibida na parte inferior do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto que representa a linha de pager inferior de um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando a paginação está habilitada (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`), uma linha adicional chamada de linha de pager será exibida automaticamente o <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager contém controles que permitem ao usuário navegar para outros registros e podem ser exibidos na parte superior, inferior, ou tanto a parte superior e inferior do controle. Use o <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriedade para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha de pager inferior no <xref:System.Web.UI.WebControls.FormView> controle.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView> controle cria a linha de pager inferior no <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Essa propriedade normalmente é usada quando você precisa manipular programaticamente linha inferior pager, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação de <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriedade deve ser executada após o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha de pager inferior foi criado; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle substitui quaisquer alterações.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriedade para acessar a linha de pager exibida na parte inferior de um <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager, em seguida, é atualizada com conteúdo adicional.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto a ser renderizado em um elemento de legenda HTML em um controle <see cref="T:System.Web.UI.WebControls.FormView" />. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia adaptativa.</summary>
        <value>Uma cadeia de caracteres que representa o texto a ser renderizado em um elemento de legenda HTML em um controle <see cref="T:System.Web.UI.WebControls.FormView" />. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriedade para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.FormView> controle. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da tabela que pode ser usada para tornar o controle mais acessíveis.  
  
 Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.FormView> o controle é fornecido pelo <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriedade para especificar o alinhamento do elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.FormView> controle.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriedade para especificar o texto para o elemento caption HTML renderizado em um <xref:System.Web.UI.WebControls.FormView> controle.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a posição horizontal ou vertical de um elemento de legenda HTML em um controle <see cref="T:System.Web.UI.WebControls.FormView" />. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia adaptativa.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />. O padrão é <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriedade para especificar a posição horizontal ou vertical de um elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.FormView> controle. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia adaptativa.  
  
 Essa propriedade é definida usando um do <xref:System.Web.UI.WebControls.TableCaptionAlign> valores de enumeração. A tabela a seguir lista os valores possíveis.  
  
|Valor|Descrição|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|O elemento de legenda é alinhado com a parte inferior da tabela.|  
|`TableCaptionAlign.Left`|O elemento caption é alinhado à esquerda da tabela.|  
|`TableCaptionAlign.NotSet`|Alinhamento do elemento de legenda não está definido.|  
|`TableCaptionAlign.Right`|O elemento caption é alinhado à direita da tabela.|  
|`TableCaptionAlign.Top`|O elemento de legenda é alinhado com a parte superior da tabela.|  
  
> [!NOTE]
>  Quando essa propriedade é definida como `TableCaptionAlign.NotSet`, o valor padrão do navegador é usado.  
  
 Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.FormView> o controle é fornecido pelo <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriedade para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.FormView> controle.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriedade para especificar que o HTML legenda elemento em um <xref:System.Web.UI.WebControls.FormView> controle deve ser renderizado no lado esquerdo do controle.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado não é um dos valores de enumeração de <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de espaço entre o conteúdo e a borda de uma célula.</summary>
        <value>A quantidade de espaço, em pixels, entre o conteúdo e a borda de uma célula. O valor padrão é -1, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriedade para controlar o espaçamento entre o conteúdo de uma célula e a borda da célula. A quantidade de preenchimento especificada é adicionada a todos os quatro lados da célula.  
  
 Todas as células na mesma coluna de uma <xref:System.Web.UI.WebControls.FormView> controle têm a mesma largura. A quantidade de preenchimento é aplicada à célula mais ampla e todas as outras células na coluna serão ajustadas para que a largura da célula. Da mesma forma, todas as células na mesma linha têm a mesma altura. A quantidade de preenchimento é aplicada para a célula mais alta da linha e todas as outras células na linha são ajustadas para que a altura da célula. Tamanhos de célula individual não podem ser especificados.  
  
 Para ajustar o espaçamento entre as células, use o <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriedade.  
  
> [!NOTE]
>  Quando essa propriedade não é definida, o valor padrão do navegador é usado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriedade para especificar a quantidade de espaçamento entre o conteúdo de uma célula e a borda da célula.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de espaço entre células.</summary>
        <value>A quantidade de espaço, em pixels, entre células. O valor padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriedade para controlar o espaçamento entre as células adjacentes no <xref:System.Web.UI.WebControls.FormView> controle. É aplicado a este espaçamento vertical e horizontalmente. O espaçamento da célula é uniforme para todo o controle. Espaçamento da célula individuais entre linhas ou colunas não pode ser especificado.  
  
> [!NOTE]
>  Se você definir essa propriedade como um valor maior que 0 e, em seguida, defina o <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriedade para um valor que exibe as bordas da célula, um espaço é exibido entre as bordas das células adjacentes. Nessa situação, o <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriedade controla o tamanho do espaço.  
  
 Para ajustar o espaçamento entre a borda da célula e o conteúdo de uma célula, use o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriedade para especificar a quantidade de espaçamento entre as células adjacentes.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</param>
        <summary>Muda o controle <see cref="T:System.Web.UI.WebControls.FormView" /> para o modo de entrada de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> método alternar programaticamente o <xref:System.Web.UI.WebControls.FormView> controle entre os modos de somente leitura, inserir e editar. Esse método também atualiza o <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade com o modo especificado. A tabela a seguir lista os valores de modo diferente.  
  
|Modo|Descrição|  
|----------|-----------------|  
|`FormViewMode.Edit`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição, o que permite ao usuário atualizar os valores de um registro.|  
|`FormViewMode.Insert`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados.|  
|`FormView.ReadOnly`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, que é o modo de exibição normal.|  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventos não são disparados quando este método é chamado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> método para retornar o <xref:System.Web.UI.WebControls.FormView> controle para o modo somente leitura sempre que o usuário navega para outro registro.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Um <see cref="T:System.Collections.IEnumerable" /> que representa a fonte de dados usada para criar a hierarquia de controle.</param>
        <param name="dataBinding">
          <see langword="true" />para indicar que a hierarquia de controle é criada diretamente da fonte de dados; <see langword="false" /> para indicar o controle de hierarquia é criada a partir do estado de exibição.</param>
        <summary>Cria a hierarquia de controle usada para renderizar o <see cref="T:System.Web.UI.WebControls.FormView" /> controle com a fonte de dados especificado.</summary>
        <returns>O número de itens criados da fonte de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar a hierarquia de controle para o <xref:System.Web.UI.WebControls.FormView> controle. Quando o `dataBinding` parâmetro é `true`, associação de dados é executada antes que a hierarquia de controle é criada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O <see cref="T:System.Web.UI.DataSourceView" /> do <see cref="T:System.Web.UI.IDataSource" /> ao qual o <see cref="T:System.Web.UI.WebControls.FormView" /> controle está associado é <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para criar sua própria hierarquia de controle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um objeto de estilo de tabela padrão para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.Style" /> que contém o estilo de tabela padrão para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar o objeto de estilo de tabela padrão. Além de definir o estilo padrão de um <xref:System.Web.UI.WebControls.TableStyle> do objeto, esse método também define o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriedade como 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para criar seu próprio estilo de padrão.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria o <see cref="T:System.Web.UI.DataSourceSelectArguments" /> objeto que contém os argumentos que são passados para a fonte de dados para processamento.</summary>
        <returns>Um <see cref="T:System.Web.UI.DataSourceSelectArguments" /> que contém os argumentos que são passados para a fonte de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar o <xref:System.Web.UI.DataSourceSelectArguments> objeto que contém os argumentos passados para a fonte de dados. Nessa implementação, o <xref:System.Web.UI.DataSourceSelectArguments> objeto contém os argumentos para operações de paginação.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para especificar seus próprios valores que são passados para a fonte de dados.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">O índice de base zero do item de dados para exibir.</param>
        <param name="rowType">Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.DataControlRowType" />.</param>
        <param name="rowState">Uma combinação bit a bit dos valores de enumeração <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Cria um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> usando o índice do item especificado, o tipo de linha e o estado de linha do objeto.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> com o índice do item especificado, o tipo de linha e o estado de linha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar um <xref:System.Web.UI.WebControls.FormViewRow> objeto usado para representar uma linha dentro do controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para retornar um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto com configurações personalizadas.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria a tabela contém para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.Table" /> que representa a tabela contém para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar uma tabela que atua como contêiner para o controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o modo de entrada de dados atual do controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade para determinar se o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, inserção ou edição. A tabela a seguir lista os valores de modo diferente.  
  
|Modo|Descrição|  
|----------|-----------------|  
|`FormViewMode.Edit`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição, o que permite ao usuário atualizar os valores de um registro.|  
|`FormViewMode.Insert`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados.|  
|`FormView.ReadOnly`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, que é o modo de exibição normal.|  
  
 Esse valor normalmente é definido automaticamente pelo <xref:System.Web.UI.WebControls.FormView> controlar quando o botão de comando de novo, Update, Insert, Delete ou Cancelar é clicado. Quando o <xref:System.Web.UI.WebControls.FormView> controle alterar modos em resposta a uma ação, os eventos na tabela a seguir são gerados. Isso permite que você crie um manipulador de eventos personalizados que executa a rotina apropriada quando o evento ocorre.  
  
|Evento|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Ocorre quando o <xref:System.Web.UI.WebControls.FormView> controle altera os modos, mas após a alteração do modo. Esse evento geralmente é usado para executar uma tarefa sempre que o <xref:System.Web.UI.WebControls.FormView> modos de alterações do controle.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Ocorre quando o <xref:System.Web.UI.WebControls.FormView> controle altera os modos, mas antes das alterações de modo. Esse evento geralmente é usado para cancelar a alteração do modo.|  
  
 **Observação** esses eventos não são disparados quando você alterar o modo de forma programática usando o <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade para determinar se o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, inserção ou edição. Se o usuário tentar navegar para outro registro, o <xref:System.Web.UI.WebControls.FormView> controle está na edição mais, a operação de paginação é cancelada.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa a fonte de dados ao controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DataBind> método para associar os dados de uma fonte de dados para o <xref:System.Web.UI.WebControls.FormView> controle. Este método resolve todas as expressões de associação de dados no modelo ativo do controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o item de dados associado ao controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Um <see cref="T:System.Object" /> que representa o item de dados associado ao controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DataItem%2A> propriedade para acessar o item de dados associado para o <xref:System.Web.UI.WebControls.FormView> controle. O item de dados geralmente é usado para acessar os valores de campo do registro atual diretamente. O tipo do <xref:System.Object> retornados por essa propriedade varia dependendo da fonte de dados. Por exemplo, quando um <xref:System.Web.UI.WebControls.SqlDataSource> controle está vinculado a <xref:System.Web.UI.WebControls.FormView> controle, um <xref:System.Data.DataRowView> objeto é retornado.  
  
> [!NOTE]
>  Essa propriedade está disponível apenas após a associação de dados. Antes de dados de associação ocorre, essa propriedade retornará `null`. Essa propriedade também não é aplicável quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção e retorna `null`.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.DataItem%2A> propriedade para determinar o valor de um campo no item de dados.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de itens de dados na fonte de dados.</summary>
        <value>O número de itens de dados na fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> para determinar o número de itens de dados contidos na fonte de dados. Esta propriedade contém o mesmo valor que o <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice do item de dados associado para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle da fonte de dados.</summary>
        <value>O índice do item de dados associado para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle da fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> propriedade para determinar o índice do item de dados associado ao <xref:System.Web.UI.WebControls.FormView> controle da fonte de dados. Esta propriedade contém o mesmo valor que o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade.  
  
> [!NOTE]
>  Essa propriedade não é aplicável quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção. Quando o controle está no modo de inserção, o <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> propriedade retornará -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.DataKey" /> que representa a chave primária do registro exibido.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.DataKey" /> que representa a chave primária do registro exibido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade for definida, o <xref:System.Web.UI.WebControls.FormView> controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey> objeto que contém os pares chave/valor do campo ou campos listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para o registro atual. Use o <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriedade para obter isso <xref:System.Web.UI.WebControls.DataKey> objeto. Essa propriedade normalmente é usada para obter as chaves e seus valores correspondentes para os campos especificados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade.  
  
> [!NOTE]
>  Como um atalho, você também pode usar o <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> propriedade para determinar o valor do primeiro campo de chave listado no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.DataKey%2A> para determinar o valor do campo de chave.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz que contém os nomes dos campos de chave da fonte de dados.</summary>
        <value>Uma matriz que contém os nomes dos campos de chave da fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para especificar uma lista separada por vírgulas de nomes de campos que representam a chave primária da fonte de dados. Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade for definida, o <xref:System.Web.UI.WebControls.FormView> controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey> objeto que contém os pares chave/valor do campo ou campos listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para o registro atual. O <xref:System.Web.UI.WebControls.DataKey> objeto é armazenado no <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriedade.  
  
> [!NOTE]
>  Você deve definir o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para a atualização interna, excluir e inserir recursos da <xref:System.Web.UI.WebControls.FormView> controle funcione.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para especificar o campo de chave para a fonte de dados associada para o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de entrada de dados ao qual o controle <see cref="T:System.Web.UI.WebControls.FormView" /> retorna após uma operação de atualização, inserção ou cancelamento.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.FormViewMode" />. O padrão é <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade para especificar se o <xref:System.Web.UI.WebControls.FormView> controle retorna para o modo somente leitura, inserção ou edição após uma atualização, inserção ou operação de cancelamento é executada. Por padrão, o <xref:System.Web.UI.WebControls.FormView> o controle retorna para o modo somente leitura; no entanto, você pode manter o <xref:System.Web.UI.WebControls.FormView> controlar em edição ou modo de inserção definindo essa propriedade para o valor apropriado. A tabela a seguir lista os valores de modo diferente.  
  
|Modo|Descrição|  
|----------|-----------------|  
|`FormViewMode.Edit`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição, o que permite ao usuário atualizar os valores de um registro.|  
|`FormViewMode.Insert`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados.|  
|`FormViewMode.ReadOnly`|O <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, que é o modo de exibição normal.|  
  
 Essa propriedade é geralmente usado quando o <xref:System.Web.UI.WebControls.FormView> controle tem um único objetivo, como somente para inserir ou editar os registros.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade para manter um <xref:System.Web.UI.WebControls.FormView> controle no modo de edição após uma operação de atualização.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado não é um dos valores de enumeração de <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exclui o registro atual no <see cref="T:System.Web.UI.WebControls.FormView" /> controle da fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> método para excluir programaticamente o registro atual no <xref:System.Web.UI.WebControls.FormView> controle da fonte de dados. Esse método é geralmente usado quando você precisa excluir o registro atual fora do <xref:System.Web.UI.WebControls.FormView> controlar, tais como um controle diferente na página. Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> e <xref:System.Web.UI.WebControls.FormView.ItemDeleting> eventos.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> método para excluir programaticamente o registro atual em um <xref:System.Web.UI.WebControls.FormView> controle da fonte de dados.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método na página que é chamada quando o controle executa uma operação de exclusão.</summary>
        <value>O nome do método na página que é chamado quando o controle executa uma operação de exclusão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo personalizado para um item no modo de edição.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para a linha de dados quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> está no modo de edição. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade). A tabela a seguir mostra o modelo é usado para cada modo.  
  
|Modo|Modelo processado|  
|----------|-----------------------|  
|Editar|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Inserir|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Somente leitura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Use o <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição. O modelo de item de edição geralmente contém os controles de entrada do usuário atualizar os valores de um registro existente, bem como os botões de comando para atualizar o registro e cancelar a operação de atualização.  
  
 Para especificar o modelo personalizado, o primeiro lugar `<EditItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<EditItemTemplate>` marcas. Usando uma expressão de associação bidirecional, você pode associar um campo com um controle de entrada. Isso permite que o <xref:System.Web.UI.WebControls.FormView> controle para exibir automaticamente o valor do campo original no controle de entrada associado no modo de edição. Quando um registro é atualizado, o <xref:System.Web.UI.WebControls.FormView> controle automaticamente extrai o valor do campo atualizado do controle de entrada associado. Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742). Para criar botões de comando que executam o cancelamento interno e operações de atualização, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.  
  
|Tipo de botão de comando|Valor CommandName|  
|-------------------------|-----------------------|  
|Cancelar|"Cancelar"|  
|Atualização|"Atualização"|  
  
 Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como definir um modelo personalizado para uma linha de dados no modo de edição.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência dos dados de linha quando um <see cref="T:System.Web.UI.WebControls.FormView" /> controle está no modo de edição.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo dos dados de linha quando um <see cref="T:System.Web.UI.WebControls.FormView" /> controle está no modo de edição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriedade para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição. Quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `EditRowStyle-ForeColor`).  
  
-   Aninhar um `<EditRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `EditRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriedade para especificar um estilo personalizado para dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de dados vazio exibida quando a fonte de dados associado a um <see cref="T:System.Web.UI.WebControls.FormView" /> controle não contém quaisquer registros.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que permite que você definir a aparência da linha de dados vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriedade para controlar a aparência da linha de dados vazio em um <xref:System.Web.UI.WebControls.FormView> controle. A linha de dados vazio é exibida quando a fonte de dados que está associada ao controle não contém quaisquer registros. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `EmptyDataRowStyle-ForeColor`).  
  
-   Aninhar um `<EmptyDataRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `EmptyDataRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriedade para especificar um estilo personalizado para a linha de dados vazios exibida quando um <xref:System.Web.UI.WebControls.FormView> controle está associado a uma fonte de dados que não contém quaisquer registros.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo definido pelo usuário para a linha de dados vazia renderizada quando um controle <see cref="T:System.Web.UI.WebControls.FormView" /> é associado a uma fonte de dados que não contém registros.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado da linha de dados vazia. O valor padrão é <see langword="null" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de dados vazio é exibida em uma <xref:System.Web.UI.WebControls.FormView> quando a fonte de dados que está associada ao controle não contém todos os registros de controle. Você pode definir sua própria interface de usuário personalizada (UI) para a linha de dados vazio usando o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade. Para especificar um modelo personalizado para a linha de dados vazio, primeiro coloque `<EmptyDataTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<EmptyDataTemplate>` marcas. Para controlar o estilo da linha de dados vazio, use o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriedade. Como alternativa, você pode usar a interface do usuário interna para a linha de dados vazio, definindo o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> e <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade terá precedência.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como definir um modelo personalizado para a linha de dados vazio exibido quando um <xref:System.Web.UI.WebControls.FormView> controle está associado a uma fonte de dados que não contém quaisquer registros.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto a ser exibido na linha de dados vazia renderizada quando um controle <see cref="T:System.Web.UI.WebControls.FormView" /> é associado a uma fonte de dados que não contém registros.</summary>
        <value>O texto a ser exibido na linha de dados vazia. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de dados vazio é exibida em uma <xref:System.Web.UI.WebControls.FormView> quando a fonte de dados que está associada ao controle não contém todos os registros de controle. Use o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriedade para especificar o texto a ser exibido na linha de dados vazio. Para controlar o estilo da linha de dados vazio, use o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriedade. Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de dados vazio, definindo o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> e <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade terá precedência.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriedade para especificar o texto a ser exibido na linha de dados vazio.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se um controle de validador vai manipular exceções que ocorrem durante as operações de inserção ou atualização.</summary>
        <value>
          <see langword="true" />Se um controle de validador manipulará as exceções que ocorrem durante a inserção ou atualização operações; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz a determinado que o <see cref="T:System.Web.UI.WebControls.FormView" /> controle está associado aos dados quando apropriado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.FormView> classe para certificar-se de que o <xref:System.Web.UI.WebControls.FormView> controle está associado aos dados quando apropriado. O <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> método geralmente é chamado durante a <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> método para associar o controle à fonte de dados quando o controle associado a dados ainda não está associado, mas requer a associação de dados. Esta versão do método foi substituído para impedir que a associação de dados ocorram quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Um <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> usado para armazenar os valores de campo do item de dados atual.</param>
        <param name="includeKeys">
          <see langword="true" />para incluir campos de chave; Caso contrário, <see langword="false" />.</param>
        <summary>Recupera os valores de cada campo declarado dentro da linha de dados e as armazena no especificado <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para recuperar os valores de cada campo declarado dentro da linha de dados. Como a linha de dados exibe um modelo diferente com base no modo atual, esse método recupera somente os valores de campo declarados no modelo que corresponde ao modo atual. A tabela a seguir mostra os modos disponíveis e os modelos correspondentes.  
  
|Modo|Modelo|  
|----------|--------------|  
|Inserir|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Editar|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Somente leitura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Você pode especificar se os valores extraídos incluem o campo de chave ou campos usando a `includeKeys` parâmetro.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para criar sua própria rotina para recuperar os valores de campo.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto que representa a linha de rodapé em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que representa a linha de rodapé em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de rodapé de página é exibida na parte inferior da <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriedade para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha de rodapé.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView> controle cria a linha de rodapé no <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de rodapé, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para o <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriedade deve ser executada após o <xref:System.Web.UI.WebControls.FormView> controle foi processado; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle substitui quaisquer alterações.  
  
 Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriedade programaticamente modificar as propriedades de linha de rodapé durante o <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de rodapé em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo da linha do rodapé em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de rodapé de página é exibida na parte inferior da <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriedade para controlar a aparência da linha de rodapé em um <xref:System.Web.UI.WebControls.FormView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `FooterStyle-ForeColor`).  
  
-   Aninhar um `<FooterStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `FooterStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriedade para especificar um estilo personalizado para a linha de rodapé.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo definido pelo usuário para a linha de rodapé em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para a linha de rodapé. O valor padrão é <see langword="null" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de rodapé de página é exibida na parte inferior da <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> está definida. Você pode definir sua própria interface de usuário personalizada (UI) para a linha de rodapé usando o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade. Para especificar um modelo personalizado para a linha de rodapé de página, primeiro coloque `<FooterTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<FooterTemplate>` marcas. Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriedade. Como alternativa, você pode simplesmente exibir texto na linha de rodapé, definindo o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> e <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade terá precedência.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade para definir um modelo personalizado para processar para a linha de rodapé.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto a ser exibido na linha de rodapé de um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>O texto a ser exibido na linha de rodapé. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de rodapé de página é exibida na parte inferior da <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriedade para especificar o texto a ser exibido na linha de rodapé. Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriedade. Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de rodapé, definindo o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> e <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade terá precedência.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriedade para especificar o texto a ser exibido na linha de rodapé.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo das linhas de grade para um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.GridLines" />. O padrão é <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriedade para especificar o estilo das linhas de grade para um <xref:System.Web.UI.WebControls.FormView> controle. A tabela a seguir lista os estilos disponíveis.  
  
|Estilo|Descrição|  
|-----------|-----------------|  
|`GridLines.None`|Nenhuma linha de grade é exibidas.|  
|`GridLines.Horizontal`|Exibe as linhas de grade horizontais apenas.|  
|`GridLines.Vertical`|Exibe as linhas de grade verticais somente.|  
|`GridLines.Both`|Exibe a grade horizontais e verticais.|  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriedade para exibir linhas de grade horizontais e verticais.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto que representa a linha de cabeçalho em uma <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que representa a linha de cabeçalho em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriedade para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha de cabeçalho.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriedade está disponível somente após o <xref:System.Web.UI.WebControls.FormView> controle cria a linha de cabeçalho no <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de cabeçalho, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para o <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriedade deve ser executada após o <xref:System.Web.UI.WebControls.FormView> controle foi processado; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle substitui quaisquer alterações.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriedade programaticamente modificar as propriedades da linha do cabeçalho durante o <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de cabeçalho em uma <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo da linha do cabeçalho em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriedade para controlar a aparência da linha de cabeçalho em uma <xref:System.Web.UI.WebControls.FormView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `HeaderStyle-ForeColor`).  
  
-   Aninhar um `<HeaderStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `HeaderStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriedade para especificar um estilo personalizado para a linha de cabeçalho.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo definido pelo usuário para a linha de cabeçalho em uma <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para a linha de cabeçalho. O valor padrão é <see langword="null" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> está definida. Você pode definir sua própria interface de usuário personalizada (UI) para a linha de cabeçalho usando o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade. Para especificar um modelo personalizado para a linha de cabeçalho, primeiro coloque `<HeaderTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<HeaderTemplate>` marcas. Para controlar o estilo da linha de cabeçalho, use o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriedade. Como alternativa, você pode simplesmente exibir texto na linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> e <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade terá precedência.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade para definir um modelo personalizado para processar para a linha de cabeçalho.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto a ser exibido na linha de cabeçalho de um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>O texto a ser exibido na linha de cabeçalho. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView> controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> está definida. Use o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriedade para especificar o texto a ser exibido na linha de cabeçalho. Para controlar o estilo da linha de cabeçalho, use o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriedade. Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade em vez desta propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> e <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade terá precedência.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriedade para especificar o texto a ser exibido na linha de cabeçalho.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento horizontal de um controle <see cref="T:System.Web.UI.WebControls.FormView" /> na página.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />. O padrão é <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> propriedade para especificar o alinhamento horizontal de um <xref:System.Web.UI.WebControls.FormView> controle dentro da página. A tabela a seguir lista os estilos diferentes de alinhamento horizontal.  
  
|Valor de HorizontalAlign|Descrição|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|O alinhamento horizontal do <xref:System.Web.UI.WebControls.FormView> controle não foi definido.|  
|`HorizontalAlign.Left`|O <xref:System.Web.UI.WebControls.FormView> controle está alinhado à esquerda na página.|  
|`HorizontalAlign.Center`|O <xref:System.Web.UI.WebControls.FormView> controle é centralizado na página.|  
|`HorizontalAlign.Right`|O <xref:System.Web.UI.WebControls.FormView> controle está alinhado à direita na página.|  
|`HorizontalAlign.Justify`|O <xref:System.Web.UI.WebControls.FormView> controle está alinhado com as margens esquerdas e direita da página.|  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> propriedade para especificar que um <xref:System.Web.UI.WebControls.FormView> controle deve ser centralizado na página.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">O <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que contém a linha de pager.</param>
        <param name="pagedDataSource">Um <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> que contém os dados para a página atual.</param>
        <summary>Cria a linha de pager para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar a linha de pager. Ele cria um <xref:System.Web.UI.WebControls.TableCell> objeto que contém os controles de navegação usando as propriedades do <xref:System.Web.UI.WebControls.PagedDataSource> objeto contido no `pagedDataSource` parâmetro. A célula é adicionada para a linha especificada pelo `row` parâmetro.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para criar sua própria linha de pager.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">O <see cref="T:System.Web.UI.WebControls.FormViewRow" /> a ser inicializado.</param>
        <summary>Inicializa especificado <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> Controle Inicializar especificado <xref:System.Web.UI.WebControls.FormViewRow> objeto. O <xref:System.Web.UI.WebControls.FormViewRow> o objeto foi inicializado com base no tipo de linha e no estado de linha especificado por seu <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> e <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> propriedades, respectivamente. O conteúdo apropriado é adicionado para o <xref:System.Web.UI.WebControls.FormViewRow> objeto. A tabela a seguir descreve como cada tipo de linha é inicializado.  
  
|Tipo de linha|Descrição|  
|--------------|-----------------|  
|Linha de dados|O conteúdo do <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, ou <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade são adicionados para o <xref:System.Web.UI.WebControls.FormViewRow> objeto, dependendo do valor da <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> propriedade.|  
|Linha de dados vazio|O valor da <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow> objeto, dependendo de qual propriedade está definida. Se ambas as propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriedade terá precedência.|  
|Linha de rodapé|O valor da <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow> objeto, dependendo de qual propriedade está definida. Se ambas as propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriedade terá precedência.|  
|Linha de cabeçalho|O valor da <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow> objeto, dependendo de qual propriedade está definida. Se ambas as propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriedade terá precedência.|  
  
> [!NOTE]
>  Esse método não inicializar a linha de pager. Para criar a linha de pager, use o <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para criar sua própria linha personalizado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> para executar a validação de página quando o método for chamado; caso contrário, <see langword="false" />.</param>
        <summary>Insere o registro atual na fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção, use o <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> método programaticamente inserir o registro atual na fonte de dados. Esse método é geralmente usado quando você precisa inserir o registro atual da fora do <xref:System.Web.UI.WebControls.FormView> controlar, tais como um controle diferente na página.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView> controle deve estar no modo de inserção quando esse método é chamado; caso contrário, um <xref:System.Web.HttpException> é gerada.  
  
 Para especificar se a validação de página será executada antes da operação de inserção, use o `causesValidation` parâmetro. Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted> e <xref:System.Web.UI.WebControls.FormView.ItemInserting> eventos.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> método programaticamente inserir o registro atual em um <xref:System.Web.UI.WebControls.FormView> controle na fonte de dados.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> não estiver no modo de inserção.  
  
 -ou-  
  
 O objeto <see cref="T:System.Web.UI.DataSourceView" /> associado ao controle <see cref="T:System.Web.UI.WebControls.FormView" /> é nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo personalizado para um item no modo de inserção.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para a linha de dados quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> está no modo de inserção. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade). A tabela a seguir mostra o modelo é usado para cada modo.  
  
|Modo|Modelo processado|  
|----------|-----------------------|  
|Editar|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Inserir|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Somente leitura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Use o <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção. O modelo de item de inserção geralmente contém os controles de entrada para o usuário digite os valores para o novo registro, bem como para inserir o registro e cancelar a operação de inserção de botões de comando.  
  
 Para especificar o modelo personalizado, o primeiro lugar `<InsertItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<InsertItemTemplate>` marcas. Usando uma expressão de associação bidirecional, você pode associar um campo com um controle de entrada. Quando um registro é inserido, o <xref:System.Web.UI.WebControls.FormView> controle automaticamente extrai o valor do campo de controle de entrada associado. Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742). Para criar botões de comando que executam o cancelamento interno e operações de inserção, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.  
  
|Tipo de botão de comando|Valor CommandName|  
|-------------------------|-----------------------|  
|Cancelar|"Cancelar"|  
|Inserir|"Inserir"|  
  
 Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como definir um modelo personalizado para uma linha de dados no modo de inserção.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método na página que é chamada quando o controle executa uma operação de inserção.</summary>
        <value>O nome do método na página que é chamado quando o controle executa uma operação de inserção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de dados em um <see cref="T:System.Web.UI.WebControls.FormView" /> controlar quando o controle está no modo de inserção.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo da linha de dados em um <see cref="T:System.Web.UI.WebControls.FormView" /> controlar quando o controle está no modo de inserção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriedade para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção. Quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto.  
  
 As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `InsertRowStyle-ForeColor`).  
  
-   Aninhar um `<InsertRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `InsertRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriedade para especificar um estilo personalizado para dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo de inserção.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Um <see cref="T:System.Type" /> que representa o tipo de dados para verificar.</param>
        <summary>Determina se o tipo de dados especificado pode ser associado a um campo no <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <returns>
          <see langword="true" />Se o tipo de dados especificado pode ser associado a um campo no <see cref="T:System.Web.UI.WebControls.FormView" /> controle; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para determinar se o tipo de dados especificado pode ser associado a um campo no controle. O <xref:System.Web.UI.WebControls.FormView> controle suporta os seguintes tipos de dados:  
  
-   Tipos de todos os dados primitivos, como <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>e assim por diante.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir este método para adicionar ou restringir os tipos de dados que podem ser usados em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um botão é clicado dentro de um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento é gerado quando um botão dentro de <xref:System.Web.UI.WebControls.FormView> controle é clicado. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
 Botões dentro de um <xref:System.Web.UI.WebControls.FormView> controle também pode invocar alguns dos recursos internos do controle. Para executar uma dessas operações, defina o `CommandName` propriedade de um botão para um dos valores na tabela a seguir.  
  
|Valor CommandName|Descrição|  
|-----------------------|-----------------|  
|"Cancelar"|Cancela uma operação de edição ou de inserção e retorna o <xref:System.Web.UI.WebControls.FormView> controle para o modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade. Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventos.|  
|"Delete"|Exclui o registro atual. Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> e <xref:System.Web.UI.WebControls.FormView.ItemDeleting> eventos.|  
|"Edit"|Coloca o <xref:System.Web.UI.WebControls.FormView> controle no modo de edição. Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventos.|  
|"Inserir"|Insere o registro atual na fonte de dados. Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted> e <xref:System.Web.UI.WebControls.FormView.ItemInserting> eventos.|  
|"Novo"|Coloca o <xref:System.Web.UI.WebControls.FormView> controle no modo de inserção. Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged> e <xref:System.Web.UI.WebControls.FormView.ModeChanging> eventos.|  
|"Página"|Executa uma operação de paginação. Definir o `CommandArgument` propriedade do botão para "Primeira", "último", "Próximo", "Anterior" ou um número de página para especificar o tipo de operação de paginação para executar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> eventos.|  
|"Atualização"|Atualiza o registro atual na fonte de dados. Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdated> e <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventos.|  
  
 Embora o <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento é gerado quando um botão listado na tabela anterior é clicado, é recomendável que você use os eventos listados na tabela para a operação.  
  
 Um <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o nome do comando e o argumento de comando do botão clicado. Para determinar o nome do comando e o argumento de comando, use o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> e <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriedades, respectivamente. Você também pode acessar o controle que disparou o evento usando o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemCommand> eventos para lidar com um clique do botão em um <xref:System.Web.UI.WebControls.FormView> controle. Quando o usuário clica no botão Adicionar, o item exibido no momento é adicionado a um <xref:System.Web.UI.WebControls.ListBox> controle.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre depois que todas as linhas forem criadas em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento é gerado depois que todas as linhas são criadas em um <xref:System.Web.UI.WebControls.FormView> controle. Isso pode ocorrer quando o controle é renderizado primeiro, ou quando o usuário navega para outro registro. Você pode usar esse evento para fornecer um método de manipulação de eventos que executa uma rotina personalizada, como adicionar à ou modificar o conteúdo de uma linha, sempre que esse evento ocorre.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento ocorre antes do <xref:System.Web.UI.WebControls.FormView> controle está associado aos dados. Para modificar o valor de um campo associado, use o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> evento.  
  
 Você pode acessar as linhas de cabeçalho, rodapé e pager no <xref:System.Web.UI.WebControls.FormView> controle usando o <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, ou <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriedades, respectivamente. Para acessar a linha de dados, use o <xref:System.Web.UI.WebControls.FormView.Row%2A> propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento para atualizar o texto de um <xref:System.Web.UI.WebControls.Label> controle contido na linha de pager.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando se clica em um botão Excluir em um controle <see cref="T:System.Web.UI.WebControls.FormView" />, mas após a operação de exclusão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como "Excluir") dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle exclui o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de exclusão, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido. Para determinar o número de registros afetados pela operação de exclusão, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriedade para determinar se todas as exceções ocorreram. Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriedade. Se você quiser acessar os pares de nome/valor dos campos de chave e campos de não-chave do registro excluído, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriedades, respectivamente.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento para determinar se ocorreu uma exceção durante uma operação de exclusão.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um botão de exclusão em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle é clicado, mas antes da operação de exclusão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento quando um botão de exclusão (um botão com seu `CommandName` propriedade definida como "Excluir") dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle exclui o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar um registro antes de excluí-lo, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o índice do registro que está sendo excluído e para indicar que a operação de exclusão deve ser cancelada. Para determinar o índice de um registro, use o <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> propriedade. Para cancelar a operação de exclusão, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`. Você também pode acessar os campos de não-chave e os campos de chave usando o <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> propriedades, respectivamente.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento para cancelar uma operação de exclusão.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre ao clicar em um botão Inserir dentro de um controle <see cref="T:System.Web.UI.WebControls.FormView" />, porém depois da operação de inserção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento quando um botão de inserção (um botão com sua `CommandName` propriedade definida como "Inserir") dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle inserir o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de inserção, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido. Para determinar o número de registros afetados pela operação de inserção, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriedade para determinar se todas as exceções ocorreram. Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriedade. Se você precisar acessar os valores do registro inserido, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> propriedade.  
  
 Por padrão, o <xref:System.Web.UI.WebControls.FormView> o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade após uma operação de inserção. Para manter o <xref:System.Web.UI.WebControls.FormView> de controle no modo de inserção, defina o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> propriedade `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento para determinar se ocorreu uma exceção durante uma operação de inserção.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre ao clicar em um botão Inserir em um controle <see cref="T:System.Web.UI.WebControls.FormView" />, porém antes da operação de inserção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento quando um botão de inserção (um botão com seu `CommandName` propriedade definida como "Inserir") dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle inserir o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como os valores de um registro antes de inseri-la na fonte de dados, sempre que esse evento ocorre de codificação HTML.  
  
 Um <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o valor de um argumento opcional comando enviado para o <xref:System.Web.UI.WebControls.FormView> controle e indicar que a operação de inserção deve ser cancelada. O valor do argumento de comando corresponde do `CommandArgument` propriedade do botão de inserção. Quando o `CommandArgument` propriedade do botão de inserção é definida, use o <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> propriedade para determinar o valor do argumento de comando. Para cancelar a operação de inserção, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`. Você também pode ler ou modificar os valores de campo para o novo registro usando o <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento para cancelar uma operação de inserção.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo personalizado para a linha de dados em um controle <see cref="T:System.Web.UI.WebControls.FormView" /> quando o controle está no modo somente leitura.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para a linha de dados quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> está no modo somente leitura. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade). A tabela a seguir mostra o modelo é usado para cada modo.  
  
|Modo|Modelo processado|  
|----------|-----------------------|  
|Editar|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Inserir|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Somente leitura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Use o <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> propriedade para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura. Normalmente, o modelo de item contém controles para exibir os valores de campo de um registro, bem como botões Editar, inserir e excluir um registro de comando.  
  
 Para especificar o modelo personalizado, o primeiro lugar `<ItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<ItemTemplate>` marcas. Para exibir os valores de campo da fonte de dados associada ao controle, use uma expressão de associação de dados. Para obter mais informações sobre expressões de associação de dados, consulte [sintaxe de expressão de associação de dados](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Para criar botões de comando que executam o interno excluir, editar e novas operações de registro, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.  
  
|Tipo de botão de comando|Valor CommandName|  
|-------------------------|-----------------------|  
|Excluir|"Delete"|  
|Editar|"Edit"|  
|Novo|"Novo"|  
  
 Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como definir um modelo personalizado para uma linha de dados no modo somente leitura.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um botão Atualizar dentro de um controle <see cref="T:System.Web.UI.WebControls.FormView" /> é clicado após a operação de atualização.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento quando um botão de atualização (um botão com sua `CommandName` propriedade definida como "Atualização") dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle atualiza o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de atualização, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido. Para determinar o número de registros afetados pela operação de atualização, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propriedade. Use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriedade para determinar se todas as exceções ocorreram. Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriedade. Se você precisar acessar os valores de campo de chave de registro atualizado, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriedade. Os valores de campo de não-chave originais e atualizados podem ser acessados usando o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> e <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriedades, respectivamente.  
  
 Por padrão, o <xref:System.Web.UI.WebControls.FormView> o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade após uma operação de atualização. Para manter o <xref:System.Web.UI.WebControls.FormView> de controle no modo de edição, defina a <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propriedade `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento para determinar se ocorreu uma exceção durante uma operação de atualização.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um botão Atualizar dentro de um controle <see cref="T:System.Web.UI.WebControls.FormView" /> é clicado, mas antes da operação de atualização.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento quando um botão de atualização (um botão com seu `CommandName` propriedade definida como "Update") dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle atualiza o registro. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como os valores de um registro antes de atualizá-lo na fonte de dados, sempre que esse evento ocorre de codificação HTML.  
  
 Um <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o valor de um argumento opcional comando enviado para o <xref:System.Web.UI.WebControls.FormView> controle e indicar que a operação de atualização deve ser cancelada. O valor do argumento de comando corresponde do `CommandArgument` propriedade do botão de atualização. Quando o `CommandArgument` é definir a propriedade do botão de atualização, use o <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> propriedade para determinar o valor do argumento de comando. Para cancelar a operação de atualização, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`. Você também pode ler ou modificar os novos valores inseridos pelo usuário usando o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> e <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriedades. O <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propriedade contém os campos de chave, enquanto o <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriedade contém os campos de não-chave. Se você precisar acessar os valores de campo de chave não original, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento para cancelar uma operação de atualização.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Object" /> que representa o estado de <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</param>
        <summary>Carrega o estado do <see cref="T:System.Web.UI.WebControls.FormView" /> propriedades de controle que precisam ser mantidos, mesmo quando o <see cref="P:System.Web.UI.Control.EnableViewState" /> está definida como <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> método é usado para carregar o estado do <xref:System.Web.UI.WebControls.FormView> propriedades de controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A> está definida como `false`.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Object" /> que representa o estado de <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</param>
        <summary>Carrega o estado de exibição salvo anteriormente do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> método é usado para carregar o estado de exibição salvo anteriormente do <xref:System.Web.UI.WebControls.FormView> controle.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> muda entre o modo de edição, inserção e somente leitura, mas após a alteração do modo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.ModeChanged> é gerado quando um <xref:System.Web.UI.WebControls.FormView> tentativas de controle alternar entre o modo somente leitura, inserir e editar, mas depois que o modo for alterado. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como a sincronização de <xref:System.Web.UI.WebControls.FormView> controle com outro controle, sempre que esse evento ocorre.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ModeChanged> evento para exibir o modo atual na linha de cabeçalho de um <xref:System.Web.UI.WebControls.FormView> controle.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> alterna entre o modo de edição, inserção e somente leitura, mas antes da alteração do modo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.ModeChanging> é gerado quando um <xref:System.Web.UI.WebControls.FormView> tentativas de controle alternar entre o modo somente leitura, inserir e editar, mas antes que o modo for alterado. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como configurar o <xref:System.Web.UI.WebControls.FormView> de controle para um modo específico ou cancelar a alteração do modo, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.FormViewModeEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o modo no qual o <xref:System.Web.UI.WebControls.FormView> controle está alternando para determinar se o <xref:System.Web.UI.WebControls.FormView.ModeChanging> evento foi gerado como resultado do usuário cancelar uma operação de edição ou para indicar que uma operação de inserção deve ser cancelada. Para determinar o novo modo, use o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> propriedade. Você também pode usar o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> propriedade para alternar para um modo alternativo definindo-a como uma da <xref:System.Web.UI.WebControls.FormViewMode> valores de enumeração. Use o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> propriedade para determinar se o usuário cancelou uma operação de edição. Para cancelar uma operação de inserção, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.ModeChanging> linha de evento para ocultar o pager quando o <xref:System.Web.UI.WebControls.FormView> controlar transições para o modo de edição.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se as regras de estilo CSS específica da tabela que estão associados a <see cref="T:System.Web.UI.WebControls.FormView" /> controle são definidos para seus valores padrão.</summary>
        <returns>As regras de estilo CSS padrão que estão associadas a <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As regras de estilo CSS específica da tabela são definidas para seus valores padrão usando o <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> e <xref:System.Web.UI.WebControls.Style.Font%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Manipula um evento passado a hierarquia de controle.</summary>
        <returns>
          <see langword="true" />para indicar que o evento deve ser passado adicional da hierarquia de controle; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> método é usado pelo controle opcionalmente manipular eventos passados a hierarquia de controle, o <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> método. Determina se é manipular um evento examinando as propriedades do <xref:System.EventArgs> objeto contido no `e` parâmetro. Quando um evento precisa ser tratada, o método executa a ação apropriada. Outros eventos são ignorados e passados a hierarquia de controle. Este método indica se deve transmitir o evento até a hierarquia de controle por meio de seu valor de retorno.  
  
 O <xref:System.Web.UI.WebControls.FormView> controle substitui a implementação base desse método para executar a ação apropriada quando um dos botões reconhecidos pelo controle é clicado. A seguinte tabela lista os botões de comando que o <xref:System.Web.UI.WebControls.FormView> controle reconhece.  
  
|Botão|Valor CommandName|Descrição|  
|------------|-----------------------|-----------------|  
|Cancelar|"Cancelar"|Usado na atualização ou inserção de operações para cancelar a operação e descartar os valores inseridos pelo usuário. O <xref:System.Web.UI.WebControls.FormView> controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriedade.|  
|Excluir|"Delete"|Usada em operações de exclusão para excluir o registro exibido da fonte de dados. Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleting> e <xref:System.Web.UI.WebControls.FormView.ItemDeleted> eventos.|  
|Editar|"Edit"|Usado em operações de atualização colocar o <xref:System.Web.UI.WebControls.FormView> controle no modo de edição. O conteúdo especificado no <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade é exibida para a linha de dados.|  
|Inserir|"Inserir"|Usada em operações de inserção para a tentativa de inserir um novo registro na fonte de dados com os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserting> e <xref:System.Web.UI.WebControls.FormView.ItemInserted> eventos.|  
|Novo|"Novo"|Usado em operações de inserção para colocar o <xref:System.Web.UI.WebControls.FormView> controle no modo de inserção. O conteúdo especificado no <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriedade é exibida para a linha de dados.|  
|Página|"Página"|Usada em operações de paginação para representar um botão na linha de pager que realiza a paginação. Para especificar a operação de paginação, defina a `CommandArgument` propriedade do botão "Avançar", "Anterior", "First", "Último" ou o índice da página para o qual navegar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> eventos. **Observação:** esse tipo de botão normalmente é usado apenas no modelo de pager.|  
|Atualização|"Atualização"|Usado em operações de atualização para tentar atualizar o registro exibido na fonte de dados com os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating> e <xref:System.Web.UI.WebControls.FormView.ItemUpdated> eventos.|  
  
 Esta versão do método retorna `true` quando um desses botões é tratado. Para obter mais informações sobre a propagação de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.FormView" /> classe, você pode substituir esse método para lidar com seus próprios eventos. Certifique-se de usar o valor de retorno para indicar se o evento deve ser passado adicional da hierarquia de controle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnInit%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.Control.Init> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnInit%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemCommand> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemDeleted> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemDeleting> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o <see cref="T:System.Web.UI.WebControls.FormView" /> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de exclusão e um manipulador de eventos não está registrado para o evento.</exception>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemInserted> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemInserting> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o <see cref="T:System.Web.UI.WebControls.FormView" /> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de inserção e um manipulador de eventos não está registrado para o evento.</exception>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemUpdating> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o <see cref="T:System.Web.UI.WebControls.FormView" /> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de atualização e um manipulador de eventos não está registrado para o evento.</exception>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ModeChanged> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.ModeChanging> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o <see cref="T:System.Web.UI.WebControls.FormView" /> controle não está associado a um controle de fonte de dados, a alteração do modo não foi cancelada e um manipulador de eventos não está registrado para o evento.</exception>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> método é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para gerar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o <see cref="T:System.Web.UI.WebControls.FormView" /> controle não está associado a um controle de fonte de dados, a operação de paginação não foi cancelada e um manipulador de eventos não está registrado para o evento.</exception>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número total de páginas necessário para exibir todos os registros na fonte de dados.</summary>
        <value>O número de itens na fonte de dados subjacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`), use o <xref:System.Web.UI.WebControls.FormView.PageCount%2A> para determinar o número total de registros na fonte de dados subjacente.  
  
> [!NOTE]
>  Porque o <xref:System.Web.UI.WebControls.FormView> controle exibe apenas um registro de cada vez, esse valor corresponde ao número total de páginas necessário para exibir todos os registros na fonte de dados. Esse valor não é preciso até após a associação de dados.  
  
 Para determinar o índice do registro atual da fonte de dados subjacente, use o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PageCount%2A> para determinar o número total de registros exibidos no controle.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice da página exibida.</summary>
        <value>O índice baseado em zero do item de dados exibido em um controle <see cref="T:System.Web.UI.WebControls.FormView" /> da fonte de dados subjacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`), use o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade para determinar o índice do registro exibido no momento. Você também pode usar essa propriedade para alterar programaticamente o registro exibido.  
  
> [!NOTE]
>  Quando o recurso de paginação está habilitado, você também pode usar essa propriedade para determinar o número do registro exibido; No entanto, lembre-se de que esta propriedade é baseada em zero.  
  
 Para determinar o número total de itens na fonte de dados, use o <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> para determinar o índice de página do registro exibido.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor selecionado é menor que -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> é alterado depois de uma operação de paginação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento quando um botão de paginação (um botão com sua `CommandName` propriedade definida como "Página") dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView> controle manipula a operação de paginação. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
> [!NOTE]
>  Esse evento não é gerado quando você define o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade.  
  
 Botões de pager geralmente estão localizados na linha de pager de um <xref:System.Web.UI.WebControls.FormView> controle. Esse evento é geralmente usado para sincronizar um <xref:System.Web.UI.WebControls.FormView> controlar com um <xref:System.Web.UI.WebControls.GridView> controle ou para definir o comportamento do <xref:System.Web.UI.WebControls.FormView> controle após uma operação de paginação.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> evento para retornar o <xref:System.Web.UI.WebControls.FormView> para o modo somente leitura quando o usuário navega para outro registro.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> é alterado antes de uma operação de paginação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView> controlar gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento quando um botão de paginação (um botão com sua `CommandName` propriedade definida como "Página") dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView> controle manipula a operação de paginação. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como cancelar a operação de paginação, sempre que esse evento ocorre.  
  
> [!NOTE]
>  Esse evento não é gerado quando você define o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriedade.  
  
 Botões de pager geralmente estão localizados na linha de pager de um <xref:System.Web.UI.WebControls.FormView> controle.  
  
 Um <xref:System.Web.UI.WebControls.FormViewPageEventArgs> objeto é passado para o método de manipulação de eventos, que permite que você determine o índice da página selecionado pelo usuário e para indicar que a operação de paginação deve ser cancelada. Para determinar o índice da página selecionado pelo usuário, use o <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> propriedade. Para cancelar a operação de paginação, defina a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.FormViewPageEventArgs> do objeto para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> evento para cancelar uma operação de paginação.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.PagerSettings" /> objeto que permite que você defina as propriedades dos botões de pager em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.PagerSettings" /> que permite que você defina as propriedades dos botões de pager em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriedade para controlar as configurações da linha de pager em um <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager é exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`) e contém os controles que permitem ao usuário navegar para os registros diferentes no controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.PagerSettings> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.PagerSettings> objeto (por exemplo, `PagerSettings-Mode`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `PagerSettings.Mode`). Configurações comuns geralmente incluem um modo de exibição da linha de pager e texto personalizado ou imagens para os controles de navegação.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriedade para especificar as propriedades da linha de pager.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de pager em um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo da linha do pager em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriedade para controlar a aparência da linha de pager em um <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager é exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`) e contém os controles que permitem ao usuário navegar para as páginas diferentes no controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `PagerStyle-ForeColor`).  
  
-   Aninhar um `<PagerRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `PagerStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriedade para especificar as configurações de estilo para a linha de pager.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo personalizado para a linha do pager em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado da linha do pager. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma linha de pager é exibida em uma <xref:System.Web.UI.WebControls.FormView> controlar quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> estiver definida como true). A linha de pager contém os controles que permitem ao usuário navegar para as páginas diferentes no controle. Em vez de usar a interface do usuário interna pager linha (IU), você pode definir sua própria interface do usuário usando o <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> propriedade.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> é definir a propriedade substitui a linha de pager internos da interface do usuário.  
  
 Para especificar um modelo personalizado para a linha de pager, primeiro coloque `<PagerTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<PagerTemplate>` marcas. Para controlar a aparência da linha de pager, use o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriedade.  
  
 Normalmente, os controles de botão são adicionados ao modelo de pager para executar as operações de paginação. O <xref:System.Web.UI.WebControls.FormView> controle executa uma operação de paginação, quando um controle de botão com seu `CommandName` propriedade definida como "Página" é clicada. O botão `CommandArgument` propriedade determina o tipo de operação de paginação a ser executada. A tabela a seguir lista os valores de argumento de comando com suporte a <xref:System.Web.UI.WebControls.FormView> controle.  
  
|Valor CommandArgument|Descrição|  
|---------------------------|-----------------|  
|"Avançar"|Navega para a próxima página.|  
|"Anterior"|Navega para a página anterior.|  
|"Primeira"|Navega para a primeira página.|  
|"Último"|Navega para a última página.|  
|Valor inteiro|Navega para o número de página especificada.|  
  
   
  
## Examples  
 O exemplo a seguir demonstra como definir um modelo de paginação personalizada.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Um <see cref="T:System.Collections.IEnumerable" /> que representa a fonte de dados.</param>
        <summary>Associa a fonte de dados especificado para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para associar a fonte de dados especificado para o controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Porque o <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> método é lacrado, você deve substituir este método se você precisar realizar tarefas adicionais ao associar dados.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define a hierarquia de controle de <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para configurar a hierarquia de controle no <xref:System.Web.UI.WebControls.FormView> controlar antes do controle é processado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">O argumento do evento do qual criar um <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> para o evento ou eventos que são gerados.</param>
        <summary>Gera os eventos adequados para o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar quando ele envia de volta para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As chamadas de página a <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> método quando ocorre um evento de postback que gera os eventos adequados para uma <xref:System.Web.UI.WebControls.FormView> controle. Essa chamada ocorre no ciclo de vida da página após a conclusão de carregamento e alterações de notificação, mas antes da ocorrência de pré-processamento. Esse método foi implementado para criar um <xref:System.Web.UI.WebControls.CommandEventArgs> objeto para os eventos que são gerados.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém o fluxo de saída para renderizar no cliente.</param>
        <summary>Exibe o <see cref="T:System.Web.UI.WebControls.FormView" /> controle no cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.Render%2A> método é usado para renderizar o conteúdo do controle de servidor para o navegador do cliente usando especificado <xref:System.Web.UI.HtmlTextWriter> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle circunscreve HTML renderizado em um elemento <see langword="table" /> para aplicar estilos embutidos.</summary>
        <value>
          <see langword="true" /> se o controle circunscrever HTML renderizado em um elemento <see langword="table" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para tornar as propriedades de estilo embutido como <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> aplicar HTML que é renderizado para o controle, o ASP.NET inclui HTML renderizado em um `table` elemento. Se você não quiser externa `table` elemento a ser renderizado, defina essa propriedade como `false`. Nesse caso, se você tentar definir propriedades de estilo que se aplicam a todo o controle de embutido, uma exceção será lançada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que representa a linha de dados em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que representa a linha de dados em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.Row%2A> propriedade para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha de dados. A linha de dados contém conteúdo diferente com base no modelo processado para o modo atual (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriedade). Você só pode acessar o conteúdo do modelo para o modo atual. A tabela a seguir mostra o modelo é usado para cada modo.  
  
|Modo|Modelo processado|  
|----------|-----------------------|  
|Editar|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Inserir|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Somente leitura|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.Row%2A> propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView> controle cria as linhas de dados no <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de dados, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação de <xref:System.Web.UI.WebControls.FormView.Row%2A> propriedade deve ser executada após o <xref:System.Web.UI.WebControls.FormView> controle foi associado a dados; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle substitui quaisquer alterações.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.Row%2A> propriedade para acessar as propriedades da linha de dados durante o <xref:System.Web.UI.WebControls.FormView.ItemCreated> evento.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que permite definir a aparência da linha de dados em um <see cref="T:System.Web.UI.WebControls.FormView" /> controlar quando o controle está no modo somente leitura.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa o estilo da linha de dados em um <see cref="T:System.Web.UI.WebControls.FormView" /> controlar quando o controle está no modo somente leitura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriedade para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura (exibição). Quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> propriedade. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle> retorna do objeto. As propriedades podem ser definidas usando um dos seguintes métodos:  
  
-   Coloque um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView> controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle> objeto (por exemplo, `RowStyle-ForeColor`).  
  
-   Aninhar um `<RowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView> controle.  
  
 As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `RowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriedade para especificar um estilo personalizado para dados de linha quando um <xref:System.Web.UI.WebControls.FormView> controle está no modo somente leitura.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado do <see cref="T:System.Web.UI.WebControls.FormView" /> propriedades de controle que precisam ser mantidos, mesmo quando o <see cref="P:System.Web.UI.Control.EnableViewState" /> está definida como <see langword="false" />.</summary>
        <returns>Retorna o estado de exibição atual do controle de servidor. Se não houver um estado de exibição associado ao controle, esse método retornará <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para salvar o estado do <xref:System.Web.UI.WebControls.FormView> propriedades de controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> está definida como `false`.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado de exibição atual do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <returns>Um <see cref="T:System.Object" /> que contém o estado salvo do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para salvar o estado do controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor da chave de dados do registro atual em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>O valor da chave de dados do registro atual em um controle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade for definida, o <xref:System.Web.UI.WebControls.FormView> controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey> objeto que contém os pares chave/valor do campo ou campos listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriedade para o registro atual. O <xref:System.Web.UI.WebControls.DataKey> objeto representa o campo de chave primária ou campos para o registro atual e é armazenado no <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriedade. Em vez de usar o <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriedade para acessar o valor de chave de dados, você pode usar o <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> a propriedade como um atalho.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> listas de propriedades de vários campos, essa propriedade retorna o valor do primeiro campo listado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> para determinar o valor do campo de chave.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice a definir.</param>
        <summary>Define o índice da página exibida atualmente no <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Um objeto que representa o índice de exibição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Sempre retorna 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">O argumento para o evento.</param>
        <summary>Aciona eventos para o controle <see cref="T:System.Web.UI.WebControls.FormView" /> quando ele executa um postback para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As chamadas de página a <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> método quando ocorre um evento de postback. Essa chamada ocorre no ciclo de vida da página após a conclusão de carregamento e alterações de notificação, mas antes da página é renderizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz que contém os nomes dos campos de chave primária dos itens que são exibidos na <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Uma matriz que contém os nomes dos campos de chave primária dos itens que são exibidos na <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da lista de itens de dados que o <see cref="T:System.Web.UI.WebControls.FormView" /> controle associa a quando a fonte de dados contém mais de uma lista de itens de dados.</summary>
        <value>O nome da lista de dados de itens que o <see cref="T:System.Web.UI.WebControls.FormView" /> controle associa a.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto que contém a lista de dados que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</summary>
        <value>O objeto que contém a lista de dados que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a ID do controle de fonte de dados que contém a lista de dados de itens que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</summary>
        <value>A ID do controle de fonte de dados que contém a lista de dados de itens que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os dados do objeto de origem que contém a lista de dados de itens que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</summary>
        <value>O objeto de fonte de dados que contém a lista de dados de itens que o <see cref="T:System.Web.UI.WebControls.FormView" /> controlar recupera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto que representa o valor de chave de dados da linha de <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>O objeto que representa o valor de chave de dados da linha de <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o modo atual do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>O modo atual do <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.FormView> é convertida em uma interface de <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">O controle de botão postado a página de volta para o servidor.</param>
        <summary>Determina as opções de evento de postback para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <returns>O evento de postback opções para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> é um método auxiliar que é chamado pelo <xref:System.Web.UI.WebControls.FormView> controle para criar um <xref:System.Web.UI.PostBackOptions> objeto que contém as opções de evento de postback para o controle. O <xref:System.Web.UI.PostBackOptions> objeto normalmente é usado como um parâmetro para o <xref:System.Web.UI.Page.GetPostBackEventReference%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O objeto contido no <paramref name="buttonControl" /> parâmetro é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> de <paramref name="buttonControl" /> é <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valor para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Sempre retorna <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FormView.TagKey%2A> propriedade permite que o fluxo de saída gravar a marcação HTML apropriada para o <xref:System.Web.UI.WebControls.FormView> controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Você pode substituir essa propriedade para especificar qual <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valor a ser usado para o seu controle derivado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objeto que representa a linha de pager exibida na parte superior de um <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.FormViewRow" /> que representa a linha superior pager a <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando a paginação está habilitada (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> está definida como `true`), uma linha adicional chamada de linha de pager será exibida automaticamente o <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager contém controles que permitem ao usuário navegar para outros registros e podem ser exibidos na parte superior, inferior, ou tanto a parte superior e inferior do controle. Use o <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriedade para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow> objeto que representa a linha superior pager a <xref:System.Web.UI.WebControls.FormView> controle.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView> controle cria na linha superior de pager a <xref:System.Web.UI.WebControls.FormView.ItemCreated> eventos.  
  
 Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha superior de pager, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação de <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriedade deve ser executada após o <xref:System.Web.UI.WebControls.FormView> controle foi associada a dados; caso contrário, o <xref:System.Web.UI.WebControls.FormView> controle substitui quaisquer alterações.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriedade para acessar a linha de pager exibida na parte superior de um <xref:System.Web.UI.WebControls.FormView> controle. A linha de pager, em seguida, é atualizada com conteúdo adicional.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marca o ponto de partida no qual começar a controlar e salvar o estado de exibição altera para o <see cref="T:System.Web.UI.WebControls.FormView" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é substituído para marcar o ponto de partida no qual começar a rastreamento e salvar alterações para o controle como parte do estado de exibição do controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> para executar a validação de página quando o método for chamado; caso contrário, <see langword="false" />.</param>
        <summary>Atualiza o registro atual na fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.FormView> controle está no modo de edição, use o <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> método para atualizar programaticamente o registro atual na fonte de dados. Esse método é geralmente usado quando você precisa atualizar o registro atual da fora do <xref:System.Web.UI.WebControls.FormView> controlar, tais como um controle diferente na página.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.FormView> controle deve estar no modo de edição quando esse método é chamado; caso contrário, um <xref:System.Web.HttpException> é gerada.  
  
 Para especificar se a validação de página será executada antes da operação de atualização, use o `causesValidation` parâmetro. Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdated> e <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventos.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> método para atualizar programaticamente o registro atual em um <xref:System.Web.UI.WebControls.FormView> controle na fonte de dados.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Este método é chamado quando o controle <see cref="T:System.Web.UI.WebControls.FormView" /> não está no modo de edição.  
  
 -ou-  
  
 O objeto <see cref="T:System.Web.UI.DataSourceView" /> associado ao controle <see cref="T:System.Web.UI.WebControls.FormView" /> é nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método na página chamada quando o controle executa uma operação de atualização.</summary>
        <value>O nome do método na página chamada quando o controle executa uma operação de atualização.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
