<Type Name="Wizard" FullName="System.Web.UI.WebControls.Wizard">
  <TypeSignature Language="C#" Value="public class Wizard : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Wizard extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Wizard" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("FinishButtonClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Wizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:WizardStep title="Step 1" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;asp:WizardStep title="Step 2" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;/WizardSteps&gt; &lt;/{0}:Wizard&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece navegação e uma interface do usuário para coletar dados relacionados em várias etapas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Assistente de componentes](#components)  
  
-   [Etapas do Assistente](#wizard_steps)  
  
-   [Coleta de dados de Assistente](#collecting_wizard_data)  
  
-   [Nomes de comando do Assistente](#wizard_command_names)  
  
-   [Alterar dinamicamente as etapas](#dynamically_changing_steps)  
  
-   [Aparência de Assistente](#wizard_appearance)  
  
-   [Formatação usando modelos de Layout](#formatting_using_layout_templates)  
  
-   [Acessibilidade](#accessibility)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 Você pode usar o <xref:System.Web.UI.WebControls.Wizard> controlar para:  
  
-   Colete dados relacionados em várias etapas.  
  
-   Divida uma página da Web mais usada para coletar a entrada do usuário em etapas lógicas menores.  
  
-   Permitir navegação linear ou não linear através das etapas.  
  
<a name="components"></a>   
## <a name="wizard-components"></a>Assistente de componentes  
 O <xref:System.Web.UI.WebControls.Wizard> controle é composto dos seguintes componentes:  
  
-   Um <xref:System.Web.UI.WebControls.WizardStepCollection> conjunto de etapas que contêm a interface do usuário para cada etapa, conforme definido pelo desenvolvedor de página.  
  
-   Recursos internos de navegação que determinam os botões apropriados para exibir com base no <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> valor.  
  
-   Área de cabeçalho que pode ser personalizada para exibir informações específicas para a etapa que o usuário está ativado.  
  
-   Uma área de barra lateral que pode ser usada para navegar rapidamente para as etapas no controle.  
  
    > [!NOTE]
    >  Observe que, se você estiver usando o Microsoft Visual Studio 2005, o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> é mantido no modo de exibição de origem. Se você alterar o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade no modo de Design, clicando nos botões de barra lateral e, em seguida, execute a página, a primeira etapa do `Wizard` controle não pode ser mostrado porque o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> pode estar apontando para uma etapa diferente.  
  
<a name="wizard_steps"></a>   
## <a name="wizard-steps"></a>Etapas do Assistente  
 Cada uma das etapas de <xref:System.Web.UI.WebControls.Wizard> controle tem um <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriedade que determina o tipo de funcionalidade de navegação que tem a etapa. Se você não especificar um valor para o <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriedade, o valor padrão é <xref:System.Web.UI.WebControls.WizardStepType.Auto>. A tabela a seguir lista as configurações disponíveis para o <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriedade e o comportamento resultante da etapa.  
  
 `WizardStepType.Auto`  
 A interface do usuário que é renderizado para a etapa de navegação é determinada pela ordem na qual a etapa é declarada.  
  
 `WizardStepType.Complete`  
 A etapa é o último apareça. Não há botões de navegação são renderizados.  
  
 `WizardStepType.Finish`  
 A etapa é o último que coleta dados de usuário. O **concluir** botão é processado para navegação.  
  
 `WizardStepType.Start`  
 A etapa é o primeiro que aparecem. Um **anterior** botão não é processado.  
  
 `WizardStepType.Step`  
 A etapa é qualquer etapa entre o primeiro e último. **Anterior** e **próximo** botões são renderizados para navegação.  
  
<a name="collecting_wizard_data"></a>   
## <a name="collecting-wizard-data"></a>Coleta de dados de Assistente  
 Usando o <xref:System.Web.UI.WebControls.Wizard> controle, é possível coletar dados por meio de navegação linear ou não linear. Alguns exemplos de navegação não linear ignorando etapas desnecessárias ou retornar a uma etapa concluída anteriormente para alterar algum valor. O <xref:System.Web.UI.WebControls.Wizard> controle mantém seu estado entre as etapas, para que os dados inseridos em uma etapa não precisam ser persistidos para armazenamento de dados até que todas as etapas a <xref:System.Web.UI.WebControls.Wizard> controle foram concluídas.  
  
 Como alternativa, se você quiser manter os dados coletados para um repositório de dados como cada etapa for concluída, como quando o <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> evento é gerado, você deve definir o <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade do <xref:System.Web.UI.WebControls.WizardStepBase> do objeto para `false` para que o usuário não pode retornar a uma etapa concluída anteriormente e alterar os dados depois que ela foi enviada.  
  
<a name="wizard_command_names"></a>   
## <a name="wizard-command-names"></a>Nomes de comando do Assistente  
 O <xref:System.Web.UI.WebControls.Wizard> controle herda os seguintes nomes de comando da <xref:System.Web.UI.WebControls.View> classe e <xref:System.Web.UI.WebControls.MultiView> classe: <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, e <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>. O controle Wizard ignora esses nomes de comando e não inclui qualquer lógica especial para permitir que esses comandos funcionem automaticamente para navegação. Se um nome de comando é removido ou não tem um botão de <xref:System.Web.UI.WebControls.Wizard> controle, nenhuma exceção é lançada. Por exemplo, se o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> botão tem um valor para <xref:System.Web.UI.WebControls.Button.CommandName%2A>, nenhuma exceção é lançada.  
  
<a name="dynamically_changing_steps"></a>   
## <a name="dynamically-changing-steps"></a>Alterar dinamicamente as etapas  
 Você pode usar o <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> método ou o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade a ser alterada dinamicamente a etapa que é exibida no momento o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
> [!NOTE]
>  Se você adicionar programaticamente uma <xref:System.Web.UI.WebControls.WizardStep> no `Page_Load` manipulador de eventos, você deve adicionar a navegação para essa etapa antes da carregamento da página.  
  
<a name="wizard_appearance"></a>   
## <a name="wizard-appearance"></a>Aparência de Assistente  
 A aparência do <xref:System.Web.UI.WebControls.Wizard> controle é totalmente personalizável através de modelos, capas e configurações de estilo. Por exemplo, você pode usar o <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>, e <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> propriedades para personalizar a interface do <xref:System.Web.UI.WebControls.Wizard> controle.  
  
> [!NOTE]
>  Definindo o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>, <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>, <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>, ou <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> propriedade recria os controles filho do <xref:System.Web.UI.WebControls.Wizard> controle. Como resultado, o estado de exibição para os controles filho é perdido no processo. Para evitar essa situação, o estado de controle de explicitamente manter o <xref:System.Web.UI.WebControls.Wizard> filho do controle controla explicitamente ou evitar colocar controles dentro de modelos.  
  
 Observe que o <xref:System.Web.UI.WebControls.Wizard> controle não dá suporte a processamento especial do Microsoft Internet Explorer para não-padrão ou modo quirks. Para obter melhor renderização do Internet Explorer usando o <xref:System.Web.UI.WebControls.Wizard> controlar, use o tipo de documento XHTML, que é adicionado por padrão no Visual Web Developer e Visual Studio.  
  
<a name="formatting_using_layout_templates"></a>   
## <a name="formatting-using-layout-templates"></a>Formatação usando modelos de Layout  
 O <xref:System.Web.UI.WebControls.Wizard> controle permite que você especifique o layout do controle sem exigir que você use um HTML `table` elemento. Em vez disso, você pode usar um `LayoutTemplate` elemento para especificar o layout. O modelo, você criar espaço reservado controles para indicar quais itens devem ser inseridos dinamicamente no controle. (Isso é semelhante ao modo como o modelo de modelo para o <xref:System.Web.UI.WebControls.ListView> controles funciona.) Para obter mais informações, consulte a propriedade <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=nameWithType>.  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Acessibilidade  
 Para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controles ASP.NET e acessibilidade](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:Wizard  
    AccessKey="string"  
    ActiveStepIndex="integer"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DisplayCancelButton="True|False"  
    DisplaySideBar="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FinishCompleteButtonImageUrl="uri"  
    FinishCompleteButtonText="string"  
    FinishCompleteButtonType="Button|Image|Link"  
    FinishDestinationPageUrl="uri"  
    FinishPreviousButtonImageUrl="uri"  
    FinishPreviousButtonText="string"  
    FinishPreviousButtonType="Button|Image|Link"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    HeaderText="string"  
    Height="size"  
    ID="string"  
    OnActiveStepChanged="ActiveStepChanged event handler"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnFinishButtonClick="FinishButtonClick event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnNextButtonClick="NextButtonClick event handler"  
    OnPreRender="PreRender event handler"  
    OnPreviousButtonClick="PreviousButtonClick event handler"  
    OnSideBarButtonClick="SideBarButtonClick event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    SkipLinkText="string"  
    StartNextButtonImageUrl="uri"  
    StartNextButtonText="string"  
    StartNextButtonType="Button|Image|Link"  
    StepNextButtonImageUrl="uri"  
    StepNextButtonText="string"  
    StepNextButtonType="Button|Image|Link"  
    StepPreviousButtonImageUrl="uri"  
    StepPreviousButtonText="string"  
    StepPreviousButtonType="Button|Image|Link"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle />  
        <FinishCompleteButtonStyle />  
        <FinishNavigationTemplate>  
            <!-- child controls -->  
        </FinishNavigationTemplate>  
        <FinishPreviousButtonStyle />  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <NavigationButtonStyle />  
        <NavigationStyle />  
        <SideBarButtonStyle />  
        <SideBarStyle />  
        <SideBarTemplate>  
            <!-- child controls -->  
        </SideBarTemplate>  
        <StartNavigationTemplate>  
            <!-- child controls -->  
        </StartNavigationTemplate>  
        <StartNextButtonStyle />  
        <StepNavigationTemplate>  
            <!-- child controls -->  
        </StepNavigationTemplate>  
        <StepNextButtonStyle />  
        <StepPreviousButtonStyle />  
        <StepStyle />  
        <WizardSteps>  
                <asp:TemplatedWizardStep  
                    AllowReturn="True|False"  
                    ContentTemplateContainer="string"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
                </asp:TemplatedWizardStep>  
                <asp:WizardStep  
                    AllowReturn="True|False"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
                />  
        </WizardSteps>  
</asp:Wizard>  
```  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir um <xref:System.Web.UI.WebControls.Wizard> controle para coletar o nome e endereço, com a opção para inserir um endereço de envio separado de um usuário. Se o usuário não seleciona **SeparateShippingCheckBox**e, portanto, emitir uma solicitação para adicionar um endereço de envio separado, o <xref:System.Web.UI.WebControls.Wizard> controle move diretamente do `Step2` para `Finish`. No `Finish` etapa, o usuário tem a opção para retornar ao início do <xref:System.Web.UI.WebControls.Wizard> controle clicando **GoBackButton**; no entanto, que leva o usuário `Step2` porque o <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade `Step1` é definido como `false`.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclassvb.aspx#1)]  
  
 O exemplo de código a seguir é o arquivo de code-behind da página da Web usado no exemplo anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclass.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclass.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Wizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.Wizard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.%23ctor%2A> construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.Wizard> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase ActiveStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase ActiveStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a etapa na coleção <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> que está sendo exibida atualmente para o usuário.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> que é exibido atualmente para o usuário.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade retorna o <xref:System.Web.UI.WebControls.WizardStepBase> objeto exibido no momento o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade é somente leitura; no entanto, você pode usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade para acessar as propriedades do atual <xref:System.Web.UI.WebControls.WizardStepBase> objeto. Use o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade a ser alterada dinamicamente o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> para outro <xref:System.Web.UI.WebControls.WizardStepBase> objeto. Como alternativa, você pode usar o <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> método para definir dinamicamente o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade para determinar qual etapa para definir como o próximo <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle. Se o valor de `CheckBox1.Checked` é `true`, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step3`; caso contrário, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step2`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> correspondente é menor que -1 ou maior que o número de objetos <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> no <see cref="T:System.Web.UI.WebControls.Wizard" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ActiveStepChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveStepChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveStepChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário alterna para uma nova etapa no controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> evento é gerado quando a etapa atual que é exibido no <xref:System.Web.UI.WebControls.Wizard> controlar alterações. Use o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> eventos para fornecer processamento adicional quando a etapa atual do <xref:System.Web.UI.WebControls.Wizard> controlar alterações.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> evento para atualizar o <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice do objeto <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> atual.</summary>
        <value>O índice do <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> que é exibido atualmente no controle <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade fornece o índice de base zero a <xref:System.Web.UI.WebControls.WizardStepBase> objeto exibido no momento o <xref:System.Web.UI.WebControls.Wizard> controle. Você pode definir o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade para controlar qual etapa é exibida para o usuário em tempo de execução.  
  
> [!NOTE]
>  Observe que, se você estiver usando o Microsoft Visual Studio 2005, o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> é mantido no modo de exibição de origem. Se você alterar o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade no modo de Design, clicando nos botões de barra lateral e, em seguida, execute a página, a primeira etapa do `Wizard` controle não pode ser mostrado porque o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> pode estar apontando para uma etapa diferente.  
  
 Se você definir o valor de <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> como -1 para dar suporte a um assistente sem etapas por padrão, o seguinte comportamento ocorre:  
  
-   Se você definir declarativamente <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> como -1 ou defina-a -1 como um valor padrão, o controle sempre tentará para renderizar a primeira etapa no assistente.  
  
-   Se você definir programaticamente <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> como -1, o controle não será processada.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade para definir o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle. Se o valor de `CheckBox1.Checked` é `true`, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step3`; caso contrário, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step2`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/CS/wizardactivestepindexcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/VB/wizardactivestepindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor selecionado é maior do que o número de etapas do assistente definidas na coleção <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationToStep">
      <MemberSignature Language="C#" Value="protected virtual bool AllowNavigationToStep (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowNavigationToStep(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.AllowNavigationToStep(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> do objeto que está sendo verificada.</param>
        <summary>Usa um valor booleano para determinar se o <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> propriedade pode ser definida o <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objeto corresponde ao índice no passado.</summary>
        <returns>
          <see langword="false" />Se o índice passado refere-se a uma <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> que já foram acessado e sua <see cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" /> está definida como <see langword="false" />; caso contrário, <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> método pode ser acessado de uma classe derivada apenas por causa de sua `protected` modificador. Em uma classe derivada, você pode usar o <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> método para determinar se o índice passado pode ser usado para definir o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> propriedade. O <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> método retornará `false` se o índice que é transmitido refere-se a uma <xref:System.Web.UI.WebControls.WizardStepBase> objeto que já foram acessado e tem seu <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade definida como `false`; caso contrário, retornará `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma classe derivada chamada `CustomWizard` e substituir o <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> método. Quando um botão na área de barra lateral do `CustomWizard` controle é clicado, o <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> método é chamado para determinar se a etapa selecionada pode ser acessada. Em seguida, uma mensagem é gravada para a página da Web contendo informando o usuário sobre o que ocorreu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/CS/wizardallownavigationtostepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/VB/wizardallownavigationtostepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando se clica no botão **Cancelar**.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> é gerado quando o **Cancelar** botão o <xref:System.Web.UI.WebControls.Wizard> controle é clicado. Use o <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> eventos para fornecer processamento adicional quando a **Cancelar** botão é clicado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> evento. Quando o **Cancelar** botão é clicado, a página é redirecionada para http://www.wingtiptoys.com/.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CancelButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CancelButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica o identificador para o **Cancelar** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> é `"CancelButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem exibida para o **Cancelar** botão.</summary>
        <value>A URL da imagem exibida para o **Cancelar** botão o <see cref="T:System.Web.UI.WebControls.Wizard" /> controle. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> está definida como <xref:System.Web.UI.WebControls.ButtonType.Image>, use o <xref:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **Cancelar** botão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a uma coleção de propriedades de estilo que definem a aparência do **Cancelar** botão.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **Cancelar** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> propriedade define a aparência para o **Cancelar** botão o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **Cancelar** botão.</summary>
        <value>O texto da legenda exibido para **Cancelar** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Cancelar"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A> propriedade contém o texto que é exibido para o **Cancelar** botão o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem ou o texto de um link. A seguinte tabela lista o <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> valores e seus respectivos efeitos sobre o **Cancelar** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto aparece como um link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **Cancelar** botão.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome do comando para o **Cancelar** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> é `"Cancel"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL que o usuário é direcionado para quando eles clicarem o **Cancelar** botão.</summary>
        <value>A URL que o usuário é redirecionado para quando eles clicarem **Cancelar** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A> propriedade especifica a etapa que é exibida quando o usuário clica o **Cancelar** botão o <xref:System.Web.UI.WebControls.Wizard> controle. Se o <xref:System.Web.UI.WebControls.Wizard.DisplayCancelButton%2A> está definida como `true` e <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A> propriedade não for definida, a página da Web é atualizada e o <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> é gerado.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de espaço entre a borda da célula e o conteúdo da célula.</summary>
        <value>A quantidade de espaço, em pixels, entre a borda da célula e o conteúdo de uma célula. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> propriedade para controlar o espaçamento entre o conteúdo de uma célula e a borda da célula. A quantidade de preenchimento especificado é adicionada a todos os quatro lados da célula. Todas as células em uma coluna compartilham a mesma largura da célula; Portanto, o espaçamento é aplicado à célula na coluna mais ampla. Da mesma forma, todas as células na mesma linha compartilham a mesma altura da célula. Portanto, o espaçamento é aplicado para a célula mais alta da linha. Tamanhos de célula individual não podem ser especificados.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> e <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> propriedades programar o layout do <xref:System.Web.UI.WebControls.Wizard> controlar declarativamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de espaço entre células.</summary>
        <value>A quantidade de espaço, em pixels, entre células. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> propriedade para controlar o espaçamento entre as células adjacentes em um controle Wizard. É aplicado a este espaçamento vertical e horizontalmente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> e <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> propriedades programar o layout do <xref:System.Web.UI.WebControls.Wizard> controlar declarativamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria os controles de filho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria a coleção de controle.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria a hierarquia de filho controles que compõem o controle.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">O modelo de barra lateral não contém um <see cref="T:System.Web.UI.WebControls.DataList" /> controle.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um estilo de controle.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomFinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomFinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomFinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador de um personalizado **concluir** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> é `"CustomFinishButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador de um personalizado **próximo** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> é `"CustomNextButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador de um personalizado **anterior** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> é `"CustomPreviousButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataListID">
      <MemberSignature Language="C#" Value="protected static readonly string DataListID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string DataListID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.DataListID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador para a barra lateral <see cref="T:System.Web.UI.WebControls.DataList" /> coleção. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.DataListID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.DataListID> é `"SideBarList"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCancelButton">
      <MemberSignature Language="C#" Value="public virtual bool DisplayCancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayCancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano que indica se deseja exibir um **Cancelar** botão.</summary>
        <value>
          <see langword="true" />Para exibir **Cancelar** no <see cref="T:System.Web.UI.WebControls.Wizard" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <see cref="T:System.Web.UI.ThemeableAttribute" /> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public virtual bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano que indica se é exibir a área de barra lateral no <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <value>
          <see langword="true" />Para exibir a área de barra lateral no <see cref="T:System.Web.UI.WebControls.Wizard" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <see cref="T:System.Web.UI.ThemeableAttribute" /> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pode haver uma diferença no processamento do <xref:System.Web.UI.WebControls.Wizard> controle dependendo se essa propriedade for definida como `true` ou `false`. Quando o valor dessa propriedade é definido como `true` e a barra lateral é exibida, espaçamento da célula não será aplicado para o `HeadCell`, `StepCell`, ou `NavigationCell` elementos de tabela do controle. Quando esse valor é `false`, espaçamento da célula é aplicado. Isso pode afetar como o controle é processado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão **Concluir** é acionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> é gerado quando o **concluir** botão o <xref:System.Web.UI.WebControls.Wizard> controle é clicado. Use o <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> eventos para fornecer processamento adicional quando a **concluir** botão é clicado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> evento. Quando o **concluir** botão é clicado, uma mensagem de confirmação é gravada `Label1` e `Label1.Visible` está definida como `true` para que a mensagem é exibida na etapa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador para o **concluir** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> é `"FinishButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem que é exibida para o **concluir** botão.</summary>
        <value>A URL da imagem exibida para **concluir** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> está definida como o <xref:System.Web.UI.WebControls.ButtonType.Image> campo, use o <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **concluir** botão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishCompleteButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishCompleteButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o **concluir** botão.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **concluir** no <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> propriedade define a aparência para o **concluir** botão o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **concluir** botão.</summary>
        <value>O texto da legenda exibido para **concluir** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Concluir"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A> propriedade contém o texto que é exibido para o **concluir** botão o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem em navegadores que não processam imagens, ou o texto de um link. A tabela a seguir lista os valores de campo para o <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> propriedade e o efeito do respectivo de cada no **concluir** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto é exibido como texto de link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishCompleteButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishCompleteButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **concluir** botão.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL que o usuário é redirecionado para quando eles clicarem o **concluir** botão.</summary>
        <value>A URL que o usuário é redirecionado para quando eles clicarem **concluir** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl%2A> propriedade especifica a etapa que é exibida quando o usuário clica o **concluir** botão o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FinishNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FinishNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo usado para exibir a área de navegação na etapa <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />.</summary>
        <value>O <see cref="T:System.Web.UI.ITemplate" /> que define o conteúdo para a área de navegação do <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> no <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> propriedade para especificar o conteúdo de personalizado que é exibida para a área de navegação no <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa o <xref:System.Web.UI.WebControls.Wizard> controle. Defina o conteúdo ao criar um modelo que especifica como a área de navegação é renderizada no <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa.  
  
 O conteúdo personalizado para o modelo está contido dentro de <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> objeto. Você pode adicionar conteúdo personalizado para o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> objeto usando o modo de edição de modelo no modo design ou definindo o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> objeto embutido usando `FinishNavigationTemplate` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> que está contido no objeto o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> propriedade deve conter dois <xref:System.Web.UI.WebControls.IButtonControl> controla, uma com seu <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> propriedade definida como "MoveComplete" e o outro com seu <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> propriedade definida como "MovePrevious", para habilitar o recurso de navegação.  
  
 Para acessar um controle que é definido em um modelo programaticamente, use o <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> coleção do <xref:System.Web.UI.WebControls.Wizard> objeto. Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A> método o <xref:System.Web.UI.WebControls.Wizard> objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A> propriedade especificada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> propriedade para criar um modelo personalizado para a área de navegação do <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa para o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/CS/wizardfinishnavigationtemplatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/VB/wizardfinishnavigationtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador para o **anterior** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> etapa. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID> `"FinishPreviousButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem que é exibida para o **anterior** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> etapa.</summary>
        <value>A URL da imagem exibida para **anterior** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> está definida como o <xref:System.Web.UI.WebControls.ButtonType.Image> campo, use o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **anterior** botão o <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o **anterior** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> etapa.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **anterior** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> propriedade define a aparência para o **anterior** botão o <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa do <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **anterior** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> etapa.</summary>
        <value>O texto da legenda exibido para **anterior** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Anterior"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A> propriedade contém o texto que é exibido para o **anterior** botão o <xref:System.Web.UI.WebControls.WizardStepType.Finish> etapa o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem em navegadores que não processam imagens, ou o texto de um link. A seguinte tabela lista o <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> valores de campo de propriedade e os respectivos efeitos sobre o **anterior** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto aparece como um link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **anterior** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> etapa.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetDesignModeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o estado do modo de design.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistory">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetHistory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetHistory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetHistory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos que tenham sido acessados.</summary>
        <returns>Um <see cref="T:System.Collections.ICollection" /> que contém o <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos que tenham sido acessados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.GetHistory%2A> método retorna uma coleção que contém o <xref:System.Web.UI.WebControls.WizardStepBase> objetos que tenham sido acessados. O <xref:System.Web.UI.WebControls.WizardStepBase> objetos são organizados na ordem em que foram acessadas: o primeiro item na coleção é anterior <xref:System.Web.UI.WebControls.WizardStepBase> do objeto, o segundo item na coleção é o <xref:System.Web.UI.WebControls.WizardStepBase> do objeto que foi acessado antes da etapa anterior e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStepType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepType GetStepType (System.Web.UI.WebControls.WizardStepBase wizardStep, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.UI.WebControls.WizardStepType GetStepType(class System.Web.UI.WebControls.WizardStepBase wizardStep, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetStepType(System.Web.UI.WebControls.WizardStepBase,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> para o qual associado <see cref="T:System.Web.UI.WebControls.WizardStepType" /> é retornado.</param>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> para o qual associado <see cref="T:System.Web.UI.WebControls.WizardStepType" /> é retornado.</param>
        <summary>Retorna o <see cref="T:System.Web.UI.WebControls.WizardStepType" /> valor especificado <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objeto.</summary>
        <returns>Um dos valores de <see cref="T:System.Web.UI.WebControls.WizardStepType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> método para determinar a <xref:System.Web.UI.WebControls.WizardStepType> valor especificada <xref:System.Web.UI.WebControls.WizardStepBase> objeto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> método para determinar o associado <xref:System.Web.UI.WebControls.WizardStepType> valor para a etapa atual do <xref:System.Web.UI.WebControls.Wizard> controle. Cada vez que o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> é gerado, o novo <xref:System.Web.UI.WebControls.WizardStepType> valor é recuperado e uma mensagem é gravada para `Label1`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/CS/wizardgetsteptypecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/VB/wizardgetsteptypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string HeaderPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string HeaderPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.HeaderPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a ID do <see cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" /> espaço reservado em uma <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ID do espaço reservado deve ser definida como "headerPlaceHolder".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para a área de cabeçalho no controle.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para a área de cabeçalho no <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> propriedade define a aparência da área de cabeçalho no <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo é usado para exibir a área de cabeçalho no controle.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para exibir a área de cabeçalho no <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> propriedade para especificar o conteúdo de personalizado que é exibida para a área de cabeçalho em uma <xref:System.Web.UI.WebControls.Wizard> controle. Defina o conteúdo ao criar um modelo que especifica como a área do cabeçalho é renderizada.  
  
 O conteúdo personalizado para o modelo está contido dentro de <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> objeto. Você pode adicionar conteúdo personalizado para o <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> objeto usando o modo de edição de modelo no modo design ou definindo o <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> objeto embutido usando `HeaderTemplate` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).  
  
 Para acessar um controle que é definido em um modelo programaticamente, use o <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> coleção do <xref:System.Web.UI.WebControls.Wizard> objeto. Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A> método o <xref:System.Web.UI.WebControls.Wizard> objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A> propriedade especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para a área de cabeçalho no controle.</summary>
        <value>O texto da legenda exibido para a área de cabeçalho no <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade define o texto da legenda que é exibido para a área de cabeçalho no <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 Para controlar o estilo da área de cabeçalho, use o <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> propriedade. Como alternativa, você pode definir sua própria interface do usuário personalizada para a linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> propriedade em vez do <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> e <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> propriedades são definidas, o <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade não tem nenhum efeito.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> evento para atualizar o <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo personalizado do contêiner raiz em um controle <see cref="T:System.Web.UI.WebControls.Wizard" />.</summary>
        <value>Um objeto que contém o conteúdo personalizado do contêiner raiz em um controle <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <see langword="null" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A> propriedade para definir uma interface de usuário personalizada (UI) para o <xref:System.Web.UI.WebControls.Wizard> controle. Para especificar um modelo de layout, adicione um `LayoutTemplate` elemento dentro do <xref:System.Web.UI.WebControls.Wizard> marcação de controle. Dentro de `LayoutTemplate` elemento, adicionar espaços reservados para os componentes do <xref:System.Web.UI.WebControls.Wizard> controle. Espaços reservados para a navegação, barra lateral e seções de etapa do Assistente do <xref:System.Web.UI.WebControls.Wizard> controle são necessários no `LayoutTemplate` elemento.  
  
> [!NOTE]
>  Você pode modificar o modelo de layout no **fonte** exibição. Editar o modelo de layout em **Design** não há suporte para o modo de exibição.  
  
   
  
## Examples  
 O exemplo a seguir mostra como adicionar um `LayoutTemplate` elemento para o `Wizard` controle e como formatar os componentes do `Wizard` controle usando `div` elementos. Quando o controle é processado, o `div` elementos serão usados em vez de tabelas HTML para formatar o controle.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">O estado de controle a ser restaurado.</param>
        <summary>Restaurações de controlam informações de estado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">O estado de controle a ser restaurado.</param>
        <summary>Carrega informações de estado de exibição.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> não é um valor <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveCompleteCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveCompleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveCompleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome do comando que está associado com o **concluir** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> é `"MoveComplete"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNextCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveNextCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveNextCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome do comando que está associado com o **próximo** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> é `"MoveNext"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePreviousCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MovePreviousCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MovePreviousCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome do comando que está associado com o **anterior** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> é `"MovePrevious"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">O objeto derivado de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> a ser definido como o <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />.</param>
        <summary>Define o objeto derivado de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> especificado como o valor para a propriedade <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> do controle <see cref="T:System.Web.UI.WebControls.Wizard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> método para controlar quais <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivado é definido como o valor para o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade no <xref:System.Web.UI.WebControls.Wizard> controlar programaticamente. Dessa forma, você pode alterar o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade dinamicamente com base em outras condições durante o tempo de execução.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> método para controlar o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle. Se o valor de `CheckBox1.Checked` é `true`, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step3`; caso contrário, o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> está definida como `Wizard1.Step2`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/CS/wizardmovetocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/VB/wizardmovetovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objeto passado é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> do objeto associado derivado de <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> passado é igual a -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveToCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveToCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o nome do comando que está associado a cada um dos botões de barra lateral. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> é `"Move"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NavigationButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NavigationButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para os botões na área de navegação no controle.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para os botões na área de navegação no <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade define a aparência dos botões na área de navegação no <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade são mesclados com os estilos de botão individuais. Qualquer configuração que é aplicada nas propriedades de estilo do botão individuais substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Por exemplo, se você definir o `FinishPreviousButtonStyle.ForeColor` propriedade para `"red"` e o `NavigationButtonStyle.ForeColor` propriedade `"green"`, a cor do botão será vermelha porque individuais de configurações de estilo a <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> as configurações de substituição de propriedade a <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 O seguinte <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> estilos de propriedade são substituídos pelas configurações de estilo do botão individuais:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string NavigationPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NavigationPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.NavigationPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a ID do <see cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" /> espaço reservado em uma <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ID do espaço reservado deve ser definida como "navigationPlaceHolder".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle NavigationStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle NavigationStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para a área de navegação no controle.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para a área de navegação no <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> propriedade define a aparência da área de navegação no <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado.  
  
 As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard> controle. Todas as configurações que são aplicadas a <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> as configurações correspondentes nas propriedades da substituição de propriedade de <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 O seguinte <xref:System.Web.UI.WebControls.Wizard> propriedades de estilo são substituídas pelo <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> configurações:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão **Próximo** é clicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> é gerado quando o **próximo** botão o <xref:System.Web.UI.WebControls.Wizard> controle é clicado. Use o <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> eventos para fornecer processamento adicional quando a **próximo** botão é clicado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> evento. Cada vez que o **próximo** botão é clicado, o <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriedade para o <xref:System.Web.UI.WebControls.Wizard> controle é aumentado em 1 pixel, conforme medido pelo <xref:System.Web.UI.WebControls.Unit> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveStepChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveStepChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveStepChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> método gera o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> eventos quando o <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle é alterado. Use o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> evento para fornecer processamento adicional quando a etapa de atual que é exibido no <xref:System.Web.UI.WebControls.Wizard> controlar alterações.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> evento para atualizar o <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Contém dados do evento.</param>
        <summary>Determina se o evento para o controle de servidor é passado a hierarquia de controle de servidor do interface de usuário da página.</summary>
        <returns>
          <see langword="true" />Se o evento para o controle de servidor é passado a hierarquia de controle do servidor de interface de usuário da página; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados de evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> é gerado quando o **Cancelar** botão é clicado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> evento. Quando o **Cancelar** botão é clicado, a etapa será redirecionada para http://www.wingtiptoys.com/.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFinishButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnFinishButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> que contém os dados de evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> é gerado quando o **concluir** botão é clicado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnFinishButtonClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> evento. Quando o **concluir** botão é clicado, uma mensagem de confirmação é gravada `Label1` e `Label1.Visible` está definida como `true` para que a mensagem é exibida na etapa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O evento gerado.</param>
        <summary>Gera o evento Init.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> que contém os dados de evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> é gerado quando o **próximo** botão é clicado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnNextButtonClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> evento. Cada vez que o **próximo** botão é clicado, o <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriedade para o <xref:System.Web.UI.WebControls.Wizard> controle é aumentado em 1 pixel, conforme medido pelo <xref:System.Web.UI.WebControls.Unit> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreviousButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviousButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviousButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> que contém dados de evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> é gerado quando o **anterior** botão é clicado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> evento. Cada vez que o **anterior** botão é clicado, o <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriedade para o <xref:System.Web.UI.WebControls.Wizard> controle diminui em 1 pixel, conforme medido pelo <xref:System.Web.UI.WebControls.Unit> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSideBarButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnSideBarButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSideBarButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> que contém dados de evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> é gerado quando um botão na área de barra lateral é clicado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento não gera um evento se um <xref:System.Web.UI.WebControls.Button> controlar com o <xref:System.Web.UI.WebControls.Button.CommandName%2A> propriedade definida como `Move` está fora do <xref:System.Web.UI.WebControls.DataList> lista de barra lateral do controle para o <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 O <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento. Cada vez que o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> é gerado, uma mensagem é gravada para o <xref:System.Web.UI.WebControls.Label.Text%2A> propriedade `Label1` com as informações na barra lateral do qual área foi clicada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> método da classe base, de modo que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreviousButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o **anterior** botão é clicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> é gerado quando o **anterior** botão o <xref:System.Web.UI.WebControls.Wizard> controle é clicado. Use o <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> eventos para fornecer processamento adicional quando a **anterior** botão é clicado.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> evento. Cada vez que o **anterior** botão é clicado, o <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriedade para o <xref:System.Web.UI.WebControls.Wizard> controle diminui em 1 pixel, conforme medido pelo <xref:System.Web.UI.WebControls.Unit> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCommandEvents">
      <MemberSignature Language="C#" Value="protected void RegisterCommandEvents (System.Web.UI.WebControls.IButtonControl button);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RegisterCommandEvents(class System.Web.UI.WebControls.IButtonControl button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="button">O <see cref="T:System.Web.UI.WebControls.IButtonControl" /> para o qual a nova instância do <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> está registrado.</param>
        <summary>Registra uma nova instância do <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> classe especificado <see cref="T:System.Web.UI.WebControls.IButtonControl" /> objeto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O gravador HTML.</param>
        <summary>Renderiza o controle para o gravador especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salve o estado do controle.</summary>
        <returns>O estado do controle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado de exibição.</summary>
        <returns>O estado de exibição.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonClick">
      <MemberSignature Language="C#" Value="public virtual event System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um botão na área da barra lateral é clicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento é gerado quando um botão na área de barra lateral do <xref:System.Web.UI.WebControls.Wizard> controle é clicado. Use o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento para fornecer processamento adicional quando um botão na área de barra lateral é clicado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento não gera um evento se um <xref:System.Web.UI.WebControls.Button> controlar com o <xref:System.Web.UI.WebControls.Button.CommandName%2A> propriedade definida como `Move` está fora do <xref:System.Web.UI.WebControls.DataList> lista de barra lateral do controle para o <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> evento. Cada vez que o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> é gerado, uma mensagem é gravada para o <xref:System.Web.UI.WebControls.Label.Text%2A> propriedade `Label1` com as informações na barra lateral do qual área foi clicada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string SideBarButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string SideBarButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador que é associado a cada um dos botões de barra lateral. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> é `"SideBarButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SideBarButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SideBarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para os botões na barra lateral.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para os botões na barra lateral do <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> propriedade define a aparência dos botões na barra lateral do <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado.  
  
 As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard> controle. Todas as configurações que são aplicadas a <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> as configurações correspondentes nas propriedades da substituição de propriedade de <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 O seguinte <xref:System.Web.UI.WebControls.Wizard> propriedades de estilo são substituídas por <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> configurações:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 No entanto, quando você usa modelos para definir a aparência do <xref:System.Web.UI.WebControls.Wizard> controlar barra lateral, o <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> propriedade não tem nenhum efeito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string SideBarPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SideBarPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a ID do <see cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" /> espaço reservado em uma <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ID do espaço reservado deve ser definida como "sideBarPlaceHolder".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SideBarStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SideBarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para a área de barra lateral do controle.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para a área de barra lateral sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> propriedade define a aparência da área de barra lateral no <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> retorna do objeto. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado.  
  
 As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard> controle. Todas as configurações que são aplicadas a <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> as configurações correspondentes nas propriedades da substituição de propriedade de <xref:System.Web.UI.WebControls.Wizard> controle.  
  
> [!NOTE]
>  A propriedade height de <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> será ignorado se a altura é definida como menos que a altura do assistente. Valores definidos para <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> altura e <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> Adicionar altura até a altura total do assistente. Por exemplo, se a altura do assistente é definida como 500 px e <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> altura ou <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> altura é definida como 50px ou 10%, a altura total do assistente é 550px.  
  
 O seguinte <xref:System.Web.UI.WebControls.Wizard> propriedades de estilo são substituídas por <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> configurações:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SideBarTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SideBarTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo usado para exibir a área da barra lateral no controle.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para exibir a área da barra lateral no <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> propriedade para especificar o conteúdo de personalizado que é exibida para a área de barra lateral em um <xref:System.Web.UI.WebControls.Wizard> controle. Defina o conteúdo ao criar um modelo que especifica como a área de barra lateral é renderizada.  
  
 O conteúdo personalizado para o modelo está contido dentro de <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto. Você pode adicionar conteúdo personalizado para o <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto usando o modo de edição de modelo no modo design ou definindo o <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto embutido usando `SideBarTemplate` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> objeto deve conter um <xref:System.Web.UI.WebControls.DataList> controle ou <xref:System.Web.UI.WebControls.ListView> controle cuja <xref:System.Web.UI.Control.ID%2A> está definida como `"SideBarList"` para habilitar o recurso de navegação de barra lateral. Além disso, o `"SideBarList"` no <xref:System.Web.UI.WebControls.DataList> ou <xref:System.Web.UI.WebControls.ListView> controle deve conter um <xref:System.Web.UI.WebControls.IButtonControl> controle.  
  
 Para acessar um controle que é definido em um modelo programaticamente, use o <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> coleção do <xref:System.Web.UI.WebControls.Wizard> objeto. Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A> método o <xref:System.Web.UI.WebControls.Wizard> objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A> propriedade especificada.  
  
   
  
## Examples  
 O exemplo a seguir mostra como adicionar um <xref:System.Web.UI.WebControls.ListView> o controle para o `SideBarTemplate` elemento e como usar um <xref:System.Web.UI.WebControls.LinkButton> controle para navegar as etapas.  
  
```  
<SideBarTemplate>  
  <asp:ListView ID="sideBarList" runat="server">  
    <LayoutTemplate>  
    <div id="ItemPlaceHolder" runat="server"/>  
    </LayoutTemplate>  
  
    <ItemTemplate>  
      <asp:LinkButton ID="sideBarButton" runat="server"   
          Text="Button" />  
    </ItemTemplate>  
  </asp:ListView>  
</SideBarTemplate>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que é usado para renderizar texto alternativo que notifica os leitores de tela ignorar o conteúdo na área de barra lateral.</summary>
        <value>Uma cadeia de caracteres que o <see cref="T:System.Web.UI.WebControls.Wizard" /> renderiza como o texto alternativo com uma imagem invisível, como uma dica aos leitores de tela. O padrão é <c>"Ignorar Links de navegação"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> propriedade para especificar o texto alternativo para uma imagem oculta que é lido por leitores de tela para fornecer a capacidade de ignorar o conteúdo de uma área de barra lateral. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem oculta que pode ser usada para tornar o controle mais acessíveis.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> está definida como `false`, o <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> propriedade não cria uma imagem oculta com texto alternativo.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StartNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StartNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo é usado para exibir a área de navegação no <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa o <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para exibir a área de navegação no <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> para o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> propriedade para especificar o conteúdo de personalizado que é exibida para a área de navegação no <xref:System.Web.UI.WebControls.WizardStepType.Start> etapa o <xref:System.Web.UI.WebControls.Wizard> controle. Defina o conteúdo ao criar um modelo que especifica como a área de navegação é renderizada no <xref:System.Web.UI.WebControls.WizardStepType.Start> etapa.  
  
 O conteúdo personalizado para o modelo está contido dentro de <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> objeto. Você pode adicionar conteúdo personalizado para o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> objeto usando o modo de edição de modelo no modo design ou definindo o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> objeto embutido usando `StartNavigationTemplate` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> que está contido no objeto o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> propriedade deve conter um <xref:System.Web.UI.WebControls.IButtonControl> controlar com o <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> propriedade definida como `"MoveNext"` para habilitar o recurso de navegação.  
  
 Para acessar um controle que é definido em um modelo programaticamente, use o <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> coleção do <xref:System.Web.UI.WebControls.Wizard> objeto. Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A> método o <xref:System.Web.UI.WebControls.Wizard> objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A> propriedade especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StartNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StartNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StartNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador que está associado com o **próximo** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID> é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID> é `"StartNextButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem que é exibida para o **próximo** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa.</summary>
        <value>A URL da imagem exibida para **próximo** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> está definida como o <xref:System.Web.UI.WebControls.ButtonType.Image> campo, use o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **próximo** botão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StartNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StartNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o **próximo** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **próximo** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> propriedade define a aparência para o **próximo** botão o <xref:System.Web.UI.WebControls.WizardStepType.Start> etapa do <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **próximo** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa.</summary>
        <value>O texto da legenda exibido para **próximo** no <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> do <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Próximo"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A> propriedade contém o texto que é exibido para o **próximo** botão o <xref:System.Web.UI.WebControls.WizardStepType.Start> etapa o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem em navegadores que não processam imagens, ou o texto de um link. A tabela a seguir lista os valores de campo para o <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> propriedade e o efeito do respectivo de cada no **próximo** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto aparece como um link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StartNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StartNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **próximo** botão o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> etapa.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StepNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StepNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo é usado para exibir a área de navegação em qualquer <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-objetos derivados que o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, o <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, ou <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> etapa.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para exibir a área de navegação em qualquer <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derivado objetos do <see cref="T:System.Web.UI.WebControls.Wizard" /> que controlam o <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, ou <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> propriedade para especificar o conteúdo de personalizado que é exibida para a área de navegação no <xref:System.Web.UI.WebControls.WizardStepType.Step> etapa o <xref:System.Web.UI.WebControls.Wizard> controle. Defina o conteúdo ao criar um modelo que especifica como a área de navegação é renderizada no <xref:System.Web.UI.WebControls.WizardStepType.Step> etapa.  
  
 O conteúdo personalizado para o modelo está contido dentro de <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> objeto. Você pode adicionar conteúdo personalizado para o <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> objeto usando o modo de edição de modelo no modo design ou definindo o <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> objeto embutido usando `StepNavigationTemplate` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> que está contido no objeto o <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> propriedade deve conter dois <xref:System.Web.UI.WebControls.IButtonControl> controla, uma com seu <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> propriedade definida como `"MoveNext"` e outra com seu <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> propriedade definida como `"MovePrevious"`, para habilitar o recurso de navegação.  
  
 Para acessar um controle que é definido em um modelo programaticamente, use o <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> coleção do <xref:System.Web.UI.WebControls.Wizard> objeto. Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A> método o <xref:System.Web.UI.WebControls.Wizard> objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A> propriedade especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador que está associado com o **próximo** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> é `"StepNextButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem que é exibida para o **próximo** botão.</summary>
        <value>A URL da imagem exibida para **próximo** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> está definida como o <xref:System.Web.UI.WebControls.ButtonType.Image> campo, use o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **próximo** botão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o **próximo** botão.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **próximo** no <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> propriedade define a aparência para o **próximo** botão o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **próximo** botão.</summary>
        <value>O texto da legenda exibido para **próximo** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Próximo"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A> propriedade contém o texto que é exibido para o **próximo** botão o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem ou o texto de um link. A tabela a seguir lista os valores de campo para o <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> propriedade e o efeito do respectivo de cada no **próximo** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto aparece como um link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **próximo** botão.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o identificador que está associado com o **anterior** botão. Este campo é estático e somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> campo é usado principalmente por desenvolvedores de controle. O valor para o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> é `"StepPreviousButton"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL da imagem que é exibida para o **anterior** botão.</summary>
        <value>A URL da imagem exibida para **anterior** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> está definida como o <xref:System.Web.UI.WebControls.ButtonType.Image> campo, use o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl%2A> propriedade para especificar a imagem a ser exibida para o **anterior** botão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o **anterior** botão.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para **anterior** em uma <see cref="F:System.Web.UI.WebControls.WizardStepType.Step" /> para o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> propriedade define a aparência do **anterior** botão um <xref:System.Web.UI.WebControls.WizardStepType.Step> etapa para o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da legenda que é exibido para o **anterior** botão.</summary>
        <value>O texto da legenda exibido para **anterior** sobre o <see cref="T:System.Web.UI.WebControls.Wizard" />. O padrão é <c>"Anterior"</c>. O texto padrão para o controle é localizado com base na localidade atual para o servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A> propriedade contém o texto que é exibido para o **anterior** botão o <xref:System.Web.UI.WebControls.Wizard> controle. Dependendo do valor da <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> propriedade, o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A> propriedade pode ser exibido como texto em um botão, como o texto exibido como uma alternativa para uma imagem em navegadores que não processam imagens, ou o texto de um link. A tabela a seguir lista os valores de campo para o <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> propriedade e o efeito do respectivo de cada no **anterior** texto de botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 Texto exibido no botão.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 Texto aparece como texto alternativo para a imagem.  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 Texto aparece como um link.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo do botão é processado como o **anterior** botão.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.ButtonType" />. O padrão é <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle StepStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle StepStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um <see cref="T:System.Web.UI.WebControls.Style" /> objeto que define as configurações para o <see cref="T:System.Web.UI.WebControls.WizardStep" /> objetos.</summary>
        <value>Uma referência para o <see cref="T:System.Web.UI.WebControls.Style" /> que define as configurações de estilo para o <see cref="T:System.Web.UI.WebControls.WizardStep" /> objetos o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedade obtém uma referência a um <xref:System.Web.UI.WebControls.Style> objeto que define a aparência para o <xref:System.Web.UI.WebControls.WizardStep> objetos o <xref:System.Web.UI.WebControls.Wizard> controle. O <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedade é somente leitura; no entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> objeto que ele retorna. Você pode definir essas propriedades declarativamente na forma `Property-Subproperty`, onde `Subproperty` representa uma propriedade do <xref:System.Web.UI.WebControls.Style> classe (por exemplo, `CancelButtonStyle-ForeColor`). Você pode definir uma propriedade programaticamente no formulário `Property.Subproperty` (por exemplo, `CancelButtonStyle.ForeColor`).  
  
 Configurações comuns incluem propriedades de fonte, cor do texto e cor de plano de fundo personalizado. As configurações de estilo para o <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedade são mescladas com as configurações de estilo para o <xref:System.Web.UI.WebControls.WebControl.Style%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle. Qualquer configuração que é aplicada no <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedade substitui a configuração correspondente no <xref:System.Web.UI.WebControls.WebControl.Style%2A> propriedade o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 O seguinte <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedades podem ser definidas para substituir o <xref:System.Web.UI.WebControls.WebControl.Style%2A> propriedades do <xref:System.Web.UI.WebControls.Wizard> controle:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.CssClass%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 Quando você usa um <xref:System.Web.UI.WebControls.TemplatedWizardStep> modelo para definir a aparência para o <xref:System.Web.UI.WebControls.WizardStep> objetos, o <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> propriedade não tem nenhum efeito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que corresponde ao valor de <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <value>O <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que corresponde ao valor de <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.TagKey%2A> propriedade é usada principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Wizard> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rastreia o estado de exibição.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardStepPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string WizardStepPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WizardStepPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a ID do <see cref="T:System.Web.UI.WebControls.WizardStep" /> espaço reservado em uma <see cref="T:System.Web.UI.WebControls.Wizard" /> controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ID do espaço reservado deve ser definida como "WizardStepPlaceHolder".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.WizardSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção que contém todos os <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos que são definidos para o controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> que representa todos os <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objetos definidos para o <see cref="T:System.Web.UI.WebControls.Wizard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade retorna uma coleção de <xref:System.Web.UI.WebControls.WizardStepBase> objetos que compõem o <xref:System.Web.UI.WebControls.Wizard> controle. Você pode usar o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> coleção para acessar o <xref:System.Web.UI.WebControls.WizardStepBase> objetos que estão contidos no <xref:System.Web.UI.WebControls.Wizard> controlar programaticamente. Use o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>, <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>, <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>, e <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> métodos para manipular o <xref:System.Web.UI.WebControls.WizardStepBase> programaticamente os objetos na coleção.  
  
> [!NOTE]
>  Observe que, se você estiver usando o Microsoft Visual Studio 2005, o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> é mantido no modo de exibição de origem. Se você alterar o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> propriedade no modo de Design, clicando nos botões de barra lateral e, em seguida, execute a página, a primeira etapa do `Wizard` controle não pode ser mostrado porque o <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> pode estar apontando para uma etapa diferente.  
  
 Se o <xref:System.Web.UI.WebControls.Wizard> controle contém várias <xref:System.Web.UI.WebControls.WizardStepCollection> coleções, as coleções serão mescladas.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.Wizard> controlar programaticamente e como usar o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> método para adicionar <xref:System.Web.UI.WebControls.WizardStepBase> objetos para o <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> coleção.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
