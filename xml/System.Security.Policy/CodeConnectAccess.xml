<Type Name="CodeConnectAccess" FullName="System.Security.Policy.CodeConnectAccess">
  <TypeSignature Language="C#" Value="public class CodeConnectAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeConnectAccess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.CodeConnectAccess" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica o acesso de recursos de rede é concedido ao código.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada em conjunto com o <xref:System.Security.Policy.NetCodeGroup> classe para controlar como executando código pode se conectar novamente ao site ele foi obtido. Essas classes fornecem controle programático do <xref:System.Net.WebPermission> concedida para a execução de código que controla quais esquemas e portas pode usar o código acessar seu site de origem. Você pode especificar o esquema e a porta pares que são permitidas com base no esquema de URL em que o código é originado.  
  
 Para criar um <xref:System.Security.Policy.CodeConnectAccess> objeto com base no esquema de origem do código, use o <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> método.  
  
 Para criar um <xref:System.Security.Policy.CodeConnectAccess> objeto que pode usar qualquer esquema, mas é restrito por porta, use o <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Security.Policy.NetCodeGroup> e o adiciona ao nível de política de usuário.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConnectAccess (string allowScheme, int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string allowScheme, int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowScheme" Type="System.String" />
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowScheme">O esquema URI representado pela instância atual.</param>
        <param name="allowPort">A porta representada pela instância atual.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Policy.CodeConnectAccess" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> propriedade é definida usando o `allowScheme` parâmetro. O esquema é convertido em minúsculas. O valor de <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> controla o esquema de execução de código pode usar para se conectar a um recurso de rede.  
  
 O <xref:System.Security.Policy.CodeConnectAccess.Port%2A> propriedade é definida usando o `allowPort` parâmetro. O valor de <xref:System.Security.Policy.CodeConnectAccess.Port%2A> controla a porta que executa o código pode usar para se conectar a um recurso de rede.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Security.Policy.CodeConnectAccess> foi transferido para o objeto que permite baixado código para se conectar novamente ao seu servidor de origem usando o protocolo HTTP e a mesma porta-lo. Para obter um exemplo que demonstra como usar <xref:System.Security.Policy.CodeConnectAccess> objetos para criar um grupo de código e adicionar o grupo de códigos para um nível de política, consulte o <xref:System.Security.Policy.CodeConnectAccess> visão geral da classe.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowScheme" /> é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="allowScheme" /> é uma cadeia de caracteres vazia ("").  
  
 -ou-  
  
 <paramref name="allowScheme" />contém caracteres que não são permitidos em esquemas.  
  
 -ou-  
  
 <paramref name="allowPort" /> é menor que 0.  
  
 -ou-  
  
 <paramref name="allowPort" />é maior que 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnyScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém o valor de cadeia de caracteres que representa o caractere curinga de esquema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como uma alternativa para construir um <xref:System.Security.Policy.CodeConnectAccess> objeto usando este valor, você pode chamar o <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> método para obter um <xref:System.Security.Policy.CodeConnectAccess> objeto que representa qualquer esquema e uma porta especificada.  
  
 O valor desse campo é "*".  
  
   
  
## Examples  
 O exemplo de código a seguir exibe o valor desse campo.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAnySchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">A porta representada pela instância retornada.</param>
        <summary>Retorna um <see cref="T:System.Security.Policy.CodeConnectAccess" /> instância que representa o acesso à porta especificada usando qualquer esquema.</summary>
        <returns>Um <see cref="T:System.Security.Policy.CodeConnectAccess" /> instância para a porta especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Policy.CodeConnectAccess> instância retornada por este método usa o valor de curinga de esquema <xref:System.Security.Policy.CodeConnectAccess.AnyScheme> ("*") para representar o esquema.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como chamar esse método. Para obter um exemplo que demonstra como usar <xref:System.Security.Policy.CodeConnectAccess> objetos para criar um grupo de código e adicionar o grupo de códigos para um nível de política, consulte o <xref:System.Security.Policy.CodeConnectAccess> visão geral da classe.  
  
 [!code-cpp[NclCodeGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#5)]
 [!code-csharp[NclCodeGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> é menor que 0.  
  
 -ou-  
  
 <paramref name="allowPort" />é maior que 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOriginSchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">A porta representada pela instância retornada.</param>
        <summary>Retorna um <see cref="T:System.Security.Policy.CodeConnectAccess" /> instância que representa o acesso à porta especificada usando o esquema do código de origem.</summary>
        <returns>Um <see cref="T:System.Security.Policy.CodeConnectAccess" /> instância para a porta especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Policy.CodeConnectAccess> retornada por esse método de instância tem o valor de esquema <xref:System.Security.Policy.CodeConnectAccess.OriginScheme>. O esquema de origem é o valor de esquema do URI onde o código foi originado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar <xref:System.Security.Policy.CodeConnectAccess> objetos para criar um grupo de código e adicionar o grupo de códigos para um nível de política.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> é menor que 0.  
  
 -ou-  
  
 <paramref name="allowPort" />é maior que 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultPort">
      <MemberSignature Language="C#" Value="public static readonly int DefaultPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 DefaultPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém o valor usado para representar a porta padrão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar um <xref:System.Security.Policy.CodeConnectAccess> objeto que tem a porta padrão para um esquema especificado, use esse campo como o `allowPort` parâmetro o <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> construtor.  
  
 O valor desse campo é -3.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Security.Policy.CodeConnectAccess> objeto que especifica o FTP para o esquema e a porta padrão para FTP.  
  
 [!code-cpp[NclCodeGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#1)]
 [!code-csharp[NclCodeGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">O objeto a ser comparado ao atual <see cref="T:System.Security.Policy.CodeConnectAccess" /> objeto.</param>
        <summary>Retorna um valor que indica se dois <see cref="T:System.Security.Policy.CodeConnectAccess" /> representar o mesmo esquema e a porta.</summary>
        <returns>
          <see langword="true" />Se os dois objetos representarem o mesmo esquema e uma porta. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dois <xref:System.Security.Policy.CodeConnectAccess> objetos são iguais se seus <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> e <xref:System.Security.Policy.CodeConnectAccess.Port%2A> valores de propriedade são iguais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serve como uma função de hash para um tipo específico.</summary>
        <returns>Um código hash do <see cref="T:System.Object" /> atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginPort">
      <MemberSignature Language="C#" Value="public static readonly int OriginPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 OriginPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém o valor usado para representar o valor da porta no URI de origem do código.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar um <xref:System.Security.Policy.CodeConnectAccess> objeto que tem a mesma porta como a porta na evidência de URL do código em execução, use este campo como o `allowPort` parâmetro o <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> construtor.  
  
 O valor desse campo é -4.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Security.Policy.CodeConnectAccess> objeto que especifica a porta de origem e de esquema HTTP.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string OriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém o valor usado para representar o esquema de URL em que o código foi originada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não use esse campo com o <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> construtor. Em vez disso, use o <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> método.  
  
 O valor desse campo é "$origin".  
  
   
  
## Examples  
 O exemplo de código a seguir exibe o valor desse campo.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a porta representada pela instância atual.</summary>
        <value>Um <see cref="T:System.Int32" /> valor que identifica uma porta de computador usada em conjunto com o <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> propriedade.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de porta estão entre 0 e 65.535. O valor da porta é especificado quando você cria uma instância do <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir o valor dessa propriedade.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o esquema URI representado pela instância atual.</summary>
        <value>Um <see cref="T:System.String" /> que identifica um esquema URI, convertido em minúsculas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de esquema é especificado quando você cria uma instância de <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir o valor dessa propriedade.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
