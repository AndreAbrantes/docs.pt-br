<Type Name="ValidationService" FullName="System.Activities.Presentation.Validation.ValidationService">
  <TypeSignature Language="C#" Value="public class ValidationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Validation.ValidationService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a funcionalidade necessária para validar um designer de atividade de fluxo de trabalho enquanto ele está sendo editado e fornecer os resultados do processo de validação.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationService (System.Activities.Presentation.EditingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.EditingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Validation.ValidationService.#ctor(System.Activities.Presentation.EditingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que contém informações de contexto de estado temporário e permanente sobre uma instância de designer.</param>
        <summary>Cria uma nova instância do <see cref="T:System.Activities.Presentation.Validation.ValidationService" /> que usa informações de contexto de estado temporário e permanente sobre um designer de atividade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estado permanente, o que é uma lista de serviços em execução no designer, e estado transitório, o que é um conjunto de itens atualmente selecionados são exemplos do que pode ser incluído no objeto de informações de estado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToError">
      <MemberSignature Language="C#" Value="public void NavigateToError (System.Activities.Presentation.Validation.ValidationErrorInfo validationErrorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToError(class System.Activities.Presentation.Validation.ValidationErrorInfo validationErrorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Validation.ValidationService.NavigateToError(System.Activities.Presentation.Validation.ValidationErrorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorInfo" Type="System.Activities.Presentation.Validation.ValidationErrorInfo" />
      </Parameters>
      <Docs>
        <param name="validationErrorInfo">As informações do erro de validação.</param>
        <summary>Move o foco do teclado para o local de superfície de trabalho de um erro em uma atividade.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToError">
      <MemberSignature Language="C#" Value="public void NavigateToError (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToError(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Validation.ValidationService.NavigateToError(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Um número de identificação do erro.</param>
        <summary>Move o foco do teclado para o local de superfície de trabalho de um erro em uma atividade.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnValidationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Validation.ValidationService.OnValidationCompleted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aciona um novo evento de validação foi concluída.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Activities.Validation.ValidationSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Validation.ValidationSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Validation.ValidationService.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Validation.ValidationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações para a validação da árvore de atividade atual</summary>
        <value>Um objeto que contém as configurações de validação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Configurações de validação de configurar problemas, como o tipo de validação é executada, o local de namespace do esquema, tipos de dados, o que é permitido ou não permitido e outras condições.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWorkflow">
      <MemberSignature Language="C#" Value="public void ValidateWorkflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWorkflow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Validation.ValidationService.ValidateWorkflow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoca a validação de uma árvore de atividade.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
