<Type Name="IContract" FullName="System.AddIn.Contract.IContract">
  <TypeSignature Language="C#" Value="public interface IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa a interface base de todos os contratos que são usados para comunicação entre os componentes atualizados de forma independente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.AddIn.Contract.IContract> interface define um contrato que atualizadas independentemente de componentes, como um aplicativo e um suplemento, pode usar para se comunicar. Componentes podem usar <xref:System.AddIn.Contract.IContract> se comuniquem através do processo ou limites de domínio de aplicativo, ou para se comunicar com outros componentes no mesmo processo ou domínio de aplicativo. <xref:System.AddIn.Contract.IContract>finalidade semelhante para componentes criados usando o .NET Framework, como o `IUnknown` serve de interface para os componentes criados usando COM. Para determinar se um objeto que implementa um contrato específico, use o <xref:System.AddIn.Contract.IContract.QueryContract%2A> método.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.AcquireLifetimeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Especifica o contrato está acessível ao cliente até que o cliente revoga o contrato.</summary>
        <returns>Um valor, também conhecido como um token de tempo de vida, que identifica o cliente que adquiriu o contrato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os clientes de um objeto que implementa <xref:System.AddIn.Contract.IContract> chamar o <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> método para notificar o objeto que o cliente necessita de acesso para o contrato. Um <xref:System.AddIn.Contract.IContract> é garantido para ser usado como pelo menos um token de tempo de vida que ele passado para um cliente não foi revogado.  
  
 Para revogar um contrato, chamada de clientes a <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.GetRemoteHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um código hash para o <see cref="T:System.AddIn.Contract.IContract" />.</summary>
        <returns>Um código hash para o <see cref="T:System.AddIn.Contract.IContract" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.QueryContract(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier">Uma cadeia de caracteres que identifica o contrato que está sendo solicitado.</param>
        <summary>Retorna um contrato que é implementado por este contrato.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.IContract" /> que representa um contrato que um cliente está solicitando o contrato atual. <see langword="null" /> se o contrato atual não oferece suporte para o contrato que é solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.AddIn.Contract.IContract.QueryContract%2A> permite que o método <xref:System.AddIn.Contract.IContract> objetos expor outros contratos. <xref:System.AddIn.Contract.IContract.QueryContract%2A>tem uma finalidade semelhante do `IUnknown.QueryInterface` método COM.  
  
 O formato das cadeias de caracteres usada para identificar contratos é definido pelo <xref:System.AddIn.Contract.IContract> implementação. É recomendável que você use o <xref:System.Type.AssemblyQualifiedName%2A> do contrato que está sendo consultado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">O contrato a ser comparado com esse <see cref="T:System.AddIn.Contract.IContract" />.</param>
        <summary>Indica se o contrato especificado é igual a este <see cref="T:System.AddIn.Contract.IContract" />.</summary>
        <returns>
          <see langword="true" />Se <paramref name="contract" /> é igual a este <see cref="T:System.AddIn.Contract.IContract" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RemoteToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma representação de cadeia de caracteres do atual <see cref="T:System.AddIn.Contract.IContract" />.</summary>
        <returns>Uma representação de cadeia de caracteres do atual <see cref="T:System.AddIn.Contract.IContract" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">Um valor, também conhecido como um token de tempo de vida, que identifica o cliente que está revogando o contrato.</param>
        <summary>Especifica que o contrato não está mais acessível para um cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os clientes de um objeto que implementa <xref:System.AddIn.Contract.IContract> chamar o <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> método para notificar o objeto que o cliente não precisa mais o contrato. Um <xref:System.AddIn.Contract.IContract> é garantido para ser usado como pelo menos um token de tempo de vida que ele passado para um cliente não foi revogado.  
  
 Para adquirir um contrato, chamada de clientes a <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
