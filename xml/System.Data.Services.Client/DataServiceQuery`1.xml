<Type Name="DataServiceQuery&lt;TElement&gt;" FullName="System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;">
  <TypeSignature Language="C#" Value="public class DataServiceQuery&lt;TElement&gt; : System.Data.Services.Client.DataServiceQuery, System.Collections.Generic.IEnumerable&lt;TElement&gt;, System.Linq.IQueryable&lt;TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceQuery`1&lt;TElement&gt; extends System.Data.Services.Client.DataServiceQuery implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceQuery`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Services.Client.DataServiceQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TElement">O tipo de resultados retornados pela consulta.</typeparam>
    <summary>Representa uma solicitação de consulta simples para um serviço de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nenhum construtor público é definido nessa classe. Instâncias de objetos são criadas usando <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> ou <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> no <xref:System.Data.Services.Client.DataServiceContext> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddQueryOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; AddQueryOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; AddQueryOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.AddQueryOption(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O valor de cadeia de caracteres que contém o nome da opção de cadeia de caracteres de consulta para adicionar.</param>
        <param name="value">O objeto que contém o valor da opção de cadeia de caracteres de consulta.</param>
        <summary>Cria um novo <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> com a opção de consulta definida no URI gerado pela consulta retornada.</summary>
        <returns>Uma nova consulta que inclui a opção de consulta solicitada adicionada à URI de consulta fornecido</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As opções de consulta são adicionadas ao URI resultante usando `?name=value&name2=value2`... sintaxe onde o nome mapeia diretamente para o `name` parâmetro e o `value` é obtido chamando ToString no `value` parâmetro. O `name` começa com `$`.  
  
 Não[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] sintaxe não começa com `$`. Não[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] opções de consulta podem ser adicionadas usando esse método. É permitido adicionar a mesma opção de consulta duas vezes se a opção não é um [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] opção de consulta. Se uma opção de consulta é adicionada, que já está presente no URI de base, uma exceção será lançada.  
  
   
  
## Examples  
 A exemplo a seguir mostra um <xref:System.Data.Services.Client.DataServiceQuery%601> que é usado com sequencial <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A> chamadas de método para retornar apenas os pedidos com um custo de frete de mais de US $30 e ordenar os resultados, a data de remessa em ordem decrescente.  
  
 [!code-csharp[Astoria Northwind Client#AddQueryOptions](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addqueryoptions)]
 [!code-vb[Astoria Northwind Client#AddQueryOptions](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addqueryoptions)]  
  
 O exemplo a seguir mostra como para compor uma consulta LINQ que é equivalente à consulta anterior usado <xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A>.  
  
 [!code-csharp[Astoria Northwind Client#AddQueryOptionsLinq](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addqueryoptionslinq)]
 [!code-vb[Astoria Northwind Client#AddQueryOptionsLinq](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addqueryoptionslinq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.BeginExecute(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">O delegado a ser invocado quando a operação for concluída.</param>
        <param name="state">Objeto usado para transferir o estado entre o início da operação e o retorno de chamada definido pelo definidos pelo usuário <c>retorno de chamada</c>.</param>
        <summary>Inicia uma operação de rede assíncrona que executa a consulta representada por esta instância do objeto.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que representa o status da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o tipo do objeto usado no modelo para criar o <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instância.</summary>
        <value>Retorna <see cref="T:System.Type" /> que representa o tipo usado no modelo quando a consulta é criada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtém o tipo representado por T em métodos genéricos: <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A> ou <xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; EndExecute(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.EndExecute(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">A solicitação de consulta assíncrona pendente.</param>
        <summary>Termina uma solicitação de consulta assíncrona para um serviço de dados.</summary>
        <returns>Retorna um <see cref="T:System.Collections.Generic.IEnumerable`1" /> que contém os resultados da operação de consulta.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">Quando o serviço de dados retorna um HTTP 404: erro de recurso não encontrado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.Execute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a consulta e retorna os resultados como uma coleção que implementa <see langword="IEnumerable" />.</summary>
        <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> no qual <paramref name="T" /> representa o tipo dos resultados da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando a iteração pela coleção retornada, se um objeto for encontrado no fluxo de entrada que não é possível desserializar a uma instância de `T` um <xref:System.NotSupportedException> é gerada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">Quando o serviço de dados retorna um HTTP 404: erro de recurso não encontrado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; Expand (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; Expand(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.Expand(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Um valor de cadeia de caracteres que contém o URI de solicitação.</param>
        <summary>Cria um novo <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> com a opção de expandir definida no URI gerado pela consulta retornada.</summary>
        <returns>Uma nova consulta que inclui a solicitação <see langword="$expand" /> opção adicionada à URI de consulta fornecido de consulta.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa uma expressão que contém a consulta para o serviço de dados.</summary>
        <value>Um <see cref="T:System.Linq.Expressions.Expression" /> objeto que representa a consulta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TElement&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TElement&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a consulta e retorna os resultados como uma coleção.</summary>
        <returns>Um enumerador com tipo sobre os resultados no qual <paramref name="TEntity" /> representa o tipo dos resultados da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A> método é chamado, o <xref:System.Data.Services.Client.DataServiceQuery%601> é executada em relação ao serviço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTotalCount">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;TElement&gt; IncludeTotalCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!TElement&gt; IncludeTotalCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.IncludeTotalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Solicitações que a contagem de todas as entidades na entidade definida retornadas em linha com os resultados da consulta.</summary>
        <returns>Um novo <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> objeto que tem a opção de contagem de linha definido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamando o <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> método é equivalente à, incluindo o `$inlinecount` opção na consulta de URI de consulta.  
  
   
  
## Examples  
 Este exemplo executa uma consulta depois de chamar o <xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A> método. O <xref:System.Data.Services.Client.QueryOperationResponse%601.TotalCount%2A> propriedade é usada para determinar o número de entidades retornadas pela consulta.  
  
 [!code-csharp[Astoria Northwind Client#CountAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#countallcustomers)]
 [!code-vb[Astoria Northwind Client#CountAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#countallcustomers)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa a instância do provedor de consulta.</summary>
        <value>Um <see cref="T:System.Linq.IQueryProvider" /> que representa o provedor de fonte de dados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceQuery`1.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obter o URI da consulta.</summary>
        <value>O URI da solicitação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a consulta e retorna os resultados como uma coleção.</summary>
        <returns>Um enumerador sobre os resultados da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Data.Services.Client.DataServiceQuery%601.System%23Collections%23IEnumerable%23GetEnumerator%2A> método é chamado, o <xref:System.Data.Services.Client.DataServiceQuery%601> é executada em relação ao serviço.  
  
 <xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A>Retorna uma enumeração na primeira vez que ele é chamado. Retorna null em chamadas sucessivas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceQuery`1.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Representa o URI da consulta para o serviço de dados.</summary>
        <returns>Um URI como cadeia de caracteres que representa a consulta para o serviço de dados para este <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instância.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
