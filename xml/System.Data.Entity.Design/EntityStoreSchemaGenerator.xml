<Type Name="EntityStoreSchemaGenerator" FullName="System.Data.Entity.Design.EntityStoreSchemaGenerator">
  <TypeSignature Language="C#" Value="public sealed class EntityStoreSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityStoreSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Responsáveis por carregar informações de esquema de banco de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualquer conteúdo aqui será atualizado; por favor, não adicione o material aqui.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStoreSchemaGenerator (string providerInvariantName, string connectionString, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName, string connectionString, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">O nome invariável de um provedor.</param>
        <param name="connectionString">A conexão usada para abrir o banco de dados.</param>
        <param name="namespaceName">O nome do namespace para a linguagem de definição de esquema do repositório (SSDL).</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">O nome invariável de um provedor.</param>
        <param name="connectionString">A conexão para a conexão de provedores.</param>
        <summary>Cria uma EntityConnection carregada com os metadados de provedores para o esquema de repositório.</summary>
        <returns>Uma EntityConnection que pode consultar o ConceptualSchemaDefinition para o provedor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">O nome invariável do provedor.</param>
        <param name="connectionString">A conexão para a conexão de provedores.</param>
        <param name="targetEntityFrameworkVersion">A versão do Entity Framework interna que está sendo direcionada.</param>
        <summary>Cria uma EntityConnection carregada com os metadados de provedores para o esquema de repositório. Observe que o parâmetro targetEntityFrameworkVersion usa números de versão internos EntityFramework conforme descrito no <see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> classe.</summary>
        <returns>Uma EntityConnection que pode consultar o ConceptualSchemaDefinition para o provedor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o modelo de armazenamento EntityContainer que foi criado.</summary>
        <value>O modelo de armazenamento EntityContainer que foi criado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o sinalizador para gerar propriedades de chave estrangeira em um modelo de armazenamento.</summary>
        <value>
          <see langword="True" />Se as propriedades de chave estrangeira são geradas no modelo de armazenamento. Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gera armazenar metadados e retorna qualquer erro de esquema.</summary>
        <returns>A coleção de objetos de erro do esquema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="filters">Um EntityStoreSchemaFilterEntry que especifica qual banco de dados de objetos para permitir ou excluir durante a geração.</param>
        <summary>Gera armazenar metadados e retorna qualquer erro de esquema.</summary>
        <returns>A coleção de objetos de erro do esquema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="filters">Um EntityStoreSchemaFilterEntry que especifica qual banco de dados de objetos para permitir ou excluir durante a geração.</param>
        <param name="targetEntityFrameworkVersion">A propriedade de EntityFrameworkVersions que corresponde à versão do destino do Entity Framework.</param>
        <summary>Gera a linguagem de definição de esquema do repositório (SSDL) e retorna qualquer erro de esquema.</summary>
        <returns>A coleção de objetos de erro do esquema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StoreItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o StoreItemCollection que foi criado.</summary>
        <value>O criado <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> objeto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">O nome do arquivo de saída.</param>
        <summary>Grava a linguagem de definição de esquema do repositório gerado (SSDL) em um arquivo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O XmlWriter no qual o SSDL é gravado.</param>
        <summary>Grava um objeto XmlWriter a linguagem de definição de esquema do repositório gerado (SSDL).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
