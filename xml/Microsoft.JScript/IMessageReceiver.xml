<Type Name="IMessageReceiver" FullName="Microsoft.JScript.IMessageReceiver">
  <TypeSignature Language="C#" Value="public interface IMessageReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageReceiver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IMessageReceiver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("F062C7FB-53BF-4f0d-B0F6-D66C5948E63F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define métodos que recebe a saída de um mecanismo de script. Essa interface atua como um objeto de retorno de chamada para capturar a saída que seria, caso contrário, vá para o console.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public void Message (string strValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Message(string strValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IMessageReceiver.Message(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strValue">A saída para capturar.</param>
        <summary>Quando implementada em uma classe, captura a saída especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma implementação desse método pode enviar a saída para qualquer local desejado. Por exemplo, ele pode enviar a saída para um arquivo, armazená-lo em uma estrutura de dados ou imprimi-lo em um console.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
