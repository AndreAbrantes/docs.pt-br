<Type Name="IEngine2" FullName="Microsoft.JScript.IEngine2">
  <TypeSignature Language="C#" Value="public interface IEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IEngine2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BFF6C97F-0705-4394-88B8-A03A4B8B4CD7")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define a funcionalidade adicional que é necessária para um host IActiveScript. Implementado pelo <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> mecanismo.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">O domínio de aplicativo no qual criar o novo mecanismo.</param>
        <summary>Quando implementada em uma classe, cria um novo mecanismo idêntico que é executado em um novo domínio de aplicativo com o mesmo estado compilado e itens nomeados. Isso não é implementado no JScript.</summary>
        <returns>O novo mecanismo.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.CompileEmpty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, aciona a compilação do estado no momento no mecanismo. Todas as referências, itens de código, itens de host e recursos são executados por meio do compilador.</summary>
        <returns>
          <see langword="true" />Se a compilação for bem-sucedida, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.ConnectEvents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, se comunica com o mecanismo que ele possa se conectar a qualquer fonte de evento registrado que têm eventos para os manipuladores de evento global. Isso não é implementado no JScript.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.DisconnectEvents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, instrui o mecanismo para remover fontes de evento de manipuladores de eventos. Isso não é implementado no JScript.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, obtém o assembly compilado que é produzido pela etapa de compilação.</summary>
        <returns>O assembly compilado.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetGlobalScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, obtém o objeto de escopo global.</summary>
        <returns>O objeto de escopo global.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementado em uma classe, obtém o módulo de código do assembly compilado.</summary>
        <returns>O módulo de código do assembly compilado.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">O moniker da raiz do mecanismo de script. Para obter mais informações, consulte <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</param>
        <param name="site">O host implementado <see cref="T:Microsoft.Vsa.IVsaSite" /> objeto que é usado pelo mecanismo de script para se comunicar com o host. Para obter mais informações, consulte <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</param>
        <summary>Quando implementada em uma classe, inicializa o <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Interrupt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, chama <see cref="M:System.Threading.Thread.Abort" /> no thread que está executando o código de script.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não deve ser chamado no thread que é usado para executar o código. Se você fizer isso, você pode interromper seu próprio thread.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome de um item adicionado que fornece eventos.</param>
        <summary>Quando implementada em uma classe, especifica o nome de um item que está marcado como uma fonte de evento, para que o <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> método pode determinar quais eventos para se conectar. Isso não é implementado no JScript.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Restart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, esse método é chamado pelo depurador quando é necessário redefinir o mecanismo para um estado limpo antes de avaliar uma expressão new. O método redefine os itens adicionados e o escopo global para seu estado original.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">O domínio de aplicativo no qual executar o código compilado.</param>
        <summary>Quando implementada em uma classe, executa o código compilado no domínio do aplicativo especificado. Isso não é implementado em JScript como mecanismos gerenciados não dão suporte a código em execução em domínios de aplicativo fornecido pelo usuário.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RunEmpty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe, executa o código compilado no atual <see cref="T:System.AppDomain" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
