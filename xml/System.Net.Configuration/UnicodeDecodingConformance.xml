<Type Name="UnicodeDecodingConformance" FullName="System.Net.Configuration.UnicodeDecodingConformance">
  <TypeSignature Language="C#" Value="public enum UnicodeDecodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeDecodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeDecodingConformance" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Controla como os caracteres Unicode são interpretados pelo <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> métodos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre como caracteres Unicode devem ser codificada em HTML, consulte [usar o caractere de escape na marcação e CSS](http://go.microsoft.com/fwlink/?LinkId=256607).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use o comportamento automático. O comportamento de decodificação depende do Framework de destino do aplicativo atual. Para [!INCLUDE[net_v45](~/includes/net-v45-md.md)] e posterior, a codificação de Unicode decodificação é estrita.</summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use o comportamento compatível. Especifica que os dados de entrada não são verificados para validade antes de ser decodificado. Por exemplo, uma cadeia de entrada "&amp;amp; #xD84C;" seria decodificar como U + D84C, que é um substituto não emparelhado. Além disso, o decodificador não compreender os pontos de código em SMP estão representadas como substitutos codificada em HTML, portanto o inputstring "&amp;#144308;" resultaria na cadeia de caracteres de saída "&amp;#144308;".</summary>
      </Docs>
    </Member>
    <Member MemberName="Loose">
      <MemberSignature Language="C#" Value="Loose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Loose = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use comportamento flexível. Semelhante ao <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /> em que não há nenhuma verificação de validade, mas o decodificador também compreenda pontos de código. A cadeia de caracteres de entrada "&amp;#144308;" seria decodificar corretamente para o caractere U + 233B4. Essa opção destina-se para fornecer interoperabilidade máxima, quando o decodificador não sabe qual formato que o provedor está usando para gerar a cadeia de caracteres codificada.</summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use comportamento estrito. Especifica que os dados codificados de entrada são verificados para validade antes de ser decodificado. Por exemplo, uma cadeia de entrada "&amp;#144308;" seria decodificar como U + 233B4, mas uma cadeia de caracteres de entrada de "&amp;#xD84C;&amp; #xDFB4;"falharia decodificar corretamente. Já decodificar dados na cadeia de caracteres não são verificados para validade. Por exemplo, uma cadeia de caracteres de entrada de "\ud800" resultará em uma cadeia de caracteres de saída de "\ud800", como o substituto decodificado já é ignorado durante a decodificação, apesar de não emparelhado.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
