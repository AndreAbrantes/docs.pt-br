<Type Name="BindableAttribute" FullName="System.ComponentModel.BindableAttribute">
  <TypeSignature Language="C#" Value="public sealed class BindableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BindableAttribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica se um membro é normalmente usado para associação. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar esse atributo para vários membros, propriedades normalmente, em um controle.  
  
 Se uma propriedade tiver sido marcada com o <xref:System.ComponentModel.BindableAttribute> definida como `true`, em seguida, uma notificação de alteração de propriedade deve ser gerada para essa propriedade. Isso significa que, se o <xref:System.ComponentModel.BindableAttribute.Bindable%2A> é de propriedade <xref:System.ComponentModel.BindableAttribute.Yes>, em seguida, há suporte para associação de dados bidirecional. Se <xref:System.ComponentModel.BindableAttribute.Bindable%2A> é <xref:System.ComponentModel.BindableAttribute.No>, você ainda pode associar à propriedade, mas não devem ser mostrado no conjunto de propriedades padrão para associar, pois isso pode ou não pode gerar uma notificação de alteração de propriedade.  
  
> [!NOTE]
>  Quando você marca uma propriedade com <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> definida como `true`, o valor desse atributo é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.Yes>. Para uma propriedade é marcada com o <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> definida como `false`, o valor é <xref:System.ComponentModel.BindableAttribute.No>. Portanto, para verificar se o valor desse atributo no seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType> ou <xref:System.ComponentModel.BindableAttribute.No?displayProperty=nameWithType>.  
  
> [!CAUTION]
>  Você pode usar esse atributo em tempo de design apenas. Nada impede a associação para qualquer propriedade em tempo de execução.  
  
 Para obter mais informações, consulte [Atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir marca uma propriedade conforme apropriado para associar dados ao.  
  
 [!code-cpp[Classic BindableAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindableAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic BindableAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute Example/VB/source.vb#1)]  
  
 O exemplo de código a seguir mostra como verificar o valor de <xref:System.ComponentModel.BindableAttribute> para `MyProperty`. Primeiro, o código obtém um <xref:System.ComponentModel.PropertyDescriptorCollection> com todas as propriedades do objeto. Em seguida, o código de índices para o <xref:System.ComponentModel.PropertyDescriptorCollection> obter `MyProperty`. Por fim, o código retorna os atributos para essa propriedade e os salva na variável de atributos. O exemplo de código apresenta duas maneiras diferentes para verificar o valor da <xref:System.ComponentModel.BindableAttribute>. No segundo fragmento de código, o exemplo chama o <xref:System.Object.Equals%2A> método. No último fragmento de código, o exemplo usa o <xref:System.ComponentModel.BindableAttribute.Bindable%2A> propriedade para verificar o valor.  
  
 [!code-cpp[Classic BindableAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic BindableAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic BindableAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute Example/VB/source.vb#2)]  
  
 Se você marcou uma classe com o <xref:System.ComponentModel.BindableAttribute>, use o seguinte exemplo de código para verificar o valor.  
  
 [!code-cpp[Classic BindableAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic BindableAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic BindableAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindableAttribute (bool bindable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bindable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bindable">
          <see langword="true" />usar a propriedade de associação; Caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.BindableAttribute" /> classe com um valor booliano.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você marca uma propriedade com o <xref:System.ComponentModel.BindableAttribute> definida como `true`, o valor desse atributo é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.Yes>. Para uma propriedade é marcada com o <xref:System.ComponentModel.BindableAttribute> definida como `false`, o valor é <xref:System.ComponentModel.BindableAttribute.No>. Portanto, para verificar se o valor desse atributo no seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType> ou <xref:System.ComponentModel.BindableAttribute.No?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir marca uma propriedade conforme apropriado para associar dados ao. Este exemplo de código cria um novo <xref:System.ComponentModel.BindableAttribute>, define seu valor como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType>e o associa à propriedade.  
  
 [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindableAttribute.BindableAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindableAttribute (System.ComponentModel.BindableSupport flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.BindableSupport flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.BindableSupport" />
      </Parameters>
      <Docs>
        <param name="flags">Um dos valores de <see cref="T:System.ComponentModel.BindableSupport" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.BindableAttribute" /> classe com uma da <see cref="T:System.ComponentModel.BindableSupport" /> valores.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você marca uma propriedade com o <xref:System.ComponentModel.BindableAttribute> definida como `true`, o valor desse atributo é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.Yes>. Para uma propriedade é marcada com o <xref:System.ComponentModel.BindableAttribute> definida como `false`, o valor é <xref:System.ComponentModel.BindableAttribute.No>. Portanto, para verificar se o valor desse atributo no seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType> ou <xref:System.ComponentModel.BindableAttribute.No?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir marca uma propriedade conforme apropriado para associar dados ao. Este exemplo de código cria um novo <xref:System.ComponentModel.BindableAttribute>, define seu valor como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType>e o associa à propriedade.  
  
 [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindableAttribute.BindableAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute.BindableAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bindable, valuetype System.ComponentModel.BindingDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindable" Type="System.Boolean" />
        <Parameter Name="direction" Type="System.ComponentModel.BindingDirection" />
      </Parameters>
      <Docs>
        <param name="bindable">
          <see langword="true" />usar a propriedade de associação; Caso contrário, <see langword="false" />.</param>
        <param name="direction">Um dos valores de <see cref="T:System.ComponentModel.BindingDirection" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.BindableAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.BindableSupport flags, valuetype System.ComponentModel.BindingDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.BindableSupport" />
        <Parameter Name="direction" Type="System.ComponentModel.BindingDirection" />
      </Parameters>
      <Docs>
        <param name="flags">Um dos valores de <see cref="T:System.ComponentModel.BindableSupport" />.</param>
        <param name="direction">Um dos valores de <see cref="T:System.ComponentModel.BindingDirection" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.BindableAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindable">
      <MemberSignature Language="C#" Value="public bool Bindable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Bindable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindableAttribute.Bindable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica que uma propriedade normalmente é usada para associação.</summary>
        <value>
          <see langword="true" /> se a propriedade normalmente for usada para associação; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O seguinte código de exemplo verifica para ver se `MyProperty` for associável. Primeiro, o código obtém os atributos para `MyProperty` fazendo o seguinte:  
  
-   Recuperando um <xref:System.ComponentModel.PropertyDescriptorCollection> com todas as propriedades do objeto.  
  
-   A indexação para o <xref:System.ComponentModel.PropertyDescriptorCollection> obter `MyProperty`.  
  
-   Salvando os atributos para essa propriedade na variável de atributos.  
  
 Em seguida, o código define `myAttribute` para o valor da <xref:System.ComponentModel.BindableAttribute> no <xref:System.ComponentModel.AttributeCollection> e verifica se a propriedade associável.  
  
 Para este exemplo de código ser executado, você deve fornecer o nome de assembly totalmente qualificado. Para obter informações sobre como obter o nome totalmente qualificado do assembly, consulte  
  
 [Nomes de assembly](~/docs/framework/app-domains/assembly-names.md).  
  
 [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindableAttribute.Bindable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindableAttribute.Bindable Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindableAttribute.Bindable Example/CS/source.cs#1)]
 [!code-vb[Classic BindableAttribute.Bindable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindableAttribute.Bindable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BindableAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BindableAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.BindableAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica o valor padrão para o <see cref="T:System.ComponentModel.BindableAttribute" />, que é <see cref="F:System.ComponentModel.BindableAttribute.No" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você marca uma propriedade com esse valor, o <xref:System.ComponentModel.BindableAttribute> é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.No>. Portanto, quando você deseja verificar se o atributo é definido como esse valor em seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.BindingDirection Direction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.BindingDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BindableAttribute.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica a direção ou instruções de associação de dados desta propriedade.</summary>
        <value>A direção da associação de dados desta propriedade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser comparado.</param>
        <summary>Determina se dois objetos <see cref="T:System.ComponentModel.BindableAttribute" /> são iguais.</summary>
        <returns>
          <see langword="true" />Se especificado <see cref="T:System.ComponentModel.BindableAttribute" /> é igual à atual <see cref="T:System.ComponentModel.BindableAttribute" />; <see langword="false" /> se não for igual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serve como uma função de hash para o <see cref="T:System.ComponentModel.BindableAttribute" /> classe.</summary>
        <returns>Um código hash do <see cref="T:System.ComponentModel.BindableAttribute" /> atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se este atributo é o padrão.</summary>
        <returns>
          <see langword="true" />Se o atributo é o valor padrão para essa classe de atributo; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BindableAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BindableAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.BindableAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica que uma propriedade não é normalmente usada para associação. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.BindableAttribute.No> campo é a configuração padrão para o <xref:System.ComponentModel.BindableAttribute>.  
  
 Quando você marca uma propriedade com o <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> construtor do valor `false,` o valor desse atributo é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.No>. Portanto, para verificar se o atributo é definido como esse valor em seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute.No?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BindableAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BindableAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.BindableAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica que uma propriedade é normalmente usada para associação. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você marca uma propriedade com o <xref:System.ComponentModel.BindableAttribute.%23ctor%2A> construtor do valor `true`, o valor da <xref:System.ComponentModel.BindableAttribute> é definido como o membro constante <xref:System.ComponentModel.BindableAttribute.Yes>. Portanto, para verificar se o atributo é definido como esse valor em seu código, você deve especificar o atributo como <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
