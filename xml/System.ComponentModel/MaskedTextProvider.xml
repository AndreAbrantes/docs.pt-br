<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa um serviço de análise da máscara que pode ser usado por qualquer número de controles que dão suporte a máscara, como o controle <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.MaskedTextBox> controle contém uma máscara, composto de caracteres literais e formatação de elementos, o que ele verifica todas as entradas de usuário contra. Em vez de associar permanentemente um mecanismo de análise de máscara específico com <xref:System.Windows.Forms.MaskedTextBox>, formulários do Windows fornece como um serviço separado, representado pelo <xref:System.ComponentModel.MaskedTextProvider> classe, que define a sintaxe da linguagem de mascaramento discutida na documentação para o <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> propriedade.  
  
 Muitos dos membros a <xref:System.Windows.Forms.MaskedTextBox> classe se referir a implementação para membros nomeados da mesma forma do associado <xref:System.ComponentModel.MaskedTextProvider>. Por exemplo, o <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> propriedade o <xref:System.Windows.Forms.MaskedTextBox> classe refere-se todo o acesso ao <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> do <xref:System.ComponentModel.MaskedTextProvider> classe.  
  
 O mecanismo de análise de máscara usado pelo <xref:System.ComponentModel.MaskedTextProvider> é modelada após o controle de edição mascarada incluído no Microsoft Visual Basic version 6. Sua linguagem de mascaramento é descrita na documentação para o <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade.  
  
 As cadeias de caracteres distintas três procedimentos envolvidas com a <xref:System.ComponentModel.MaskedTextProvider> classe.  
  
|Nome de cadeia de caracteres|Descrição|  
|-----------------|-----------------|  
|Caractere de entrada ou de cadeia de caracteres|Representa os caracteres usados como aplicado em relação a máscara de entrada. Na realidade, a cadeia de caracteres de entrada pode ser composta de várias operações de entrada, incluindo <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, e <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>. Portanto, a cadeia de caracteres de entrada não pode ser acessada diretamente. No entanto, aspectos de manipulação de cadeia de caracteres de entrada estarão disponíveis através de <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> e <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, e <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propriedades.|  
|Máscara|Representa a formatação usada para transformar a cadeia de caracteres de entrada em cadeia de caracteres formatada de máscara de entrada. Essa cadeia de caracteres é definida no <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> e acessados principalmente Embora o <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade. Características da máscara também estão disponíveis por meio de outros membros, como o <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, e <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedades.|  
|Cadeia de caracteres formatada|Representa a cadeia de caracteres que é gerada quando a máscara inteira é aplicada para a cadeia de caracteres de entrada. A cadeia de caracteres formatada pode ser consultada com muitos membros da classe, incluindo <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>e assim por diante. O valor total da cadeia de caracteres formatada é proveniente do <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos.|  
  
> [!NOTE]
>  A cadeia de caracteres de entrada pode representar a entrada direta do usuário, como no caso do <xref:System.Windows.Forms.MaskedTextBox>, ou pode ser gerado por outros processos não diretamente associados a operações de entrada/saída do usuário.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="restrictToAscii">
          <see langword="true" />para restringir a entrada a caracteres ASCII compatível. Caso contrário, <see langword="false" /> para permitir que o conjunto inteiro de Unicode.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada e o valor de restrição de ASCII.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> que é usado para definir caracteres separadores sensíveis à região.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada e a cultura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="passwordChar">Um <see cref="T:System.Char" /> que será exibida para os caracteres digitados em uma cadeia de caracteres de senha.</param>
        <param name="allowPromptAsInput">
          <see langword="true" />para permitir que o caractere de prompt como entrada. Caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada, o caractere de senha e o valor de uso do prompt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> que é usado para definir caracteres separadores sensíveis à região.</param>
        <param name="restrictToAscii">
          <see langword="true" />para restringir a entrada a caracteres ASCII compatível. Caso contrário, <see langword="false" /> para permitir que o conjunto inteiro de Unicode.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada, a cultura e o valor de restrição de ASCII.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> que é usado para definir caracteres separadores sensíveis à região.</param>
        <param name="passwordChar">Um <see cref="T:System.Char" /> que será exibida para os caracteres digitados em uma cadeia de caracteres de senha.</param>
        <param name="allowPromptAsInput">
          <see langword="true" />para permitir que o caractere de prompt como entrada. Caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada, cultura, caracteres de senha e o valor de uso do prompt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O uso desse construtor equivale exatamente ao seguinte chamada a <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">Um <see cref="T:System.String" /> que representa a máscara de entrada.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> que é usado para definir caracteres separadores sensíveis à região.</param>
        <param name="allowPromptAsInput">Um <see cref="T:System.Boolean" /> valor que especifica se o caractere de prompt deve ser permitido como um caractere de entrada válido.</param>
        <param name="promptChar">Um <see cref="T:System.Char" /> que será exibido como um espaço reservado para a entrada do usuário.</param>
        <param name="passwordChar">Um <see cref="T:System.Char" /> que será exibida para os caracteres digitados em uma cadeia de caracteres de senha.</param>
        <param name="restrictToAscii">
          <see langword="true" />para restringir a entrada a caracteres ASCII compatível. Caso contrário, <see langword="false" /> para permitir que o conjunto inteiro de Unicode.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.MaskedTextProvider" /> classe usando a máscara especificada, cultura, valor de uso do prompt, caractere de prompt, o caractere de senha e valor de restrição de ASCII.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor representa a forma sobrecarregada mais geral. O `mask` parâmetro deve estar de acordo com a linguagem de mascaramento definida pelo <xref:System.ComponentModel.MaskedTextProvider> classe, que é descrito em detalhes o <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> propriedade do <xref:System.Windows.Forms.MaskedTextBox> classe.  
  
 Porque culturas neutras não podem ser consultadas para informações específicas de cultura, o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor usará o <xref:System.Globalization.CultureInfo.GetCultures%2A> método para pesquisar a cultura não-neutra primeiro a ser usado para determinar os caracteres separadores adequado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro de máscara é <see langword="null" /> ou <see cref="F:System.String.Empty" />.  
  
 -ou-  
  
 A máscara contém um ou mais caracteres não imprimíveis.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input">Um <see cref="T:System.Char" /> valor a ser acrescentada à cadeia de caracteres formatada.</param>
        <summary>Adiciona o caractere de entrada especificado ao final da cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se o caractere de entrada foi adicionado com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> método adiciona o `input` valor para a primeira posição disponível na cadeia de caracteres formatada de caractere após a posição que foi atribuída pela última vez, que é representada pelo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade. Esse método irá falhar para qualquer um dos seguintes motivos:  
  
-   O valor de entrada, `input`, não é imprimível, ou não corresponde a seu elemento máscara correspondente.  
  
-   Há zero posições de edição disponíveis na cadeia de caracteres formatada, ou não há nenhum posições de edição disponíveis depois que a última posição de atribuído.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Um <see cref="T:System.String" /> que contém valores de caractere a ser acrescentada à cadeia de caracteres formatada.</param>
        <summary>Adiciona os caracteres na cadeia de caracteres de entrada especificada ao final da cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se todos os caracteres da cadeia de entrada foram adicionados com êxito; Caso contrário, <see langword="false" /> para indicar que nenhum caractere foram adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> método adiciona os caracteres da `input` cadeia de caracteres para a cadeia de caracteres formatada, começando com a primeira posição disponível após <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. Esse método irá falhar para qualquer um dos seguintes motivos:  
  
-   Os caracteres no valor de entrada, `input`, são não imprimível ou o valor de entrada não coincide com o elemento correspondente de máscara.  
  
-   Não há suficiente posições de edição disponíveis na cadeia de caracteres formatada depois que a última posição de atribuído.  
  
 Se esse método falhar, nenhuma adições são feitas e o método retornará `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Um <see cref="T:System.Char" /> valor a ser acrescentada à cadeia de caracteres formatada.</param>
        <param name="testPosition">A posição com base em zero na cadeia de caracteres formatada em que a tentativa foi feita para adicionar o caractere. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Adiciona o caractere de entrada especificado ao final da cadeia de caracteres formatada e, em seguida, transmite a posição e informações descritivas.</summary>
        <returns>
          <see langword="true" />Se o caractere de entrada foi adicionado com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método tenta adicionar o `input` valor para a primeira posição disponível na cadeia de caracteres formatada de caractere após a posição que foi atribuída pela última vez, que é representada pelo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade. Esse método irá falhar se todas as posições disponíveis antes da última posição atribuída. Esse método irá falhar para qualquer um dos seguintes motivos:  
  
-   O valor de entrada, `input`, não é imprimível, ou não corresponde a seu elemento máscara correspondente.  
  
-   Há zero posições de edição disponíveis na cadeia de caracteres formatada, ou não há nenhum posições de edição disponíveis depois que a última posição de atribuído.  
  
 Esse método funciona como a versão substituída colocar um único <xref:System.Char> parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, exceto que ele produz informações adicionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Um <see cref="T:System.String" /> que contém valores de caractere a ser acrescentada à cadeia de caracteres formatada.</param>
        <param name="testPosition">A posição com base em zero na cadeia de caracteres formatada em que a tentativa foi feita para adicionar o caractere. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Adiciona os caracteres na cadeia de caracteres de entrada especificada ao final da cadeia de caracteres formatada e, em seguida, gera posição e informações descritivas.</summary>
        <returns>
          <see langword="true" />Se todos os caracteres da cadeia de entrada foram adicionados com êxito; Caso contrário, <see langword="false" /> para indicar que nenhum caractere foram adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método adiciona os caracteres da `input` cadeia de caracteres para a cadeia de caracteres formatada, começando com a primeira posição disponível após <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. Esse método irá falhar para qualquer um dos seguintes motivos:  
  
-   Os caracteres no valor de entrada, `input`, são não imprimível ou o valor de entrada não coincide com o elemento correspondente de máscara.  
  
-   Não há suficiente posições de edição disponíveis na cadeia de caracteres formatada depois que a última posição de atribuído.  
  
 Se esse método falhar, nenhuma adições são feitas e o método retornará `false`.  
  
 Esse método funciona como a versão substituída colocar um único <xref:System.String> parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, exceto que ele produz informações adicionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o caractere de prompt deve ser tratado como um caractere de entrada válido ou não.</summary>
        <value>
          <see langword="true" />Se o usuário pode inserir <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> no controle; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> valor da propriedade é definido <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.  
  
 Mesmo quando <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> é `true`, o caractere de prompt deve ser válido para o local atual na máscara para ser aceita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a máscara aceita caracteres fora do conjunto de caracteres ASCII.</summary>
        <value>
          <see langword="true" />Se somente ASCII é aceita; <see langword="false" /> se <see cref="T:System.ComponentModel.MaskedTextProvider" /> pode aceitar qualquer caractere Unicode arbitrário. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> valor da propriedade é definido <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.  
  
 Se `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restringe a entrada do usuário para o conjunto de caracteres ASCII.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de posições de caractere editável que já foram atribuiu um valor de entrada.</summary>
        <value>Um <see cref="T:System.Int32" /> que contém o número de posições de caractere editável da máscara de entrada que já tiverem sido atribuídos a um valor de caractere na cadeia de caracteres formatada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O número total de posições de caractere editável, representado pelo <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade deve ser igual a soma da <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de posições de caractere editável da máscara de entrada que ainda não tenha sido atribuído um valor de entrada.</summary>
        <value>Um <see cref="T:System.Int32" /> que contém o número do caractere editável posiciona que ainda não foi atribuído um valor de caractere.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O número total de posições de caractere editável, representado pelo <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade deve ser igual a soma da <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Limpa todos os caracteres de entrada editáveis de cadeia de caracteres formatada, substituindo-os por caracteres de prompt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Clear> método reinicializa a cadeia de caracteres formatada, inserindo o caractere de prompt em todas as posições editáveis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Limpa todos os caracteres de entrada editáveis de cadeia de caracteres formatada, substituindo-os por caracteres de prompt e, em seguida, transmite informações descritivas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> método reinicializa a cadeia de caracteres formatada, inserindo o caractere de prompt em todas as posições editáveis. Ele funciona de forma equivalente para a versão substituída que não usa nenhum parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Clear>, exceto que ele produz informações adicionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma cópia das <see cref="T:System.ComponentModel.MaskedTextProvider" /> atuais.</summary>
        <returns>O <see cref="T:System.ComponentModel.MaskedTextProvider" /> objeto esse método cria, usado como um objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> método retorna uma nova cópia do atual <xref:System.ComponentModel.MaskedTextProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cultura que determina o valor dos separadores localizáveis e espaços reservados na máscara de entrada.</summary>
        <value>Um <see cref="T:System.Globalization.CultureInfo" /> que contém as informações de cultura associadas com a máscara de entrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> propriedade é definida no <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o padrão senha caractere usado obscuros entrada do usuário.</summary>
        <value>Um <see cref="T:System.Char" /> que representa o caractere de senha padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> propriedade está definida no <xref:System.ComponentModel.MaskedTextProvider> classe seja o caractere de asterisco (*).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de posições editáveis na cadeia de caracteres formatada.</summary>
        <value>Um <see cref="T:System.Int32" /> que contém o número de posições editáveis na cadeia de caracteres formatada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O número total de posições de caractere editável, representado pelo <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade deve ser igual a soma da <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades. Esse valor inclui o necessário e os caracteres editáveis opcionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um enumerador recém-criado para as posições editáveis na cadeia de caracteres formatada.</summary>
        <value>Um <see cref="T:System.Collections.IEnumerator" /> que oferece suporte à enumeração pelas posições editáveis na cadeia de caracteres formatada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em todos os acessos do <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> propriedade, um conjunto temporário de posições editáveis é criado que recuperada <xref:System.Collections.IEnumerator> opera.  
  
 Esta coleção é somente leitura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para iniciar a pesquisa.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição do primeiro atribuído posição editável após a posição especificada usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira atribuído posição editável encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres formatada é composta de caracteres editáveis e literais copiados da máscara. As posições de caractere editável serão estar ocupadas ou pelo caractere de prompt copiado da máscara se eles foram atribuídos ou com um caractere de entrada válido, se eles tiverem sido atribuídos a uma entrada.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> método é usado para pesquisar o primeiro caractere atribuído após uma direção de pesquisa e de posição especificada. O resultado posteriormente pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nesta posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> métodos são complementa deste método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa inicia.</param>
        <param name="endPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa termina.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição do primeiro atribuído editável posição entre as posições especificadas usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira atribuído posição editável encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres formatada é composta de caracteres editáveis e literais copiados da máscara. As posições de caractere editável serão estar ocupadas ou pelo caractere de prompt copiado da máscara se eles foram atribuídos ou com um caractere de entrada válido, se eles tiverem sido atribuídos a uma entrada.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere atribuído entre duas posições especificados, inclusivas, usando a direção de pesquisa especificado. O resultado posteriormente pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nesta posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> métodos são complementa deste método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para iniciar a pesquisa.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição editável após a posição especificada usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira posição editável encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método é usado para pesquisar o próximo atribuídos ou não atribuídos editável posição na cadeia de caracteres formatada após a posição especificada.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método é o complemento do método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa inicia.</param>
        <param name="endPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa termina.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição editável entre as posições especificadas usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira posição editável encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere editável entre duas posições especificados, inclusivas, usando a direção de pesquisa especificado. O resultado posteriormente pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nesta posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método é o complemento do método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para iniciar a pesquisa.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição não editável após a posição especificada usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira posição literal encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método é usado para procurar o próximo caractere literal na cadeia de caracteres formatada após a posição especificada. O resultado posteriormente pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor literal nessa posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método é o complemento do método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa inicia.</param>
        <param name="endPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa termina.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição não editável entre as posições especificadas usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição com base em zero da primeira posição literal encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere literal entre duas posições especificados, inclusivas, usando a direção de pesquisa especificado. O resultado posteriormente pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor literal nessa posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método é o complemento do método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para iniciar a pesquisa.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição editável não atribuída após a posição especificada usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição de base zero da primeira posição editável não atribuída encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres formatada é composta de caracteres editáveis e literais copiados da máscara. As posições de caractere editável serão estar ocupadas ou pelo caractere de prompt copiado da máscara se eles foram atribuídos ou com um caractere de entrada válido, se eles tiverem sido atribuídos a uma entrada.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> método é usado para pesquisar o primeiro caractere não atribuído após uma direção de pesquisa e de posição especificada. O caractere de prompt deve ocupar nessa posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> métodos são complementa deste método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa inicia.</param>
        <param name="endPosition">A posição com base em zero na cadeia de caracteres formatada onde a pesquisa termina.</param>
        <param name="direction">Um <see cref="T:System.Boolean" /> indicando que a pesquisa direção; <see langword="true" /> para realizar a pesquisa ou <see langword="false" /> para pesquisar para trás.</param>
        <summary>Retorna a posição da primeira posição editável não atribuída entre as posições especificadas usando a direção de pesquisa especificado.</summary>
        <returns>Se for bem-sucedido, um <see cref="T:System.Int32" /> representando a posição de base zero da primeira posição editável não atribuída encontrada; caso contrário, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres formatada é composta de caracteres editáveis e literais copiados da máscara. As posições de caractere editável serão estar ocupadas ou pelo caractere de prompt copiado da máscara se eles foram atribuídos ou com um caractere de entrada válido, se eles tiverem sido atribuídos a uma entrada.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere não atribuído entre duas posições especificados, inclusivas, usando a direção de pesquisa especificado. O caractere de prompt deve ocupar nessa posição.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> métodos são complementa deste método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> valor normalmente é obtido como um parâmetro de saída de uma operação anterior.</param>
        <summary>Determina se o especificado <see cref="T:System.ComponentModel.MaskedTextResultHint" /> indica êxito ou falha.</summary>
        <returns>
          <see langword="true" />Se especificado <see cref="T:System.ComponentModel.MaskedTextResultHint" /> valor representa um êxito; caso contrário, <see langword="false" /> caso ele represente falha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os seguintes métodos do <xref:System.ComponentModel.MaskedTextProvider> classe contém um parâmetro de tipo <xref:System.ComponentModel.MaskedTextResultHint> que é usado para obter informações sobre a operação do método de saída: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, e <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>. O <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> método interpreta esse valor e retorna um valor booliano que indica se o <xref:System.ComponentModel.MaskedTextResultHint> sinalize que a operação foi êxito ou falha.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os caracteres literais da máscara de entrada devem ser incluídos na cadeia de caracteres formatada.</summary>
        <value>
          <see langword="true" />Se literais são incluídas. Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades determinará se o prompt e os caracteres literais aparecerão ao chamar o <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método. Definindo ambas essas propriedades para `false`, a cadeia de caracteres analisada representa somente os caracteres inseridos pelo usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> é usada para representar a ausência de entrada do usuário ao exibir a cadeia de caracteres formatada.</summary>
        <value>
          <see langword="true" />Se o caractere de prompt é usado para representar as posições em que nenhuma entrada do usuário foi fornecida; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades determinará se o prompt e os caracteres literais aparecerão ao chamar o <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método. Definindo ambas essas propriedades para `false`, a cadeia de caracteres analisada representa somente os caracteres inseridos pelo usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> a ser inserido.</param>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para inserir o caractere.</param>
        <summary>Insere o caractere especificado na posição especificada na cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se a inserção foi bem-sucedida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere um caractere para a primeira posição de edição no ou além do que o especificado pelo `pos` parâmetro. Esse método mudará todos os caracteres existentes depois que o ponto de inserção com uma posição para liberar espaço para os dados inseridos `input` caracteres. Se um dos seguintes erros ocorre, a inserção não será executada e o método retornará `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou além da posição especificada, `pos`.  
  
-   O caractere de inserção, `input`, não é um caractere de entrada válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
-   Não há nenhum posições disponíveis à direita do ponto de inserção, para que os caracteres existentes não podem ser alterados.  
  
-   Deslocamento de caracteres existentes produziria uma violação da máscara.  
  
 Vazio `input` cadeia de caracteres não fará com que nenhuma alteração na formatação da cadeia de caracteres, mas retornará `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> a ser inserido.</param>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para inserir a cadeia de caracteres de entrada.</param>
        <summary>Insere a cadeia de caracteres especificada em uma posição especificada na cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se a inserção foi bem-sucedida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere cada caractere do `input` cadeia de caracteres para as posições de edição localizado na posição `pos` e posterior. Esse método mudará todos os caracteres existentes depois que o ponto de inserção com uma posição para cada inseridos caracteres. Se um dos seguintes erros ocorre, nenhuma inserção é executada e o método retornará `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Não é suficiente editáveis caracteres existem na cadeia de caracteres formatada em ou além da posição especificada, `pos`, para inserir todos os caracteres da `input` cadeia de caracteres.  
  
-   Um ou mais dos caracteres de inserção não são um caractere de entrada válido porque eles não são imprimíveis ou que não correspondam seu elemento máscara correspondente.  
  
-   Não há posições suficiente disponíveis para a direita do ponto de inserção, para que os caracteres existentes não podem ser alterados.  
  
-   Deslocamento de caracteres existentes produziria uma violação da máscara. Observe que essa mudança ocorre durante a inserção de cada caractere individual.  
  
 Vazio `input` cadeia de caracteres não fará com que nenhuma alteração na formatação da cadeia de caracteres, mas retornará `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> a ser inserido.</param>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para inserir o caractere.</param>
        <param name="testPosition">Se o método for bem-sucedido, a última posição em que foi inserido um caractere; Caso contrário, a primeira posição em que a inserção falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de inserção. Um parâmetro de saída.</param>
        <summary>Insere o caractere especificado na posição especificada na cadeia de caracteres formatada, retornando a última posição de inserção e o status da operação.</summary>
        <returns>
          <see langword="true" />Se a inserção foi bem-sucedida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere um caractere para a primeira posição de edição no ou além do que o especificado pelo `pos` parâmetro. Esse método mudará todos os caracteres existentes depois que o ponto de inserção com uma posição para liberar espaço para os dados inseridos `input` caracteres. Se um dos seguintes erros ocorre, a inserção não será executada e o método retornará `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou além da posição especificada, `pos`.  
  
-   O caractere de inserção, `input`, não é um caractere de entrada válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
-   Não há nenhum posições disponíveis à direita do ponto de inserção, para que os caracteres existentes não podem ser alterados.  
  
-   Deslocamento de caracteres existentes produziria uma violação da máscara.  
  
 Vazio `input` cadeia de caracteres não fará com que nenhuma alteração na formatação da cadeia de caracteres, mas retornará `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> a ser inserido.</param>
        <param name="position">A posição de base zero na cadeia de caracteres formatada para inserir a cadeia de caracteres de entrada.</param>
        <param name="testPosition">Se o método for bem-sucedido, a última posição em que foi inserido um caractere; Caso contrário, a primeira posição em que a inserção falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de inserção. Um parâmetro de saída.</param>
        <summary>Insere a cadeia de caracteres especificada em uma posição especificada na cadeia de caracteres formatada, retornando a última posição de inserção e o status da operação.</summary>
        <returns>
          <see langword="true" />Se a inserção foi bem-sucedida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere cada caractere do `input` cadeia de caracteres para as posições de edição localizado na posição `pos` e posterior. Esse método mudará todos os caracteres existentes depois que o ponto de inserção com uma posição para cada inseridos caracteres. Se um dos seguintes erros ocorre, nenhuma inserção é executada e o método retornará `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Não é suficiente editáveis caracteres existem na cadeia de caracteres formatada em ou além da posição especificada, `pos`, para inserir todos os caracteres da `input` cadeia de caracteres.  
  
-   Um ou mais dos caracteres de inserção não são um caractere de entrada válido porque eles não são imprimíveis ou que não correspondam seu elemento máscara correspondente.  
  
-   Não há posições suficiente disponíveis para a direita do ponto de inserção, para que os caracteres existentes não podem ser alterados.  
  
-   Deslocamento de caracteres existentes produziria uma violação da máscara. Observe que essa mudança ocorre durante a inserção de cada caractere individual.  
  
 Vazio `input` cadeia de caracteres não fará com que nenhuma alteração na formatação da cadeia de caracteres, mas retornará `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o limite superior do intervalo de índices inválidos.</summary>
        <value>Um valor que representa o maior índice inválido, conforme determinado pela implementação de provedor. Por exemplo, se o índice mais baixo válido é 0, esta propriedade retornará -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> propriedade é usada para representar um resultado que não é válido para operações de indexação, como o <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> método.  
  
 Quando você usa o provedor de ou implementa sua própria, você deve usar essa propriedade para decidir se um índice é inválido, em vez de embutir em código conhecimento dos valores inválidos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na máscara de teste.</param>
        <summary>Determina se a posição especificada está disponível para a atribuição.</summary>
        <returns>
          <see langword="true" />Se a posição especificada na cadeia de caracteres formatada é editável e não foi atribuída a ainda; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> método `true` apenas se todas as seguintes condições forem verdadeiras:  
  
-   O `pos` parâmetro dentro dos limites da cadeia de caracteres formatada; ou seja, seu valor é maior que ou igual a zero e menor que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   A posição especificada é um caractere editável.  
  
-   Um caractere já não foi atribuído a essa posição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero na máscara de teste.</param>
        <summary>Determina se a posição especificada é editável.</summary>
        <returns>
          <see langword="true" />Se a posição especificada na cadeia de caracteres formatada for editável; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> método `true` somente se ambas as seguintes condições forem verdadeiras:  
  
-   O `pos` parâmetro dentro dos limites da cadeia de caracteres formatada; ou seja, seu valor é maior que ou igual a zero e menor que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   A posição especificada é um caractere editável.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina se a proteção de senha deve ser aplicada à cadeia de caracteres formatada.</summary>
        <value>
          <see langword="true" />Se a cadeia de caracteres de entrada é tratado como uma cadeia de caracteres de senha; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proteção por senha pode ser iniciada usando um destes dois modos:  
  
-   Definindo o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade como não`null` valor.  
  
-   Definindo o <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> propriedade `true`., que também define o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade para o <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> valor.  
  
 <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A>é usado pelo <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para determinar se a revelar os caracteres de entrada reais ou oculte-as com <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">O <see cref="T:System.Char" /> valor a ser testado.</param>
        <summary>Determina se o caractere especificado é um caractere de entrada válido.</summary>
        <returns>
          <see langword="true" />Se o caractere especificado contém um valor de entrada válido. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Caracteres de entrada válidos incluem todos os caracteres imprimíveis, que incluem letras, dígitos, pontuação, símbolos e o caractere de espaço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">O <see cref="T:System.Char" /> valor a ser testado.</param>
        <summary>Determina se o caractere especificado é um caractere de máscara válido.</summary>
        <returns>
          <see langword="true" />Se o caractere especificado contém um valor válido de máscara. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Caracteres de máscara válidos incluem todos os caracteres imprimíveis, que incluem letras, dígitos, pontuação, símbolos e o caractere de espaço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">O <see cref="T:System.Char" /> valor a ser testado.</param>
        <summary>Determina se o caractere especificado é um caractere de senha é válida.</summary>
        <returns>
          <see langword="true" />Se o caractere especificado contém um valor de senha é válida. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Caracteres de senha válidos incluem todos os caracteres imprimíveis e o caractere nulo, que é usado para desabilitar a funcionalidade de senha. Caracteres imprimíveis incluem letras, dígitos, pontuação, símbolos e o caractere de espaço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um índice de base zero do elemento a ser recuperado.</param>
        <summary>Obtém o elemento na posição especificada na cadeia de caracteres formatada.</summary>
        <value>O <see cref="T:System.Char" /> na posição especificada na cadeia de caracteres formatada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Item%2A> propriedade é o indexador padrão para o <xref:System.ComponentModel.MaskedTextProvider> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />é menor que zero ou maior que ou igual a <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> da máscara.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice da máscara do caractere de entrada mais à direita que foi atribuído à máscara.</summary>
        <value>Se pelo menos um caractere de entrada tiver sido atribuído à máscara de um <see cref="T:System.Int32" /> que contém o índice da extrema direita atribuído posição; caso contrário, não se tiver sido atribuída a nenhum posição, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade representa a posição de edição mais distante na máscara, relativa à origem, que foi atribuída a um caractere de entrada. Para idiomas de leitura à esquerda para a direita (LTR), como o inglês, isso é mais à direita atribuído posição. para idiomas lidos da direita para a esquerda (RTL), isso seria a posição mais à esquerda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comprimento da máscara, ausência de qualquer máscara de caracteres de modificador.</summary>
        <value>Um <see cref="T:System.Int32" /> que contém o número de posições na máscara, exceto caracteres que modificar a máscara de entrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Length%2A> propriedade representa o número total de caracteres na máscara, incluindo os caracteres literais e editáveis. O número de caracteres literal que pode ser determinado subtraindo-se o valor de <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> do <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.  
  
 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>também descreve o comprimento da cadeia de caracteres formatada, incluindo caracteres de entrada, literais e caracteres de prompt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a máscara de entrada.</summary>
        <value>Um <see cref="T:System.String" /> que contém a máscara inteira.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade é definida no <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor. Essa máscara deve conter somente caracteres válidos, conforme definido pela linguagem de mascaramento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se todas as entradas necessárias foram inseridas na cadeia de caracteres formatada.</summary>
        <value>
          <see langword="true" /> se todas as entradas necessárias foram inseridas na máscara; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propriedade verifica somente elementos de entrada necessários. Para determinar se todos os elementos de entrada necessários e opcionais inseridos, use o <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> propriedade o <xref:System.Windows.Forms.MaskedTextBox> classe em vez disso.  
  
 O valor atual de <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade determina quais elementos de formatação são considerados necessários e opcionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se todas as entradas obrigatórias e opcionais tenham sido inseridas na cadeia de caracteres formatada.</summary>
        <value>
          <see langword="true" /> se todas as entradas obrigatórias e opcionais tiverem sido inseridas; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para verificar se necessário somente elementos de entrada forem inseridos, use o <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propriedade em vez disso. O valor atual de <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade determina quais elementos de formatação são considerados necessários e opcionais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caractere a serem substituídos por caracteres de entrada reais.</summary>
        <value>O valor <see cref="T:System.Char" /> usado como o caractere de senha.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para a entrada do usuário confidenciais, é uma prática comum para ocultar as informações inseridas pelo usuário durante as operações de saída. Se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> está definida como não`null` caractere, como os métodos de saída <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> será obscurecer os caracteres de entrada com o caractere de senha especificada. Definir essa propriedade como `null` desabilitará a funcionalidade de proteção de senha.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O caractere de senha especificado quando a definição dessa propriedade é o mesmo que o caractere de prompt atual, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />. Os dois devem ser diferentes.</exception>
        <exception cref="T:System.ArgumentException">O caractere especificado quando a definição dessa propriedade não é um caractere de senha é válida, conforme determinado pelo <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> método.</exception>
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caractere usado para representar a ausência de entrada do usuário para todas as posições de edição disponíveis.</summary>
        <value>O caractere usado para solicitar a entrada do usuário. O padrão é um caractere de sublinhado (_).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedade representa o caractere de prompt é usado pelo <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para representar o estado atual da cadeia de caracteres de entrada formatado. Um caractere de prompt é colocado em posições editáveis que ainda não tem sido atribuídas um valor de entrada. Algumas versões do <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método também dependem do valor da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O caractere de prompt especificada quando a definição dessa propriedade é o mesmo que o caractere de senha atual, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />. Os dois devem ser diferentes.</exception>
        <exception cref="T:System.ArgumentException">O caractere especificado quando a definição dessa propriedade não é um caractere de senha é válida, conforme determinado pelo <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> método.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove o último caractere atribuído a cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se o caractere foi removido com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método não tem nenhum efeito se não houver nenhum caractere ainda atribuído à máscara.  
  
 Quando o último caractere atribuído for removido da cadeia de caracteres formatada, o caractere de máscara editável é redefinido para posição, permitindo que a entrada subsequente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition">A posição com base em zero na cadeia de caracteres formatada onde o caractere, na verdade, foi removido. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Remove o último caractere atribuído a cadeia de caracteres formatada e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" />Se o caractere foi removido com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método não tem nenhum efeito se não houver nenhum caractere ainda atribuído à máscara.  
  
 Quando o último caractere atribuído for removido da cadeia de caracteres formatada, o caractere de máscara editável é redefinido para posição, permitindo que a entrada subsequente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">A posição de base zero do caractere atribuída para remover.</param>
        <summary>Remove o caractere atribuído na posição especificada da cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se o caractere foi removido com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído na remoção posição especificada. Caracteres literais não são afetados por este método.  
  
 Quando um caractere é removido, os caracteres restantes posição superior na máscara de mudará para a esquerda para preencher a lacuna criada pela remoção. Posições vazias são redefinidas para entrada. Se a movimentação dos caracteres é evitada pela definição de máscara, nenhuma remoção ocorrerá, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.  
  
 Esta chamada de método é exatamente equivalente a seguinte chamada sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> versão:  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">O índice de base zero do primeiro caractere atribuído para remover.</param>
        <param name="endPosition">O índice de base zero do último caractere atribuído para remover.</param>
        <summary>Remove os caracteres atribuídos entre as posições especificadas da cadeia de caracteres formatada.</summary>
        <returns>
          <see langword="true" />Se o caractere foi removido com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído nas posições remoção especificadas.  
  
 Quando um caractere é removido, os caracteres restantes posição superior na máscara de mudará para a esquerda para preencher a lacuna criada pela remoção. Posições vazias são redefinidas para entrada. Se a movimentação dos caracteres é evitada pela definição de máscara, nenhuma remoção ocorrerá, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition">O índice de base zero do primeiro caractere atribuído para remover.</param>
        <param name="endPosition">O índice de base zero do último caractere atribuído para remover.</param>
        <param name="testPosition">Se for bem-sucedido, a posição de base zero na cadeia de caracteres formatada de onde os caracteres realmente foram removidos; Caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Remove os caracteres atribuídos entre as posições especificadas da cadeia de caracteres formatada e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" />Se o caractere foi removido com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído nas posições remoção especificadas.  
  
 Quando um caractere é removido, os caracteres restantes posição superior na máscara de mudará para a esquerda para preencher a lacuna criada pela remoção. Posições vazias são redefinidas para entrada. Se a movimentação dos caracteres é evitada pela definição de máscara, nenhuma remoção ocorrerá, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.  
  
 Esta versão do <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> fornece dois parâmetros de saída para obter mais informações sobre a operação do método de transmitir.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> valor que substituirá o valor existente.</param>
        <param name="position">A posição de base zero para pesquisar o primeiro caractere editável substituir.</param>
        <summary>Substitui um único caractere no além da posição especificada com o valor do caractere especificado.</summary>
        <returns>
          <see langword="true" />Se o caractere foi substituído com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> método procura a cadeia de caracteres formatada em ou além da posição especificada, a primeira posição editável `pos`. Se uma for encontrada, o valor da posição editável é alterado para o caractere especificado, `input`. Qualquer uma das condições a seguir resultará em um erro que faz com que nenhuma substituição a ser executada e um valor de `false` a ser retornado:  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou além da posição especificada, `pos`.  
  
-   O caractere de substituição, `input`, não é um caractere de entrada válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">O valor <see cref="T:System.String" /> usado para substituir os caracteres editáveis existentes.</param>
        <param name="position">A posição de base zero para pesquisar o primeiro caractere editável substituir.</param>
        <summary>Substitui um intervalo de caracteres editáveis, começando na posição especificada com a cadeia de caracteres especificada.</summary>
        <returns>
          <see langword="true" /> se todos os caracteres foram substituídos com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> método procura a primeira posição editável no ou além da posição especificada, `pos`. Operando sob a suposição de que há suficiente editáveis posições depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.  
  
 As seguintes condições são consideradas como erros. Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> retorna `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Não há suficiente editáveis posições na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.  
  
-   Um dos valores de caractere de substituição não é válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> valor que substituirá o valor existente.</param>
        <param name="position">A posição de base zero para pesquisar o primeiro caractere editável substituir.</param>
        <param name="testPosition">Se tiver êxito, a posição baseada em zero na cadeia de caracteres formatada em que o último caractere foi, na verdade, substituído; caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de substituição. Um parâmetro de saída.</param>
        <summary>Substitui um único caractere no além da posição especificada com o valor do caractere especificado e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" />Se o caractere foi substituído com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a cadeia de caracteres formatada em ou além da posição especificada, a primeira posição editável `pos`. Se uma for encontrada, o valor da posição editável é alterado para o caractere especificado, `input`. Qualquer uma das condições a seguir resultará em uma condição de erro que faz com que nenhuma substituição a ser executada e um valor de `false` a ser retornado:  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou além da posição especificada, `pos`.  
  
-   O caractere de substituição, `input`, não é um caractere de entrada válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 Além do valor de retorno, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O valor <see cref="T:System.String" /> usado para substituir os caracteres editáveis existentes.</param>
        <param name="position">A posição de base zero para pesquisar o primeiro caractere editável substituir.</param>
        <param name="testPosition">Se tiver êxito, a posição baseada em zero na cadeia de caracteres formatada em que o último caractere foi, na verdade, substituído; caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de substituição. Um parâmetro de saída.</param>
        <summary>Substitui um intervalo de caracteres editáveis, começando na posição especificada com a cadeia de caracteres especificada e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" /> se todos os caracteres foram substituídos com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a primeira posição editável no ou além da posição especificada, `pos`. Operando na suposição de que há suficiente editáveis posições depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.  
  
 As seguintes condições são consideradas como erros. Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> retorna `false`.  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.  
  
-   Não há suficiente editáveis posições na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.  
  
-   Um dos valores de caractere de substituição não é válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 Além do valor de retorno, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> valor que substituirá o valor existente.</param>
        <param name="startPosition">A posição baseada em zero na cadeia de caracteres formatada na qual começa a substituição.</param>
        <param name="endPosition">A posição baseada em zero na cadeia de caracteres formatada na qual termina a substituição.</param>
        <param name="testPosition">Se tiver êxito, a posição baseada em zero na cadeia de caracteres formatada em que o último caractere foi, na verdade, substituído; caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de substituição. Um parâmetro de saída.</param>
        <summary>Substitui um único caractere entre o inicial especificada e terminando posições com o valor do caractere especificado e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" />Se o caractere foi substituído com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a primeira posição na cadeia de caracteres formatada entre inicial especificado e terminando posições editável. Se uma for encontrada, o valor da posição editável é alterado para o caractere especificado, `input`. Qualquer uma das condições a seguir resultará em uma condição de erro que faz com que nenhuma substituição a ser executada e um valor de `false` a ser retornado:  
  
-   O `startPos` ou `endPos` parâmetros ponto antes do início da cadeia de caracteres formatada ou além do seu fim.  
  
-   Um caractere editável não foi encontrado no intervalo especificado.  
  
-   O caractere de substituição, `input`, não é um caractere de entrada válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 Além do valor de retorno, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O valor <see cref="T:System.String" /> usado para substituir os caracteres editáveis existentes.</param>
        <param name="startPosition">A posição baseada em zero na cadeia de caracteres formatada na qual começa a substituição.</param>
        <param name="endPosition">A posição baseada em zero na cadeia de caracteres formatada na qual termina a substituição.</param>
        <param name="testPosition">Se tiver êxito, a posição baseada em zero na cadeia de caracteres formatada em que o último caractere foi, na verdade, substituído; caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de substituição. Um parâmetro de saída.</param>
        <summary>Substitui um intervalo de caracteres editáveis entre as posições inicial e final especificadas com a cadeia de caracteres especificada e, então, gera a posição de remoção e informações descritivas.</summary>
        <returns>
          <see langword="true" /> se todos os caracteres foram substituídos com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> método procura a primeira posição na cadeia de caracteres formatada entre inicial especificado e terminando posições editável. Operando na suposição de que há suficiente editáveis posições depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.  
  
 As seguintes condições são consideradas como erros. Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> retorna `false`.  
  
-   O `startPos` ou `endPos` parâmetros ponto antes do início da cadeia de caracteres formatada ou além do seu fim.  
  
-   Não há suficiente editáveis posições na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.  
  
-   Um dos valores de caractere de substituição não é válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 Além do valor de retorno, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina como um caractere de entrada que corresponde ao caractere do prompt deve ser tratado.</summary>
        <value>
          <see langword="true" /> se o caractere de prompt inserido como entrada fizer com que a posição editável atual na máscara seja redefinida, caso contrário, <see langword="false" /> para indicar que ele deverá ser processado como um caractere de entrada normal. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider>pode tratar duas categorias de caracteres, prova e caracteres de prompt de maneira especial. Normalmente, cada caractere de entrada será testado em relação a máscara e o aceitas ou rejeitadas. Operando na suposição de que o <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedade é definida como um valor diferente de `null`, definindo o <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> propriedade `true` resultará em processamento especial para o caractere de prompt. Quando um caractere de prompt é adicionado, ele faz com que a atual posição do caractere de máscara a ser apagado e a posição atual para ser adiantada até o próximo caractere editável.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>tem precedência sobre o <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> propriedade conforme descrito na tabela a seguir.  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|Comportamento resultante|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|O caractere de prompt pode ser adicionado e faz com que a posição atual de máscara a ser redefinido. O padrão.|  
|`true`|`false`|O caractere de prompt pode ser adicionado e faz com que a posição atual de máscara a ser redefinido.|  
|`false`|`true`|O caractere de prompt é processado como um caractere de entrada normal.|  
|`false`|`false`|O caractere de prompt não é válido e haverá falha nos métodos tentar adicionar o caractere.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina como um caractere de entrada de espaço deve ser tratado.</summary>
        <value>
          <see langword="true" /> se o caractere de entrada de espaço fizer com que a posição editável atual na máscara seja redefinida; caso contrário, <see langword="false" /> para indicar que ele deve ser processado como um caractere de entrada normal. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.MaskedTextProvider>pode tratar duas categorias de caracteres, espaços e caracteres de prompt de maneira especial. Normalmente, cada caractere de entrada será testado em relação a máscara e o aceitas ou rejeitadas. Definindo o <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propriedade `true` resultará na atual posição do caractere de máscara sendo limpo e a posição atual está sendo avançado para o próximo caractere editável.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>é útil quando atribuindo o texto que foi salvo, excluindo o prompt, onde o prompt é substituído por um espaço. Antes de restaurar esse uma cadeia de caracteres, definindo <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> para `true` redefinirá os caracteres de prompt nas posições ocupadas por espaços na cadeia de caracteres de entrada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> valor usado para definir a cadeia de caracteres formatada.</param>
        <summary>Define a cadeia de caracteres formatada para a cadeia de caracteres de entrada especificada.</summary>
        <returns>
          <see langword="true" />Se todos os caracteres foram definidos com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método limpa o conteúdo existente de cadeia de caracteres formatada e, em seguida, aplica-se a máscara contra o `input` cadeia de caracteres para atualizar o conteúdo da cadeia de caracteres formatada.  
  
 As seguintes condições são consideradas como erros. Quando ocorre um erro, a cadeia de caracteres formatada permanecerá inalterada e <xref:System.ComponentModel.MaskedTextProvider.Set%2A> retorna `false`.  
  
-   Não há suficiente editáveis posições na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.  
  
-   Um dos valores de caractere de substituição não é válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> valor usado para definir a cadeia de caracteres formatada.</param>
        <param name="testPosition">Se for bem-sucedido, a posição de base zero na cadeia de caracteres formatada onde o último caractere realmente foi definido; Caso contrário, a primeira posição em que a operação falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de definição. Um parâmetro de saída.</param>
        <summary>Define a cadeia de caracteres formatada para a cadeia de caracteres de entrada especificada e, em seguida, transmite a posição de remoção e as informações descritivas.</summary>
        <returns>
          <see langword="true" />Se todos os caracteres foram definidos com êxito; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método limpa o conteúdo existente de cadeia de caracteres formatada e, em seguida, aplica-se a máscara contra o `input` cadeia de caracteres para atualizar o conteúdo da cadeia de caracteres formatada.  
  
 As seguintes condições são consideradas como erros. Quando ocorre um erro, a cadeia de caracteres formatada permanecerá inalterada e <xref:System.ComponentModel.MaskedTextProvider.Set%2A> retorna `false`.  
  
-   Não há suficiente editáveis posições na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.  
  
-   Um dos valores de caractere de substituição não é válido porque ele não é imprimível ou não coincide com o elemento correspondente de máscara.  
  
 Esta versão do <xref:System.ComponentModel.MaskedTextProvider.Set%2A> fornece dois parâmetros de saída para obter mais informações sobre a operação do método de transmitir.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="input" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as posições de caractere literal na máscara de podem ser substituídas por seus valores mesmo.</summary>
        <value>
          <see langword="true" />para permitir a literais para ser adicionado novamente; Caso contrário, <see langword="false" /> não permitir que o usuário substituir caracteres literais. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Máscaras de entrada podem conter caracteres literal e editável. Se for feita uma tentativa de adicionar um caractere de entrada para a posição em uma máscara ocupada por um literal, o valor de <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> propriedade determina o resultado.  
  
-   Se essa propriedade for `true`, ele é válido para substituir um literal com o mesmo valor durante a adição de caracteres de entrada. Por exemplo, um valor de caractere de barra invertida, `'/'`, pode ser adicionado à terceira posição da máscara `"00/00/000"`.  
  
-   Se essa propriedade for `false`, não é válido para atribuir valores para uma posição de máscara ocupada por um caractere literal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a cadeia de caracteres formatada em um formulário pode ser exibido.</summary>
        <returns>O formatado <see cref="T:System.String" /> que inclui prompts e literais de máscara.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> método sempre incluirá prompt e literais de caracteres no valor de retorno, independentemente do valor de <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> ou <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades. Esse método sempre exibirá os caracteres de senha se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor de caractere diferente de `null`.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>geralmente é usada para obter a cadeia de caracteres para exibir em elementos de interface de usuário associada, como <xref:System.Windows.Forms.MaskedTextBox>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a cadeia de caracteres formatada que inclui todos os valores de caractere atribuído.</summary>
        <returns>O formatado <see cref="T:System.String" /> que inclui todos os valores de caractere atribuído.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores atuais do <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente. Ele sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.  
  
> [!IMPORTANT]
>  Como esse método revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <see langword="true" />para retornar os caracteres editáveis reais; Caso contrário, <see langword="false" /> para indicar que o <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> é de propriedade a ser aplicada.</param>
        <summary>Retorna a cadeia de caracteres formatada, opcionalmente incluindo caracteres de senha.</summary>
        <returns>O formatado <see cref="T:System.String" /> que inclui literais, avisos e, opcionalmente, caracteres de senha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores atuais do <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente. Se o `ignorePasswordChar` parâmetro é `true`, ela retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade. Se esse parâmetro for `false`, ele usará o caractere de senha para ocultar a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.  
  
> [!IMPORTANT]
>  Como esse método potencialmente revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <see langword="true" />para incluir caracteres de prompt na cadeia de retorno; Caso contrário, <see langword="false" />.</param>
        <param name="includeLiterals">
          <see langword="true" />para incluir caracteres literais de cadeia de caracteres de retorno; Caso contrário, <see langword="false" />.</param>
        <summary>Retorna a cadeia de caracteres formatada, opcionalmente incluindo caracteres de prompt e literal.</summary>
        <returns>O formatado <see cref="T:System.String" /> que inclui todos os valores do caractere atribuído e, opcionalmente, inclui literais e solicita.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores da `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente. Observe que esses parâmetros substituem os valores da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades. Esse método sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.  
  
> [!IMPORTANT]
>  Como esse método revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde começa a saída.</param>
        <param name="length">O número de caracteres a ser retornado.</param>
        <summary>Retorna uma subcadeia da cadeia de caracteres formatada.</summary>
        <returns>Se for bem-sucedido, uma subcadeia de caracteres da formatado <see cref="T:System.String" />, que inclui todos os valores de caractere atribuído; caso contrário, o <see cref="F:System.String.Empty" /> cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificado pelo `length` parâmetro. A cadeia de caracteres retornada inclui prompts e literais de acordo com os valores atuais do <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente. A cadeia de caracteres de retorno contém os caracteres de entrada originais; o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade sempre será ignorada.  
  
> [!IMPORTANT]
>  Como esse método revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>executa as seguintes ações quando há discrepâncias nos parâmetros de entrada:  
  
-   Se `startPos` é menor que zero, a posição inicial é definida como zero.  
  
-   Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada de <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
-   Se `length` for maior do que o número restante de caracteres passados a posição inicial, somente os demais caracteres é retornado.  
  
-   Se `length` é menor ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <see langword="true" />para retornar os caracteres editáveis reais; Caso contrário, <see langword="false" /> para indicar que o <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> é de propriedade a ser aplicada.</param>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde começa a saída.</param>
        <param name="length">O número de caracteres a ser retornado.</param>
        <summary>Retorna uma subcadeia da cadeia de caracteres formatada, opcionalmente incluindo caracteres de senha.</summary>
        <returns>Se for bem-sucedido, uma subcadeia de caracteres da formatado <see cref="T:System.String" />, que incluem literais, avisos e, opcionalmente, caracteres de senha; caso contrário, o <see cref="F:System.String.Empty" /> cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificado pelo `length` parâmetro. A cadeia de caracteres retornada inclui prompts e literais de acordo com os valores atuais do <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente. Se o `ignorePasswordChar` parâmetro é `true`, ela retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade. Se esse parâmetro for `false`, ele usará o caractere de senha para ocultar a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.  
  
> [!IMPORTANT]
>  Como esse método potencialmente revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>executa as seguintes ações quando há discrepâncias nos parâmetros de entrada:  
  
-   Se `startPos` é menor que zero, a posição inicial é definida como zero.  
  
-   Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada de <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
-   Se `length` for maior do que o número restante de caracteres passados a posição inicial, somente os demais caracteres é retornado.  
  
-   Se `length` é menor ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <see langword="true" />para incluir caracteres de prompt na cadeia de retorno; Caso contrário, <see langword="false" />.</param>
        <param name="includeLiterals">
          <see langword="true" />para incluir caracteres literais de cadeia de caracteres de retorno; Caso contrário, <see langword="false" />.</param>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde começa a saída.</param>
        <param name="length">O número de caracteres a ser retornado.</param>
        <summary>Retorna uma subcadeia da cadeia de caracteres formatada, opcionalmente incluindo caracteres de prompt e literal.</summary>
        <returns>Se for bem-sucedido, uma subcadeia de caracteres da formatado <see cref="T:System.String" />, que inclui todos os valores do caractere atribuído e, opcionalmente, inclui literais e avisos; caso contrário, o <see cref="F:System.String.Empty" /> cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificado pelo `length` parâmetro. A cadeia de caracteres de retorno inclui prompts e literais de acordo com os valores de `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente. Observe que esses parâmetros substituem os valores da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades. Esse método sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.  
  
> [!IMPORTANT]
>  Como esse método revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>executa as seguintes ações quando há discrepâncias nos parâmetros de entrada:  
  
-   Se `startPos` é menor que zero, a posição inicial é definida como zero.  
  
-   Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada de <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
-   Se `length` for maior do que o número restante de caracteres passados a posição inicial, somente os demais caracteres é retornado.  
  
-   Se `length` é menor ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <see langword="true" />para retornar os caracteres editáveis reais; Caso contrário, <see langword="false" /> para indicar que o <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> é de propriedade a ser aplicada.</param>
        <param name="includePrompt">
          <see langword="true" />para incluir caracteres de prompt na cadeia de retorno; Caso contrário, <see langword="false" />.</param>
        <param name="includeLiterals">
          <see langword="true" />para retornar caracteres literais de cadeia de caracteres de retorno; Caso contrário, <see langword="false" />.</param>
        <param name="startPosition">A posição com base em zero na cadeia de caracteres formatada onde começa a saída.</param>
        <param name="length">O número de caracteres a ser retornado.</param>
        <summary>Retorna uma subcadeia da cadeia de caracteres formatada, opcionalmente incluindo caracteres de prompt, literal e a senha.</summary>
        <returns>Se for bem-sucedido, uma subcadeia de caracteres da formatado <see cref="T:System.String" />, que inclui todos os valores do caractere atribuído e, opcionalmente, inclui literais, avisos e caracteres de senha; caso contrário, o <see cref="F:System.String.Empty" /> cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do sobrecarregados <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificado pelo `length` parâmetro. A cadeia de caracteres de retorno inclui prompts e literais de acordo com os valores de `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente. Observe que esses parâmetros substituem os valores da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades. Se o `ignorePasswordChar` parâmetro é `true`, ela retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade. Se esse parâmetro for `false`, ele usará o caractere de senha para ocultar a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.  
  
> [!IMPORTANT]
>  Como esse método potencialmente revela informações que normalmente são protegidas na interface do usuário por caracteres de senha, deve ser usado com muito cuidado para evitar acidentalmente revelar dados confidenciais do usuário.  
  
 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>executa as seguintes ações quando há discrepâncias nos parâmetros de entrada:  
  
-   Se `startPos` é menor que zero, a posição inicial é definida como zero.  
  
-   Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada de <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
-   Se `length` for maior do que o número restante de caracteres passados a posição inicial, somente os demais caracteres é retornado.  
  
-   Se `length` é menor ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> valor a ser testado.</param>
        <param name="position">A posição da máscara para testar o caractere de entrada em relação.</param>
        <param name="hint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação. Um parâmetro de saída.</param>
        <summary>Testa se o caractere especificado pode ser definido com êxito na posição especificada.</summary>
        <returns>
          <see langword="true" />Se o caractere especificado for válido para a posição especificada. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> método testa se um valor de caractere único representa uma entrada válida na posição especificada na cadeia de caracteres formatada. Esse método retornará `false` pelos seguintes motivos:  
  
-   O `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> do <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.  
  
-   O caractere `input` não é um caractere de entrada válido, conforme determinado pelo <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> método.  
  
-   O `input` não é compatível com o elemento de máscara na posição especificada, `pos`.  
  
 A última condição pode depender do valor atual de <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> e <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> propriedades.  
  
 Para testar uma cadeia de caracteres de entrada inteira contra a máscara, use uma da <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> métodos em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.Char" /> valor a ser testado.</param>
        <param name="position">A posição da máscara para testar o caractere de entrada em relação.</param>
        <summary>Testa se o caractere especificado deve ser de escape na posição especificada.</summary>
        <returns>
          <see langword="true" />Se o caractere especificado deve ser de escape na posição especificada; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um caractere será considerado *escape* se ele é uma entrada válida, mas não está atribuído a posição na cadeia de caracteres formatada. Queda de caracteres de escape em três categorias a seguir:  
  
-   Caracteres de prompt são ignoradas se o <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> é de propriedade `true`.  
  
-   Caracteres de entrada são ignoradas se tiverem o mesmo valor que o literal da máscara e o <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> é de propriedade `true`.  
  
-   Caractere de espaço será ignorado se o <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> é de propriedade `true`.  
  
 O <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> método também retornará `false` se o `pos` parâmetro for menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> do <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> valor a ser testado.</param>
        <summary>Testa se a cadeia de caracteres especificada pode ser definida com êxito.</summary>
        <returns>
          <see langword="true" />Se a cadeia de caracteres especificada representa uma entrada válida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> se aplica a `input` cadeia de caracteres de máscara, sem realmente alterar a cadeia de caracteres formatada para testar se `input` seria válida no correspondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operação. Esse método também retorna `true` se a entrada estiver `null` ou tem comprimento zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">O <see cref="T:System.String" /> valor a ser testado.</param>
        <param name="testPosition">Se for bem-sucedido, a posição de base zero do último caractere realmente testado; Caso contrário, a primeira posição em que o teste falhou. Um parâmetro de saída.</param>
        <param name="resultHint">Um <see cref="T:System.ComponentModel.MaskedTextResultHint" /> que descreve sucintamente o resultado da operação de teste. Um parâmetro de saída.</param>
        <summary>Testa se a cadeia de caracteres especificada pode ser definida com êxito e, em seguida, gera posição e informações descritivas.</summary>
        <returns>
          <see langword="true" />Se a cadeia de caracteres especificada representa uma entrada válida; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> se aplica a `input` cadeia de caracteres de máscara, sem realmente alterar a cadeia de caracteres formatada para testar se `input` seria válida no correspondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operação. Esse método também retorna `true` se a entrada estiver `null` ou tem comprimento zero.  
  
 Esta versão do <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> fornece dois parâmetros de saída para obter mais informações sobre a operação do método de transmitir.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
