<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Especifica quando você pode usar um objeto licenciado e fornece uma maneira de obter serviços adicionais necessários para dar suporte a licenças em execução em seu domínio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe fornece o padrão <xref:System.ComponentModel.LicenseContext>. Ele implementa o suporte de tempo de execução apenas e faz a chaves de licença do suporte salvada.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Se você quiser implementar o suporte a licença de tempo de design, você deve herdar dessa classe e substituir os seguintes membros: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, e <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. Se você quiser implementar salva as chaves de licença, substituir o <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> e <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> métodos.  
  
 Para obter mais informações sobre licenciamento, consulte [como: controles e componentes de licença](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">Um <see cref="T:System.Type" /> que representa o tipo de componente.</param>
        <param name="resourceAssembly">Um <see cref="T:System.Reflection.Assembly" /> com a chave de licença.</param>
        <summary>Quando substituído em uma classe derivada, retorna uma chave de licença que foram salvos para o tipo especificado, do conjunto de recursos especificado.</summary>
        <returns>O <see cref="P:System.ComponentModel.License.LicenseKey" /> para o tipo especificado. Este método retorna <see langword="null" /> a menos que você o substitua.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método e o <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> método para implementar uma chave de licença que foram salvos. Se o <paramref name="resourceAssembly" /> parâmetro é <see langword="null" />, em seguida, você pode recuperar o recurso de execução principal <see cref="T:System.Reflection.Assembly" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de serviço a ser recuperado.</param>
        <summary>Obtém o serviço solicitado, se estiver disponível.</summary>
        <returns>Uma instância do serviço, ou <see langword="null" /> se o serviço não pode ser encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Um <see cref="T:System.Type" /> que representa o componente associado com a chave de licença.</param>
        <param name="key">O <see cref="P:System.ComponentModel.License.LicenseKey" /> Salvar para o tipo de componente.</param>
        <summary>Quando substituído em uma classe derivada, define uma chave de licença para o tipo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, chame este método quando você definir <xref:System.ComponentModel.LicenseUsageMode> em tempo de design. Você deve substituir o <xref:System.ComponentModel.LicenseContext.UsageMode%2A> propriedade para implementar o suporte de licença de tempo de design.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Este método não oferece suporte para uma chave de licença que foram salvos. Substitua este método e o <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> método para implementar uma chave.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém um valor que especifica quando você pode usar uma licença.</summary>
        <value>Uma da <see cref="T:System.ComponentModel.LicenseUsageMode" /> valores que especifica quando você pode usar uma licença. O padrão é <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Para implementar o suporte de tempo de design, substitua essa propriedade em uma classe herdada.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>
