<Type Name="WebEventManager" FullName="System.Web.Management.WebEventManager">
  <TypeSignature Language="C#" Value="public static class WebEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebEventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a funcionalidade de gerenciamento de eventos da Web em um aplicativo. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.Management.WebEventManager> classe liberar atualmente em buffer de eventos para provedores que estão contidos no `healthMonitoring` seção da configuração.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventManager.Flush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera o buffer de eventos para todos os provedores que estão no <see langword="healthMonitoring" /> seção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Management.WebEventManager.Flush%2A> método libera o buffer de eventos para todos os provedores que estão no `healthMonitoring` seção da configuração. Se não houver provedores existirem, nenhum evento nunca é armazenados em buffer. No entanto, se existem provedores, o evento de buffer para cada provedor no `healthMonitoring` seção é liberada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush (string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventManager.Flush(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">O nome do provedor.</param>
        <summary>Libera o buffer de evento para o provedor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Management.WebEventManager.Flush%2A> método libera o buffer de evento para o provedor especificado. O `healthMonitoring` seção de configuração deve conter o provedor especificado para liberar o buffer de evento. Se o nome do provedor não corresponde a nenhum dos provedores existentes no `healthMonitoring` seção, um <xref:System.ArgumentException> exceção será lançada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" />não corresponde a nenhum dos provedores existentes.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
