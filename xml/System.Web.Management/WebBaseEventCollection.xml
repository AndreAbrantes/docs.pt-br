<Type Name="WebBaseEventCollection" FullName="System.Web.Management.WebBaseEventCollection">
  <TypeSignature Language="C#" Value="public sealed class WebBaseEventCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebBaseEventCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebBaseEventCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém uma coleção de objetos <see cref="T:System.Web.Management.WebBaseEvent" /> . Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar a implantação de aplicativos da Web. O <xref:System.Web.Management> namespace contém os tipos de evento de integridade responsáveis pela compactação de dados de status de integridade do aplicativo e os tipos de provedor responsáveis pelo processamento de dados. Ele também contém tipos de suporte para ajudá-lo durante o gerenciamento de eventos de integridade.  
  
 O <xref:System.Web.Management.WebBaseEventCollection> classe é usada para fornecer uma coleção de monitoramento de integridade eventos para provedores, como o <xref:System.Web.Management.SqlWebEventProvider>.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Web.Management.WebBaseEventCollection> classe.  
  
 [!code-csharp[System.Web.Management.WebBaseEventCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/CS/webbaseeventcollection.cs#1)]
 [!code-vb[System.Web.Management.WebBaseEventCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/VB/webbaseeventcollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBaseEventCollection (System.Collections.ICollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseEventCollection.#ctor(System.Collections.ICollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="events">A coleção de objetos <see cref="T:System.Web.Management.WebBaseEvent" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Management.WebBaseEventCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Management.WebBaseEventCollection.%23ctor%28System.Collections.ICollection%29> construtor permite que você crie uma instância do <xref:System.Web.Management.WebBaseEventCollection> classe e inicializá-lo com uma coleção de <xref:System.Web.Management.WebBaseEvent> objetos.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar este construtor.  
  
 [!code-csharp[System.Web.Management.WebBaseEventCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/CS/webbaseeventcollection.cs#2)]
 [!code-vb[System.Web.Management.WebBaseEventCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/VB/webbaseeventcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="events" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.Management.WebBaseEvent value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.Management.WebBaseEvent value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseEventCollection.Contains(System.Web.Management.WebBaseEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Web.Management.WebBaseEvent" /> objeto a ser pesquisado.</param>
        <summary>Indica se a coleção contém especificado <see cref="T:System.Web.Management.WebBaseEvent" /> objeto.</summary>
        <returns>
          <see langword="true" />Se a coleção contém o elemento especificado. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Web.Management.WebBaseEventCollection.Contains%2A> propriedade.  
  
 [!code-csharp[System.Web.Management.WebBaseEventCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/CS/webbaseeventcollection.cs#5)]
 [!code-vb[System.Web.Management.WebBaseEventCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/VB/webbaseeventcollection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.Management.WebBaseEvent value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.Management.WebBaseEvent value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseEventCollection.IndexOf(System.Web.Management.WebBaseEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Web.Management.WebBaseEvent" /> objeto para o qual obter o índice.</param>
        <summary>Obtém o índice do objeto <see cref="T:System.Web.Management.WebBaseEvent" /> especificado.</summary>
        <returns>O índice especificado <see cref="T:System.Web.Management.WebBaseEvent" /> objeto dentro da coleção.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Web.Management.WebBaseEventCollection.IndexOf%2A> propriedade.  
  
 [!code-csharp[System.Web.Management.WebBaseEventCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/CS/webbaseeventcollection.cs#4)]
 [!code-vb[System.Web.Management.WebBaseEventCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/VB/webbaseeventcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O objeto não está na coleção.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebBaseEvent this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebBaseEvent Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebBaseEventCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebBaseEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice de coleção de <see cref="T:System.Web.Management.WebBaseEvent" /> do objeto que deseja recuperar.</param>
        <summary>Obtém o objeto <see cref="T:System.Web.Management.WebBaseEvent" /> no índice especificado.</summary>
        <value>O objeto <see cref="T:System.Web.Management.WebBaseEvent" /> no índice especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Web.Management.WebBaseEventCollection.Item%2A> propriedade.  
  
 [!code-csharp[System.Web.Management.WebBaseEventCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/CS/webbaseeventcollection.cs#3)]
 [!code-vb[System.Web.Management.WebBaseEventCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEventCollection/VB/webbaseeventcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O índice especificado está fora do intervalo da coleção.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
