<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica um tipo base usado para definir o contrato para o registro e resolução de um par de ID de malha para os endereços de ponto de extremidade de nós que participam na malha.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é a classe base para a implementação de resolvedores de nome de pares personalizado. Um resolvedor de nome de ponto a ponto é um serviço de descoberta usado pelos canais de ponto a ponto para localizar nós pares participando de uma malha de ponto a ponto. Ele também é usado para "Registrar" de um nó com uma malha de ponto a ponto, o mecanismo pelo qual o nó par torna-se e conhecida da malha ponto a ponto.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.PeerResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém se a resolução de nome de ponto a ponto pode compartilhar as referências.</summary>
        <value>Se for true, a resolução de nome de ponto a ponto pode compartilhar referências; Se for false, ele não pode.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.ServiceModel.EndpointAddress" />que contém o novo endereço de ponto de extremidade dessa instância do resolvedor peer.</param>
        <param name="binding">
          <see cref="T:System.ServiceModel.Channels.Binding" />que especifica a nova associação de rede para este resolvedor peer.</param>
        <param name="credentials">
          <see cref="T:System.ServiceModel.Description.ClientCredentials" />que especifica as novas credenciais de cliente para esse resolvedor peer.</param>
        <param name="referralPolicy">
          <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />que especifica a nova diretiva de referência para esse resolvedor peer.</param>
        <summary>Inicializa a instância do resolvedor peer atual com o novo endereço de ponto de extremidade fornecida e configurações.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método simplesmente inicializa a instância existente do resolvedor peer; ele não cria um novo. Para criar um novo resolvedor de pares, chame o método de CreatePeerResolver no elemento de associação correspondente (por exemplo, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">A ID da malha ponto a ponto no qual o nó par está para ser registrado.</param>
        <param name="nodeAddress">O <see cref="T:System.ServiceModel.PeerNodeAddress" /> ser registrado com a malha ponto a ponto.</param>
        <param name="timeout">O período de tempo de espera para êxito antes de cancelar a tentativa de registrar com a malha ponto a ponto. Se a tentativa falhar, <see cref="T:System.TimeoutException" /> é gerado no par.</param>
        <summary>Registra um <see cref="T:System.ServiceModel.PeerNodeAddress" /> para uma malha de pontos específicos.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa a ID de registro. Esse objeto de ID de registro é passado para o <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> e <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> métodos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">A ID de malha do par no nível de malha na qual o <see cref="T:System.ServiceModel.PeerNodeAddress" /> objetos que representam nós participantes devem ser obtidos.</param>
        <param name="maxAddresses">O número de endereços de ponto de extremidade para retornar.</param>
        <param name="timeout">O período de tempo de espera para êxito antes de cancelar a tentativa de resolver os endereços de ponto de extremidade dentro da malha ponto a ponto. Se a tentativa falhar, <see cref="T:System.TimeoutException" /> é gerado no par.</param>
        <summary>Resolve a ID de malha fornecido para zero ou mais endereços de ponto de extremidade de nós que participam na malha de pontos.</summary>
        <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém <see cref="T:System.ServiceModel.PeerNodeAddress" /> objetos que representam nós que participam na malha de pontos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Uma ID de registro para o nó obtido por uma chamada anterior para <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
        <param name="timeout">O período de tempo de espera para a remoção bem-sucedida da operação de registro da malha ponto a ponto. Se a tentativa falhar, <see cref="T:System.TimeoutException" /> é gerado no par.</param>
        <summary>Remove a entrada de registro de um nó de uma malha de ponto a ponto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma identificação de registro é um token de resolvedor peer, que, no mínimo, representa a tupla de uma ID de nó par e a ID de malha. Este valor de ID deve ter sido obtido em uma chamada anterior para <xref:System.ServiceModel.PeerResolver.Register%2A>.  
  
 <xref:System.ServiceModel.PeerResolver.Unregister%2A>é chamado em dois casos específicos:  
  
-   Quando o <xref:System.ServiceModel.PeerNode> é deixar o par de malha (normalmente, como o resultado de fechar o último ponto a ponto canais ou host de serviço associado ele).  
  
-   Quando o <xref:System.ServiceModel.PeerNode> não pode localizar nenhum endereço de ponto de extremidade disponíveis de outros nós que participam na malha de pontos. Como resultado, o <xref:System.ServiceModel.PeerNode> não estiver mais acessível, e ele tentará chamar <xref:System.ServiceModel.PeerResolver.Unregister%2A> para cancelar o registro automaticamente a partir de <xref:System.ServiceModel.PeerResolver>. Se outros nós pares dentro da malha ficam disponíveis após o cancelamento do registro, o nó pode se registrar novamente chamando <xref:System.ServiceModel.PeerResolver.Register%2A> e obter uma nova ID de registro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Um token de ID de registro para o nó, obtido por uma chamada anterior<see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></param>
        <param name="updatedNodeAddress">O endereço do ponto de extremidade atualizadas (e outros endereços IP multihoming).</param>
        <param name="timeout">O período de tempo de espera para êxito antes de cancelar a tentativa de atualizar o registro do nó dentro da malha ponto a ponto. Se a tentativa falhar, <see cref="T:System.TimeoutException" /> é gerado no par.</param>
        <summary>Atualizações de <see cref="T:System.ServiceModel.PeerNodeAddress" /> para um nó registrado com uma malha de pontos específicos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.PeerResolver.Update%2A>chamado quando o endereço do <xref:System.ServiceModel.PeerNode> alterações no computador local.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
