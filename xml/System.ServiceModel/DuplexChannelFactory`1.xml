<Type Name="DuplexChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.DuplexChannelFactory&lt;TChannel&gt;">
  <TypeSignature Language="C#" Value="public class DuplexChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DuplexChannelFactory`1&lt;TChannel&gt; extends System.ServiceModel.ChannelFactory`1&lt;!TChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.DuplexChannelFactory`1" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory&lt;TChannel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TChannel">TChannel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TChannel">O tipo de canal produzido pela fábrica de canais.</typeparam>
    <summary>Fornece os meios para criar e gerenciar canais duplex de tipos diferentes que são usados pelos clientes para enviar e receber mensagens e para pontos de extremidade de serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um canal duplex permite que clientes e servidores para se comunicar uns com os outros independentemente para que qualquer um pode iniciar chamadas para o outro. Um serviço duplex pode enviar mensagens para o ponto de extremidade do cliente, fornecendo o comportamento do tipo de evento. Comunicação duplex ocorre quando um cliente estabelece uma sessão com um serviço e fornece o serviço com um canal em que o serviço pode enviar mensagens de volta ao cliente. Vários <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> métodos são usados para criar esses canais duplex. O padrão de mensagem duplex é um dos três padrões de mensagens disponíveis para [!INCLUDE[indigo1](~/includes/indigo1-md.md)] serviços. Os outros padrões de duas mensagens são unidirecionais e solicitação-resposta.  
  
 Para obter uma discussão geral sobre serviços de duplex que permitem que os clientes se conectem-se para o serviço, consulte [serviços Duplex](~/docs/framework/wcf/feature-details/duplex-services.md). Para uma estrutura de tópicos e uma discussão das etapas envolvidas na gravação um [!INCLUDE[indigo1](~/includes/indigo1-md.md)] aplicativo cliente usando uma fábrica de canais, consulte [como: usar o ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md). Para um procedimento que descreve como criar um [!INCLUDE[indigo1](~/includes/indigo1-md.md)] cliente em uma classe de cliente que implementa a interface de retorno de chamada para acessar um serviço que usa um padrão de mensagens duplex, consulte [como: serviços do Access com um contrato Duplex](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar uma fábrica de canais e usá-lo para criar e gerenciar canais.  
  
 [!code-csharp[S_CustomAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_customauthentication/cs/instance.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto que implementa o contrato de retorno de chamada para o serviço de destino por meio de programação, em vez de por meio de um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com contexto de instância especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo de instância de retorno de chamada especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e uma associação especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para o serviço de destino e para passar as informações de associação programaticamente, em vez de por meio de um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="binding" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpoint">O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> ao qual produzidos pela fábrica de canais se conectar.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de serviço que implementa o contrato de retorno de chamada para o serviço de destino e passar as informações de ponto de extremidade de serviço por meio de programação, em vez de usar um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpointConfigurationName">O nome de configuração usado para o ponto de extremidade.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e uma configuração especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de serviço que implementa o contrato de retorno de chamada para o serviço de destino e determinar as informações de ponto de extremidade de destino do arquivo de configuração do aplicativo cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="endpointConfigurationName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um contexto que implementa o contrato de retorno de chamada e uma associação especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para o serviço de destino e para passar as informações de associação programaticamente, em vez de por meio de um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="binding" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpoint">O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> ao qual produzidos pela fábrica de canais se conectar.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para o serviço de destino e para passar as informações de ponto de extremidade por meio de programação, em vez de por meio de um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e uma configuração especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para o serviço de destino e para determinar as informações de ponto de extremidade de destino do arquivo de configuração do aplicativo cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="endpointConfigurationName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo especificado da instância de retorno de chamada e associação.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="binding" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpoint">O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para o serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo especificado do ponto de extremidade de serviço e instância de retorno de chamada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo especificado da instância de retorno de chamada e configuração.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="endpointConfigurationName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um endereço de associação e o ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de serviço que implementa o contrato de retorno de chamada para o serviço de destino e passar a associação e informações de endereço programaticamente em vez de usar um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O endereço remoto que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o objeto de retorno de chamada especificada, associação e endereço remoto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">To be added.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um endereço de configuração e o ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de serviço que implementa o contrato de retorno de chamada para o serviço de destino, passar as informações de endereço programaticamente e determinar as informações restantes de ponto de extremidade de destino do arquivo de configuração do aplicativo cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" />, <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um endereço de associação e o ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para o serviço de destino e para passar as informações de associação e o endereço programaticamente, em vez de usar um arquivo de configuração do aplicativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O endereço remoto que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com contexto de instância especificada, associação e endereço remoto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com um objeto que implementa o contrato de retorno de chamada e um endereço de configuração e o ponto de extremidade especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para passar um objeto de contexto de instância que implementa o contrato de retorno de chamada para as informações de endereço do serviço de destino por meio de programação, passar as informações de endereço programaticamente e determinar as informações restantes de ponto de extremidade de destino do arquivo de configuração do aplicativo cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" />, <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo de instância de retorno de chamada, associação e endereço remoto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="remoteAddress">O endereço remoto que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo de instância de retorno de chamada, associação e endereço remoto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />, <paramref name="binding" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">O <see cref="T:System.Type" /> que fornece a instância de retorno de chamada que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <param name="remoteAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> classe com o tipo de instância de retorno de chamada, a configuração e o endereço remoto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" />, <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal duplex do tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackObject">O <see cref="T:System.Object" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public override TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <param name="via">O <see cref="T:System.Uri" /> que contém o endereço de transporte para o qual a mensagem é enviada.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal duplex do tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="address">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal duplex do tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="endpointConfigurationName">O nome usado para a configuração de ponto de extremidade.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackObject">O <see cref="T:System.Object" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="endpointAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="endpointAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public virtual TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="address">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <param name="via">O <see cref="T:System.Uri" /> que contém o endereço de transporte para o qual a mensagem é enviada.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackObject">O <see cref="T:System.Object" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="endpointAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <param name="via">O <see cref="T:System.Uri" /> que contém o endereço de transporte para o qual a mensagem é enviada.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">O <see cref="T:System.ServiceModel.InstanceContext" /> que o cliente usa para escutar mensagens do serviço conectado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> usado para se conectar ao serviço por produzidas pela fábrica de canais.</param>
        <param name="endpointAddress">O <see cref="T:System.ServiceModel.EndpointAddress" /> que fornece o local do serviço.</param>
        <param name="via">O <see cref="T:System.Uri" /> que contém o endereço de transporte para o qual a mensagem é enviada.</param>
        <summary>Cria um canal duplex entre um serviço e uma instância de retorno de chamada no cliente.</summary>
        <returns>Um canal de tipo <paramref name="TChannel" />, o parâmetro genérico para a fábrica, entre o cliente e o serviço.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" />or <paramref name="callbackInstance" />. UserObject é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
