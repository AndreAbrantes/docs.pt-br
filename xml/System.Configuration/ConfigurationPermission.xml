<Type Name="ConfigurationPermission" FullName="System.Configuration.ConfigurationPermission">
  <TypeSignature Language="C#" Value="public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConfigurationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece uma estrutura de permissão que permite métodos ou classes para acessar arquivos de configuração.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationPermission> classe fornece uma estrutura de permissão que permite métodos ou classes para acessar arquivos de configuração. Além disso, <xref:System.Configuration.ConfigurationPermission> fornece maneiras de resolver vários valores de permissões por meio de métodos como <xref:System.Configuration.ConfigurationPermission.Union%2A> e <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">O nível de permissão para conceder.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationPermission" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor de <paramref name="state" /> não é nem <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> nem <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um novo <see cref="T:System.Configuration.ConfigurationPermission" /> objeto com o mesmo nível de permissão.</summary>
        <returns>Um novo <see cref="T:System.Configuration.ConfigurationPermission" /> com o mesmo nível de permissão.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">O elemento de configuração do qual o estado da permissão é lido.</param>
        <summary>Lê o valor do estado de permissão do XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O <see langword="unrestricted" /> de atributo para o determinado <paramref name="securityElement" /> não é nem <see langword="true" /> nem <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">O objeto que contém as permissões para executar a intersecção com.</param>
        <summary>Retorna a interseção lógica entre o <see cref="T:System.Configuration.ConfigurationPermission" /> objeto e um determinado objeto que implementa o <see cref="T:System.Security.IPermission" /> interface.</summary>
        <returns>A interseção lógica entre o <see cref="T:System.Configuration.ConfigurationPermission" /> e um determinado objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora a assinatura do método aceita qualquer objeto que implementa o <xref:System.Security.IPermission> interface, uma <xref:System.ArgumentException> exceção será lançada se chamar o <xref:System.Object.GetType%2A> método no objeto referenciado pelo `target` parâmetro de retorno não <xref:System.Configuration.ConfigurationPermission?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">O objeto a ser comparado.</param>
        <summary>Compara o <see cref="T:System.Configuration.ConfigurationPermission" /> objeto com um objeto que implementa o <see cref="T:System.Security.IPermission" /> interface.</summary>
        <returns>
          <see langword="true" />Se o estado de permissão é igual; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora a assinatura do método aceita qualquer objeto que implementa o <xref:System.Security.IPermission> interface, uma <xref:System.ArgumentException> exceção será lançada se chamar o <xref:System.Object.GetType%2A> método no objeto referenciado pelo `target` parâmetro de retorno não <xref:System.Configuration.ConfigurationPermission?displayProperty=nameWithType>.  
  
 Se o objeto referenciado pelo `target` parâmetro é `null`, a comparação é feita entre o estado de permissão do <xref:System.Configuration.ConfigurationPermission> objeto e o <xref:System.Security.Permissions.PermissionState.None> valor o <xref:System.Security.Permissions.PermissionState> enumeração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se o estado de permissão para o <see cref="T:System.Configuration.ConfigurationPermission" /> objeto é o <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> valor o <see cref="T:System.Security.Permissions.PermissionState" /> enumeração.</summary>
        <returns>
          <see langword="true" />Se o estado de permissão para o <see cref="T:System.Configuration.ConfigurationPermission" /> é o <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> valor <see cref="T:System.Security.Permissions.PermissionState" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um <see cref="T:System.Security.SecurityElement" /> objeto com valores de atributo com base na atual <see cref="T:System.Configuration.ConfigurationPermission" /> objeto.</summary>
        <returns>Um <see cref="T:System.Security.SecurityElement" /> com valores de atributo com base na atual <see cref="T:System.Configuration.ConfigurationPermission" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">O objeto para executar a união com.</param>
        <summary>Retorna a união lógica do <see cref="T:System.Configuration.ConfigurationPermission" /> objeto e um objeto que implementa o <see cref="T:System.Security.IPermission" /> interface.</summary>
        <returns>A união lógica do <see cref="T:System.Configuration.ConfigurationPermission" /> e um objeto que implementa <see cref="T:System.Security.IPermission" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />não é digitado como <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
