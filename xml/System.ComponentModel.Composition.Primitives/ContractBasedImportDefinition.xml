<Type Name="ContractBasedImportDefinition" FullName="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
  <TypeSignature Language="C#" Value="public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBasedImportDefinition extends System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ImportDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma importação que é exigida por um <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> objeto e que pode especificar um nome de contrato e metadados.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContractBasedImportDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="contractName">O nome do contrato do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objeto exigido pela definição de importação.</param>
        <param name="requiredTypeIdentity">A identidade de tipo do tipo de exportação esperado. Use o <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> método para gerar uma identidade de um determinado tipo. Se nenhum tipo específico for necessário, use <see langword="null" />.</param>
        <param name="requiredMetadata">Uma coleção de pares chave/valor que contêm os nomes de metadados e os tipos necessários para a definição de importação; ou <see langword="null" /> para definir o <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> propriedade vazio <see cref="T:System.Collections.Generic.IEnumerable`1" /> coleção.</param>
        <param name="cardinality">Um dos valores de enumeração que indica a cardinalidade de <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objetos exigidos pela definição de importação.</param>
        <param name="isRecomposable">
          <see langword="true" />para especificar que a definição de importação pode ser atendida várias vezes durante o tempo de vida de um <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; caso contrário, <see langword="false" />.</param>
        <param name="isPrerequisite">
          <see langword="true" />para especificar que a definição de importação deve ser atendidas antes de uma <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> podem iniciar produzindo exportados objetos; caso contrário, <see langword="false" />.</param>
        <param name="requiredCreationPolicy">Um valor que indica que o importador exige uma política específica de criação para as exportações usadas para satisfazer essa importação. Se nenhuma política de criação específico for necessária, o padrão é <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> com o nome de contrato especificado, a identidade do tipo necessário, os metadados necessários, cardinalidade e política de criação de classe e indica se a definição de importação é pode ser recomposta ou um pré-requisito.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contractName" /> é uma cadeia de caracteres vazia ("").  
  
 -ou-  
  
 <paramref name="requiredMetadata" />contém um elemento que é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="cardinality" /> não é um dos valores <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contractName">O nome do contrato do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objeto exigido pela definição de importação.</param>
        <param name="requiredTypeIdentity">A identidade de tipo do tipo de exportação esperado. Use o <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> método para gerar uma identidade de um determinado tipo. Se nenhum tipo específico for necessário, use <see langword="null" />.</param>
        <param name="requiredMetadata">Uma coleção de pares chave/valor que contêm os nomes de metadados e os tipos necessários para a definição de importação; ou <see langword="null" /> para definir o <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> propriedade vazio <see cref="T:System.Collections.Generic.IEnumerable`1" /> coleção.</param>
        <param name="cardinality">Um dos valores de enumeração que indica a cardinalidade de <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objetos exigidos pela definição de importação.</param>
        <param name="isRecomposable">
          <see langword="true" />para especificar que a definição de importação pode ser atendida várias vezes durante o tempo de vida de um <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; caso contrário, <see langword="false" />.</param>
        <param name="isPrerequisite">
          <see langword="true" />para especificar que a definição de importação deve ser atendidas antes de uma <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> podem iniciar produzindo exportados objetos; caso contrário, <see langword="false" />.</param>
        <param name="requiredCreationPolicy">Um valor que indica que o importador exige uma política específica de criação para as exportações usadas para satisfazer essa importação. Se nenhuma política de criação específico for necessária, o padrão é <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</param>
        <param name="metadata">Os metadados associados a essa importação.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> com o nome de contrato especificado, identidade do tipo necessário, os metadados necessários e opcionais, cardinalidade e política de criação de classe e indica se a definição de importação é pode ser recomposta ou um pré-requisito.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contractName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contractName" /> é uma cadeia de caracteres vazia ("").  
  
 -ou-  
  
 <paramref name="requiredMetadata" />contém um elemento que é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="cardinality" /> não é um dos valores <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Constraint">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; Constraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; Constraint" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma expressão que define as condições que devem ser atendidas para satisfazer a importação descrita por esta definição de importação.</summary>
        <value>Uma expressão que contém uma <see cref="T:System.Func`2" /> objeto que define as condições que devem ser atendidas para a <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> para ser atendida por um <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstraintSatisfiedBy">
      <MemberSignature Language="C#" Value="public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsConstraintSatisfiedBy(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition">A definição de exportação para testar.</param>
        <summary>Retorna um valor que indica se a restrição representada por esse objeto é atendida pela exportação representada pela definição de exportação especificado.</summary>
        <returns>
          <see langword="true" />Se a restrição for atendida; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica que o importador requer um determinado <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> para as exportações usadas para satisfazer essa importação.</summary>
        <value>Um dos seguintes valores:  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, se o importador de não exigir um determinado <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />para exigir que todas as exportações usadas devem ser compartilhadas por todos os importadores no contêiner.  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />para exigir que todas as exportações usadas devem ser não compartilhado no contêiner. Nesse caso, cada importador recebe uma instância separada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; RequiredMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; RequiredMetadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os nomes de metadados da exportação exigido pela definição de importação.</summary>
        <value>Uma coleção de <see cref="T:System.String" /> objetos que contêm os nomes de metadados do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objetos necessários para o <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />. O padrão é vazio <see cref="T:System.Collections.Generic.IEnumerable`1" /> coleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituições dessa propriedade nunca devem retornar `null` ou retornar um <xref:System.Collections.Generic.IEnumerable%601> coleção que contém um elemento que é `null`. Se a definição não contém metadados necessários, retornar vazio <xref:System.Collections.Generic.IEnumerable%601> coleção em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredTypeIdentity">
      <MemberSignature Language="C#" Value="public virtual string RequiredTypeIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredTypeIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo esperado da exportação que corresponde a este <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</summary>
        <value>Uma cadeia de caracteres que é gerada ao chamar o <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> método no tipo de espera de importação. Se o valor for <see langword="null" />, essa importação não espera um tipo específico.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a representação de cadeia de caracteres desse objeto <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</summary>
        <returns>A representação de cadeia de caracteres desse objeto <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
