<Type Name="PrivateFontCollection" FullName="System.Drawing.Text.PrivateFontCollection">
  <TypeSignature Language="C#" Value="public sealed class PrivateFontCollection : System.Drawing.Text.FontCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrivateFontCollection extends System.Drawing.Text.FontCollection" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Text.PrivateFontCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Text.FontCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece um conjunto de famílias de fontes criado por meio de arquivos de fonte fornecidos pelo aplicativo cliente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Drawing.Text.PrivateFontCollection> classe permite que os aplicativos instalar uma versão particular de uma fonte existente sem a necessidade de substituir a versão do sistema da fonte. Por exemplo, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] pode criar uma versão particular da fonte Arial além de fonte Arial usado pelo sistema. <xref:System.Drawing.Text.PrivateFontCollection>também pode ser usado para instalar fontes que não existem no sistema operacional. Essa é uma instalação de fonte temporário que não afeta a coleção de sistema instalado. Para ver a coleção instalada, use o <xref:System.Drawing.Text.InstalledFontCollection> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrivateFontCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFontFile">
      <MemberSignature Language="C#" Value="public void AddFontFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFontFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Um <see cref="T:System.String" /> que contém o nome do arquivo da fonte a ser adicionado.</param>
        <summary>Adiciona uma fonte do arquivo especificado a este <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplicativos de formulários do Windows oferecem suporte a fontes TrueType e tem suporte limitado para as fontes OpenType. Se você tentar usar uma fonte que não é suportada, como uma fonte OpenType sem suporte ou uma fonte de Bitmap, ocorrerá uma exceção. O <xref:System.Drawing.Text.PrivateFontCollection.AddFontFile%2A> não tem suporte em sistemas operacionais anteriores ao [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Ao usar uma fonte particular em sistemas operacionais anteriores ao [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)], a fonte padrão, normalmente o Microsoft Sans Serif, será substituída.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Não há suporte para a fonte especificada ou o arquivo de fonte não pode ser encontrado.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMemoryFont">
      <MemberSignature Language="C#" Value="public void AddMemoryFont (IntPtr memory, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMemoryFont(native int memory, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="memory">O endereço de memória da fonte a ser adicionada.</param>
        <param name="length">O tamanho da memória da fonte a ser adicionada.</param>
        <summary>Adiciona uma fonte contida na memória do sistema a este <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar a fonte de memória, o texto em um controle deve ser processado com o GDI+. Use o <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> método, passando `true`, configurar a renderização de GDI+ no aplicativo ou em controles individuais, definindo o controle <xref:System.Windows.Forms.GroupBox.UseCompatibleTextRendering%2A> propriedade `true`. Alguns controles não podem ser renderizados com GDI+.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
