<Type Name="CompilerMarshalOverride" FullName="System.Runtime.CompilerServices.CompilerMarshalOverride">
  <TypeSignature Language="C#" Value="public static class CompilerMarshalOverride" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CompilerMarshalOverride extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CompilerMarshalOverride" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indica que a instância modificada de uma variável é diferente de seu tipo true durante o marshaling. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> classe permite que o common language runtime para empacotar usando os tamanhos corretos.  
  
 Alguns comportamentos do common language runtime são incompatíveis com alguns idiomas. Por exemplo, o C++ trata as variáveis booleanas como valores de byte único, enquanto o common language runtime empacota-os valores como quatro bytes para corresponder a `BOOLEAN` tipo definido pela API do Microsoft Win32.  Para solucionar esses problemas, o compilador do C++ emite esse modificador em qualquer `wchar_t` ou `bool` parâmetro ou retorno de função.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
