<Type Name="ServerWebConfig" FullName="System.EnterpriseServices.Internal.ServerWebConfig">
  <TypeSignature Language="C#" Value="public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerWebConfig extends System.Object implements class System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IServerWebConfig</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Cria um arquivo Web. config para um aplicativo habilitado para SOAP COM+. Também é possível adicionar entradas de componente para o arquivo que está sendo publicado no aplicativo de interfaces de COM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.EnterpriseServices.Internal.ServerWebConfig> classe é usada para criar um arquivo Web. config durante a criação de uma raiz virtual no serviços de informações da Internet (IIS) 6.0 para um aplicativo habilitado para SOAP COM+. Ela também pode adicionar elementos XML para o arquivo Web. config para interfaces de componentes que estão sendo adicionados ao aplicativo.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig>é usado internamente pelo .NET Framework. Você não precisa usá-lo diretamente no seu código.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerWebConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="WkoMode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">O caminho do arquivo Web. config existente.</param>
        <param name="AssemblyName">O nome do assembly que contém o tipo que está sendo adicionado.</param>
        <param name="TypeName">O nome do tipo que está sendo adicionado.</param>
        <param name="ProgId">O identificador programático para o tipo que está sendo adicionado.</param>
        <param name="WkoMode">Uma constante de cadeia de caracteres que corresponde ao nome de um membro do <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> enumeração, que indica como um objeto conhecido é ativado.</param>
        <param name="Error">Uma cadeia de caracteres no qual uma mensagem de erro pode ser gravada.</param>
        <summary>Adiciona os elementos XML de um arquivo Web. config para uma interface COM que está sendo publicada em um aplicativo habilitado para SOAP COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para o tipo especificado, o <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> método adiciona o arquivo Web. config a `<wellknown>` e `<activated>` elementos como filhos do `<service>` elemento com o XPath a seguir:  
  
 `/configuration/system.runtime.remoting/application/service`  
  
 O `AssemblyName`, `TypeName`, `ProgId`, e `WkoMode` parâmetros são incorporados nos valores de atributo dos dois elementos adicionados.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>não deve ser chamado diretamente. Em vez disso, chame o <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> método.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FilePrefix, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FilePrefix, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FilePrefix" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">A pasta na qual o arquivo de configuração deve ser criado.</param>
        <param name="FilePrefix">O valor de cadeia de caracteres "Web", para que uma extensão é adicionada.</param>
        <param name="Error">Uma cadeia de caracteres no qual uma mensagem de erro pode ser gravada.</param>
        <summary>Cria um arquivo Web. config para um aplicativo habilitado para SOAP COM+ para que o arquivo está pronto para ter elementos XML adicionados para interfaces COM que está sendo publicados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> método cria um arquivo Web. config que contém a hierarquia para um elemento vazio com o XPath a seguir:  
  
```  
/configuration/system.runtime.remoting/application/service  
```  
  
 Em vez de criar uma instância uma <xref:System.EnterpriseServices.Internal.ServerWebConfig> o objeto de classe e chamar <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> , ligue para o <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A> método.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
