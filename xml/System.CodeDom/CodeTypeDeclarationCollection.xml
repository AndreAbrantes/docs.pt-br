<Type Name="CodeTypeDeclarationCollection" FullName="System.CodeDom.CodeTypeDeclarationCollection">
  <TypeSignature Language="C#" Value="public class CodeTypeDeclarationCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeDeclarationCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeDeclarationCollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma coleção de objetos <see cref="T:System.CodeDom.CodeTypeDeclaration" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A classe de <xref:System.CodeDom.CodeTypeDeclarationCollection> fornece um objeto simples de coleção que pode ser usado para armazenar um conjunto de objetos de <xref:System.CodeDom.CodeTypeDeclaration> .  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection> classe. O exemplo cria uma nova instância da classe e usa vários métodos para adicionar instruções à coleção, retornar seu índice e adicionar ou remover atributos em um ponto de índice específico.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como criar uma instância vazia do <xref:System.CodeDom.CodeTypeDeclarationCollection> classe.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#2)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#2)]
 [!code-vb[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection (System.CodeDom.CodeTypeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeDeclaration[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">Uma matriz de <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objetos com a qual inicializar a coleção.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> classe que contém a matriz especificada de <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objetos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection (System.CodeDom.CodeTypeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeDeclarationCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">Um <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> objeto com a qual inicializar a coleção.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> classe que contém os elementos da coleção de origem especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> a ser adicionado.</param>
        <summary>Adiciona o objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> especificado à coleção.</summary>
        <returns>O índice no qual o novo elemento foi inserido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.Add%2A> método para adicionar um <xref:System.CodeDom.CodeTypeDeclaration> o objeto para um <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeTypeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeTypeDeclaration[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">Uma matriz do tipo <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que contém os objetos para adicionar à coleção.</param>
        <summary>Copia os elementos da matriz especificada ao final da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.AddRange%28System.CodeDom.CodeTypeDeclaration%5B%5D%29> sobrecarga do método para adicionar uma matriz de <xref:System.CodeDom.CodeTypeDeclaration> objetos para um <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeTypeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeTypeDeclarationCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclarationCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">Um <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> objeto que contém os objetos para adicionar à coleção.</param>
        <summary>Adiciona o conteúdo de outro <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> objeto ao final da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.AddRange%28System.CodeDom.CodeTypeDeclarationCollection%29> sobrecarga do método para adicionar <xref:System.CodeDom.CodeTypeDeclaration> objetos de um <xref:System.CodeDom.CodeTypeDeclarationCollection> para outro <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto a ser pesquisado na coleção.</param>
        <summary>Obtém um valor que indica se a coleção contém especificado <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto.</summary>
        <returns>
          <see langword="true" />Se a coleção contém o objeto especificado; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.Contains%2A> método para encontrar um <xref:System.CodeDom.CodeTypeDeclaration> do objeto em um <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeTypeDeclaration[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeTypeDeclaration[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.CopyTo(System.CodeDom.CodeTypeDeclaration[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeTypeDeclaration[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">O unidimensional <see cref="T:System.Array" /> que é o destino dos valores copiados da coleção.</param>
        <param name="index">O índice de matriz no qual começar a inserir.</param>
        <summary>Copia os elementos de <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> objeto para um unidimensional <see cref="T:System.Array" /> instância, iniciando no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.CopyTo%2A> método para copiar o conteúdo de um <xref:System.CodeDom.CodeTypeDeclarationCollection> objeto para uma matriz, começando com o valor de índice especificado.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A matriz de destino é multidimensional.  
  
 -ou-  
  
 O número de elementos no <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> é maior que o espaço disponível entre o índice da matriz de destino especificado pelo <paramref name="index" /> parâmetro e o fim da matriz de destino.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="array" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="index" /> é menor do que o índice mínimo da matriz de destino.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.CodeDom.CodeTypeDeclaration" /> a ser localizado na coleção.</param>
        <summary>Obtém o índice do <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto o <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />, se ele existe na coleção.</summary>
        <returns>O índice do objeto especificado, se ele for encontrado na coleção; Caso contrário, retornará -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir recupera <xref:System.CodeDom.CodeTypeDeclaration> entradas de um <xref:System.CodeDom.CodeTypeDeclarationCollection> de objeto e exibe os nomes e os índices retornados pelo <xref:System.CodeDom.CodeTypeDeclarationCollection.IndexOf%2A> método.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero onde o objeto especificado deve ser inserido.</param>
        <param name="value">O <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto a ser inserido.</param>
        <summary>Insere especificado <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.Insert%2A> método para inserir um <xref:System.CodeDom.CodeTypeDeclaration> do objeto em um <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclarationCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice da coleção para acessar.</param>
        <summary>Obtém ou define o <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objeto no índice especificado na coleção.</summary>
        <value>Um <see cref="T:System.CodeDom.CodeTypeDeclaration" /> em cada índice válido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade é um indexador que pode ser usado para acessar a coleção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="index" /> parâmetro está fora do intervalo válido de índices para a coleção.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Remove(System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.CodeDom.CodeTypeDeclaration" /> a ser removido da coleção.</param>
        <summary>Remove o objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeTypeDeclarationCollection.Remove%2A> método para excluir um <xref:System.CodeDom.CodeTypeDeclaration> do objeto de um <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto especificado não foi encontrado na coleção.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
