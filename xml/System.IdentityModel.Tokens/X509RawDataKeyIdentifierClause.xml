<Type Name="X509RawDataKeyIdentifierClause" FullName="System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
  <TypeSignature Language="C#" Value="public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509RawDataKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma cláusula do identificador de chave que identifica um token de segurança <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> usando os dados brutos do certificado X.509.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, o <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado. Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não. Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídas no cabeçalho de segurança de uma mensagem SOAP. Normalmente, essas referências confirmar a autenticidade do token de segurança emitido. Use o <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> a referência de classe um <xref:System.IdentityModel.Tokens.X509SecurityToken> token de segurança usando os dados brutos do certificado x. 509. O <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> método retorna os dados brutos.  
  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]suporta os seguintes tipos de referências de token de segurança do <xref:System.IdentityModel.Tokens.X509SecurityToken> tokens de segurança.  
  
-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (byte[] certificateRawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] certificateRawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateRawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="certificateRawData">Uma matriz de <see cref="T:System.Byte" /> que contém os dados brutos de um certificado x. 509.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> classe usando os dados brutos especificados de um certificado x. 509.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateRawData" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="certificateRawData" /> tem tamanho zero.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contém o certificado X.509.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />, usando o certificado X.509 especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os dados brutos são obtidos para o `certificate` parâmetro usando o <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public override bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se uma chave pode ser criada a partir dos dados brutos do certificado x. 509 ou uma matriz de bytes que é especificado no construtor.</summary>
        <value>
          <see langword="true" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar a chave, chame o <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma chave dos dados brutos da matriz de bytes ou certificado de x. 509 que é especificado no construtor.</summary>
        <returns>Um <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> que contém a chave associada ao certificado x. 509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetX509RawData">
      <MemberSignature Language="C#" Value="public byte[] GetX509RawData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetX509RawData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém os dados brutos associados ao certificado x. 509.</summary>
        <returns>Uma matriz de <see cref="T:System.Byte" /> que contém os dados brutos associados ao certificado x. 509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contém o certificado x. 509 a ser comparado.</param>
        <summary>Retorna um valor que indica se o identificador de chave para essa instância é equivalente para o certificado x. 509 especificado.</summary>
        <returns>
          <see langword="true" />Se <paramref name="certificate" /> tem os dados brutos que corresponda a instância atual; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> chamadas de método de <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> método para o `certificate` e, em seguida, compara que a instância atual.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o objeto atual.</summary>
        <returns>Um <see cref="T:System.String" /> que representa o objeto atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> método retorna os dados brutos é codificado em Base 64.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
