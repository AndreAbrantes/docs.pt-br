<Type Name="X509SigningCredentials" FullName="System.IdentityModel.Tokens.X509SigningCredentials">
  <TypeSignature Language="C#" Value="public class X509SigningCredentials : System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SigningCredentials extends System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SigningCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SigningCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um token X.509 usado como credencial de assinatura.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">O certificado x. 509.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> classe com base em certificado x. 509 especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, este construtor usa um <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> para gerar o identificador de chave de segurança.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.IdentityModel.Tokens.SecurityKeyIdentifier ski);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.IdentityModel.Tokens.SecurityKeyIdentifier ski) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="certificate">O certificado x. 509.</param>
        <param name="ski">O identificador de chave de segurança.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> classe com base em x. 509 certificado e segurança chave identificador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os tipos de cláusula de identificador de chave com suporte pelo Windows Communication Foundation para gerar um identificador de chave de segurança que faz referência a um <xref:System.IdentityModel.Tokens.X509SecurityToken> são <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, e <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>. No entanto, para habilitar cenários personalizados, este construtor não executa nenhuma validação nos tipos de cláusula que foram usados para gerar o identificador de chave de segurança fornecido no `ski` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate">O certificado x. 509.</param>
        <param name="signatureAlgorithm">O algoritmo de assinatura.</param>
        <param name="digestAlgorithm">O algoritmo digest.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> classe com base em certificado x. 509 especificado, o algoritmo de assinatura e o algoritmo digest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, este construtor usa um <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> para gerar o identificador de chave de segurança.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.IdentityModel.Tokens.SecurityKeyIdentifier ski, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.IdentityModel.Tokens.SecurityKeyIdentifier ski, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate">O certificado x. 509.</param>
        <param name="ski">O identificador de chave de segurança.</param>
        <param name="signatureAlgorithm">O algoritmo de assinatura.</param>
        <param name="digestAlgorithm">O algoritmo digest.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> classe baseia o certificado x. 509 especificado, o identificador de chave de segurança, o algoritmo de assinatura e o algoritmo digest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os tipos de cláusula de identificador de chave com suporte pelo Windows Communication Foundation para gerar um identificador de chave de segurança que faz referência a um <xref:System.IdentityModel.Tokens.X509SecurityToken> são <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, e <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>. No entanto, para habilitar cenários personalizados, este construtor não executa nenhuma validação nos tipos de cláusula que foram usados para gerar o identificador de chave de segurança fornecido no `ski` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SigningCredentials.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o certificado x. 509.</summary>
        <value>O certificado x. 509.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
