<Type Name="SamlEvidence" FullName="System.IdentityModel.Tokens.SamlEvidence">
  <TypeSignature Language="C#" Value="public class SamlEvidence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlEvidence extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlEvidence" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa a evidência usada para renderizar uma decisão de autorização para um <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> token de segurança.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken>tokens de segurança especificam suas declarações usando asserções SAML, o que podem ser especificada quando a entidade foi autorizada a acessar um recurso específico. As declarações em uma asserção de SAML são representadas por instruções de SAML. A especificação de SAML define um conjunto de tipos de declaração SAML e um deles é um <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>. Um <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> declara uma decisão de autorização sobre acesso de assunto para o recurso especificado foi feita. O <xref:System.IdentityModel.Tokens.SamlEvidence> classe representa a evidência usada por uma autoridade de SAML para renderizar uma decisão de autorização para um <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>. A evidência é especificada como declarações SAML ou uma referência a asserção de SAML, que se referir ao <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A> e <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A> propriedades, respectivamente.  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  
  
 <xref:System.IdentityModel.Tokens.SamlAssertion>  
  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlEvidence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SamlEvidence" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor inicializa o <xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A> propriedade `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlEvidence (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAssertion&gt; assertions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlAssertion&gt; assertions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertions" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAssertion&gt;" />
      </Parameters>
      <Docs>
        <param name="assertions">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do tipo <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Define a propriedade <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> classe usando o conjunto de declarações SAML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor quando você tem uma coleção de <xref:System.IdentityModel.Tokens.SamlAssertion> objetos, mas nenhuma referência de asserção SAML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assertions" />contém um membro que é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlEvidence (System.Collections.Generic.IEnumerable&lt;string&gt; assertionIdReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; assertionIdReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertionIdReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assertionIdReferences">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do tipo <see cref="T:System.String" /> que contém um identificador para uma asserção SAML que especifica a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Define a propriedade <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> classe usando o conjunto especificado de referências de asserção SAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor quando você tem uma coleção de referências de asserção SAML, mas não <xref:System.IdentityModel.Tokens.SamlAssertion> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assertionIdReferences" />contém um membro que é <see langword="null" /> ou vazio.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlEvidence (System.Collections.Generic.IEnumerable&lt;string&gt; assertionIdReferences, System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAssertion&gt; assertions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; assertionIdReferences, class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlAssertion&gt; assertions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assertionIdReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assertions" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAssertion&gt;" />
      </Parameters>
      <Docs>
        <param name="assertionIdReferences">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do tipo <see cref="T:System.String" /> que contém um identificador para uma asserção SAML que especifica a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Define a propriedade <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />.</param>
        <param name="assertions">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do tipo <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Define a propriedade <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> classe usando o conjunto especificado de referências de asserção SAML e asserções SAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor quando você tiver uma coleção de referências de asserção SAML e uma coleção de <xref:System.IdentityModel.Tokens.SamlAssertion> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assertionIdReferences" />contém um membro que é <see langword="null" /> ou vazio.  
  
 -ou-  
  
 <paramref name="assertions" />contém um membro que é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="assertionIdReferences" />e <paramref name="assertions" /> são ambos <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertionIdReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AssertionIdReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AssertionIdReferences" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de identificadores de asserções SAML que especificam a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</summary>
        <value>Um <see cref="T:System.Collections.Generic.IList`1" /> do tipo <see cref="T:System.String" /> que contém identificadores de asserções SAML que especificam a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A> propriedade corresponde do `<saml:AssertionIDReference>` elemento que é definido no protocolo e asserções para a especificação do OASIS SAML Security Assertion Markup Language ().  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assertions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlAssertion&gt; Assertions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Tokens.SamlAssertion&gt; Assertions" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlAssertion&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de asserções SAML que compõem a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</summary>
        <value>Um <see cref="T:System.Collections.Generic.IList`1" /> do tipo <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A> propriedade corresponde do `<saml:Assertion>` elemento que é definido no protocolo e asserções para a especificação do OASIS SAML Security Assertion Markup Language ().  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se as propriedades desta instância são somente leitura.</summary>
        <value>
          <see langword="true" />Se as propriedades desta instância são somente leitura; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para tornar essa instância do <xref:System.IdentityModel.Tokens.SamlEvidence> chamada de classe somente leitura, o <xref:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que essa instância para ser somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly%2A> método é chamado, o <xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A> está definida como `true` e propriedades desta instância não podem ser definidas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> para ler a evidência.</param>
        <param name="samlSerializer">Um <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> que é capaz de ler a declaração de autorização de SAML que é definido na especificação de SAML elementos XML.</param>
        <param name="keyInfoSerializer">Um <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> que lê o <see langword="KeyInfo" /> cláusula da assinatura digital.</param>
        <param name="resolver">To be added.</param>
        <summary>Lê a evidência do leitor XML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Tokens.SamlEvidence.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> método define as propriedades a seguir:  
  
-   <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>  
  
-   <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="samlSerializer" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <paramref name="reader" />refere-se a um elemento XML que não tem pelo menos um <see langword="&lt;saml:AssertionIDReference&gt;" /> ou <see langword="&lt;saml:Assertion&gt;" /> elemento filho.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> para gravar a evidência.</param>
        <param name="samlSerializer">Um <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> que é capaz de gravar elementos XML em uma asserção SAML.</param>
        <param name="keyInfoSerializer">Um <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> que é capaz de gravar <see langword="KeyInfo" /> cláusulas.</param>
        <summary>Grava a evidência para o serializador XML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IdentityModel.Tokens.SamlEvidence.WriteXml%28System.Xml.XmlDictionaryWriter%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%29> método grave atual <xref:System.IdentityModel.Tokens.SamlEvidence> instância em um `<saml:Evidence>` elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> é <see langword="null" />.  
  
 -ou-  
  
 <paramref name="samlSerializer" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
