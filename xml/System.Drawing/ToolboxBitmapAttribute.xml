<Type Name="ToolboxBitmapAttribute" FullName="System.Drawing.ToolboxBitmapAttribute">
  <TypeSignature Language="C#" Value="public class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolboxBitmapAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ToolboxBitmapAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite especificar um ícone para representar um controle em um contêiner, como o Designer de Formulário do Microsoft Visual Studio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode aplicar um <xref:System.Drawing.ToolboxBitmapAttribute> a um controle para que os contêineres, como o Microsoft Visual Studio Designer de formulário podem recuperar um ícone que representa o controle. O bitmap para o ícone pode estar em um arquivo por si só ou inserido no assembly que contém o controle. O tamanho do bitmap que você inserir no assembly de controle (ou armazenamento em um arquivo separado) deve ter 16 por 16. O <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> método de um <xref:System.Drawing.ToolboxBitmapAttribute> objeto pode retornar a imagem pequena 16 por 16 ou uma imagem de 32 x 32 grandes que ele cria, dimensionando a imagem pequena.  
  
 Se você quiser usar versões diferentes do seus ícones com versões diferentes do seu assembly, você não precisa modificar o <xref:System.Drawing.ToolboxBitmapAttribute> para cada versão. Em vez disso, você pode declarar o assembly com um <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> ou um <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>e especifique um <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> valor de configuração para cada versão do assembly. Nesse caso, um nome de arquivo é indicado por um <xref:System.Drawing.ToolboxBitmapAttribute> é interpretado com o sufixo de bitmap acrescentado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.ToolboxBitmapAttribute> classe para definir `stop.bmp` como o ícone da caixa de ferramentas para a `StopSignControl`. Este exemplo pressupõe a existência de um bitmap de 16 por 16 pixels denominado `stop.bmp` em c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (string imageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFile">O nome de um arquivo que contém um bitmap de 16 por 16.</param>
        <summary>Inicializa uma nova <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto com uma imagem de um arquivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> construtor para definir `stop.bmp` como o ícone da caixa de ferramentas para a `StopSignControl`. Este exemplo pressupõe a existência de um bitmap de 16 por 16 pixels denominado `stop.bmp` em c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">Um <see cref="T:System.Type" /> cuja definição de assembly é pesquisada para o recurso de bitmap.</param>
        <summary>Inicializa uma nova <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto com base em um 16x16 bitmap que será inserido como um recurso em um assembly específico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor procura um recurso inserido no assembly que define o tipo especificado pelo `t` parâmetro. O construtor procura um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição da classe especificada o `t` parâmetro. Por exemplo, se ControlA estiver em NamespaceA em AssemblyA.dll, o construtor de pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> construtor para definir o ícone do controle button para o ícone da caixa de ferramentas para um <xref:System.Windows.Forms.UserControl> chamado `StopSignControl3`.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">Um <see cref="T:System.Type" /> cuja definição de assembly é pesquisada para o recurso de bitmap.</param>
        <param name="name">O nome do recurso de bitmap inserido.</param>
        <summary>Inicializa uma nova <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto com base em um bitmap de 16 por 16 será inserido como um recurso em um assembly específico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor procura um recurso inserido no assembly que define o tipo especificado pelo `t` parâmetro. O construtor procura um recurso chamado namespace.name, onde o namespace é o namespace que contém a definição da classe especificada o `t` parâmetro. Por exemplo, suponha que ControlA é uma classe em NamespaceA em AssemblyA.dll e passou "MyBitmap.bmp" para o `name` parâmetro. Em seguida, o construtor de pesquisa AssemblyA.dll um recurso chamado NamespaceA.MyBitmap.bmp.  
  
   
  
## Examples  
 ' O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> construtor para definir `StopSignControl2.bmp` como um ícone de caixa de ferramentas para a `StopSignControl2`. Este exemplo pressupõe a existência de um bitmap de 16 por 16 pixels denominado `StopSignControl2.bmp` com seus **BuildAction** propriedade definida como **EmbeddedResource**.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.ToolboxBitmapAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Drawing.ToolboxBitmapAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.ToolboxBitmapAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Um <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto que tem sua imagem pequena e sua imagem grande definido como <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Object" /> a ser testado.</param>
        <summary>Indica se o objeto especificado é um <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> do objeto e são idênticos a este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>Este método retorna <see langword="true" /> se <paramref name="value" /> é um <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> do objeto e são idênticos a este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um código hash para este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>O código hash para este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">Se este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo do objeto especificado pelo parâmetro de componente. Por exemplo, se você passar um objeto do tipo ControlA para o parâmetro de componente, este método pesquisa o assembly que define ControlA.</param>
        <summary>Obtém o pequeno <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>O pequeno <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo de objeto especificado pelo `component` parâmetro. Por exemplo, suponha que você passar um objeto do tipo ControlA para o `component` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> método.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Se este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo especificado pelo parâmetro de tipo. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA.</param>
        <summary>Obtém o pequeno <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>O pequeno <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `type` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">Se este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo do objeto especificado pelo parâmetro de componente. Por exemplo, se você passar um objeto do tipo ControlA para o parâmetro de componente, este método pesquisa o assembly que define ControlA.</param>
        <param name="large">Especifica se esse método retorna uma imagem grande (<see langword="true" />) ou uma imagem pequena (<see langword="false" />). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32.</param>
        <summary>Obtém o pequeno ou grande <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>Um <see cref="T:System.Drawing.Image" /> objeto associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo de objeto especificado pelo `component` parâmetro. Por exemplo, suponha que você passar um objeto do tipo ControlA para o `component` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.  
  
 Se este <xref:System.Drawing.ToolboxBitmapAttribute> objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Se este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo especificado pelo tipo de componente. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA.</param>
        <param name="large">Especifica se esse método retorna uma imagem grande (<see langword="true" />) ou uma imagem pequena (<see langword="false" />). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32.</param>
        <summary>Obtém o pequeno ou grande <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>Um <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar um typeof(ControlA) para o `type` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.  
  
 Se este <xref:System.Drawing.ToolboxBitmapAttribute> objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, string imgName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, string imgName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="imgName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Se este <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap inserido no assembly que define o tipo especificado pelo tipo de componente. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA.</param>
        <param name="imgName">O nome do recurso de bitmap inserido.</param>
        <param name="large">Especifica se esse método retorna uma imagem grande (<see langword="true" />) ou uma imagem pequena (<see langword="false" />). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32.</param>
        <summary>Obtém o pequeno ou grande <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</summary>
        <returns>Um <see cref="T:System.Drawing.Image" /> associado a esta <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.imgName, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `type` parâmetro e passou "MyBitmap.bmp" para o parâmetro imgName. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.MyBitmap.bmp.  
  
 Se este <xref:System.Drawing.ToolboxBitmapAttribute> objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageFromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImageFromResource(class System.Type t, string imageName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="t">Este método pesquisa um recurso de bitmap inserido no assembly que define o tipo especificado pelo parâmetro t. Por exemplo, se você passar typeof(ControlA) para o parâmetro t, este método pesquisa o assembly que define ControlA.</param>
        <param name="imageName">O nome do recurso de bitmap inserido.</param>
        <param name="large">Especifica se esse método retorna uma imagem grande (true) ou uma imagem pequena (false). A imagem pequena é de 16 por 16, e a imagem grande é 32 x 32.</param>
        <summary>Retorna um <see cref="T:System.Drawing.Image" /> objeto com base em um recurso de bitmap é inserido em um assembly.</summary>
        <returns>Um <see cref="T:System.Drawing.Image" /> objeto com base no bitmap recuperado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa um recurso chamado namespace.imgName, onde o namespace é o namespace que contém a definição do tipo especificado pelo `t` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `t` parâmetro e você passa "MyBitmap.bmp" para o parâmetro imgName. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.MyBitmap.bmp.  
  
 Este método destina-se para recuperar um recurso de 16x16 bitmap é inserido em um assembly. No entanto, não há nenhum requisito de que o bitmap inserido tem um tamanho de 16 x 16. O bitmap que é recuperado do assembly (não importa que tamanho) é considerado a imagem pequena. A imagem grande é criada pelo dimensionar a imagem "pequena" a um tamanho de 32 x 32. Para que a imagem grande sempre seja 32 por 32, independentemente do tamanho do bitmap recuperado do assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
