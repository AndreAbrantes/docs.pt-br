<Type Name="ExpressionMorphHelper" FullName="System.Activities.Presentation.Expressions.ExpressionMorphHelper">
  <TypeSignature Language="C#" Value="public abstract class ExpressionMorphHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionMorphHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Expressions.ExpressionMorphHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um auxiliar de morph de expressão.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionMorphHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.Expressions.ExpressionMorphHelper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryInferReturnType">
      <MemberSignature Language="C#" Value="public virtual bool TryInferReturnType (System.Activities.ActivityWithResult expression, System.Activities.Presentation.EditingContext context, out Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryInferReturnType(class System.Activities.ActivityWithResult expression, class System.Activities.Presentation.EditingContext context, [out] class System.Type&amp; returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.TryInferReturnType(System.Activities.ActivityWithResult,System.Activities.Presentation.EditingContext,System.Type@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.ActivityWithResult" />
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="returnType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">A expressão usada.</param>
        <param name="context">O contexto.</param>
        <param name="returnType">O tipo de retorno da expressão.</param>
        <summary>Retorna se a expressão tenta inferir o tipo de retorno.</summary>
        <returns>
          <see langword="True" />Se a expressão tenta inferir o tipo de retorno; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryMorphExpression">
      <MemberSignature Language="C#" Value="public abstract bool TryMorphExpression (System.Activities.ActivityWithResult expression, bool isLocationExpression, Type newType, System.Activities.Presentation.EditingContext context, out System.Activities.ActivityWithResult newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryMorphExpression(class System.Activities.ActivityWithResult expression, bool isLocationExpression, class System.Type newType, class System.Activities.Presentation.EditingContext context, [out] class System.Activities.ActivityWithResult&amp; newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.TryMorphExpression(System.Activities.ActivityWithResult,System.Boolean,System.Type,System.Activities.Presentation.EditingContext,System.Activities.ActivityWithResult@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.ActivityWithResult" />
        <Parameter Name="isLocationExpression" Type="System.Boolean" />
        <Parameter Name="newType" Type="System.Type" />
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="newExpression" Type="System.Activities.ActivityWithResult&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">A expressão para morph.</param>
        <param name="isLocationExpression">
          <see langword="True" />Se a expressão for um local; Caso contrário, <see langword="false" />.</param>
        <param name="newType">O novo tipo da expressão.</param>
        <param name="context">O contexto.</param>
        <param name="newExpression">A nova expressão.</param>
        <summary>Retorna se a expressão tenta transformar.</summary>
        <returns>A expressão morphed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
