<Type Name="ManagementQualifierAttribute" FullName="System.Management.Instrumentation.ManagementQualifierAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementQualifierAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementQualifierAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management.Instrumentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>O atributo ManagementQualifier contém WMI relacionados ao provedor informações adicionais sobre um associado WMI classe, instância, propriedade, campo ou método.  
  
 Observação: as bibliotecas do .NET no WMI agora são consideradas em estado final e nenhum desenvolvimento, melhorias ou atualizações adicionais estarão disponíveis para problemas não relacionados à segurança que afetarem essas bibliotecas. O [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) deve ser usado para todos os novos desenvolvimentos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualificadores são pares de nome/valor usados pela infraestrutura do WMI. A maioria os qualificadores WMI necessárias é gerada automaticamente pela infraestrutura de extensões de provedor de WMI.NET. Muitos dos outros atributos causam a geração de qualificadores WMI. No entanto, esse atributo permite manualmente associar qualificador adicional que precisar fazer isso.  
  
 Para saber mais sobre este tópico, consulte [qualificadores WMI](http://go.microsoft.com/fwlink/?LinkId=100924) no SDK do WMI no MSDN online.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o atributo ManagementQualifier para indicar que uma classe implementa uma classe de associação do WMI. Nesse caso, o qualificador tem um <xref:System.Management.Instrumentation.ManagementQualifierFlavors.DisableOverride> flavor que especifica que o efeito do qualificador de não pode ser substituído em subclasses.  
  
```  
[ManagementQualifier("Association", Flavor = ManagementQualifierFlavors.DisableOverride)]  
public class AssociationSample  
{  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementQualifierAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementQualifierAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Instrumentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome do qualificador de.</param>
        <summary>Cria uma instância do ManagementQualifierAttribute.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flavor">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementQualifierFlavors Flavor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementQualifierFlavors Flavor" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Instrumentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementQualifierFlavors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tipo do atributo.</summary>
        <value>Retorna um ManagementQualifierFlavor que indica o tipo do qualificador de.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Instrumentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome do qualificador de.</summary>
        <value>Retorna uma cadeia de caracteres que contém o nome do qualificador de.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management.Instrumentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Valor associado com o qualificador.</summary>
        <value>Retorna um objeto que representa o valor do qualificador de.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você não especificar um valor, o padrão é o valor booliano true.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
