<Type Name="DispatcherOperationCallback" FullName="System.Windows.Threading.DispatcherOperationCallback">
  <TypeSignature Language="C#" Value="public delegate object DispatcherOperationCallback(object arg);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherOperationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperationCallback" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="arg">Um argumento passado para o retorno de chamada.</param>
    <summary>Representa um delegado a ser usado para operações do dispatcher.</summary>
    <returns>O objeto retornado pelo retorno de chamada.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é necessário usar esse delegado para operações de distribuidor, mas <xref:System.Windows.Threading.DispatcherOperationCallback> e <xref:System.Threading.SendOrPostCallback> usar a invocação dinâmica.  
  
 Aplicativos não oferecem suporte a invocação dinâmica, você deve usar uma relação de confiança parcial <xref:System.Windows.Threading.DispatcherOperationCallback> ou <xref:System.Threading.SendOrPostCallback> se o aplicativo vai ser executado em confiança parcial.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
