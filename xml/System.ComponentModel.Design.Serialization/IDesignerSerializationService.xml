<Type Name="IDesignerSerializationService" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationService">
  <TypeSignature Language="C#" Value="public interface IDesignerSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornece uma interface que pode invocar a serialização e desserialização.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse serviço fornece métodos para converter uma coleção de objetos em um objeto serializável que representa-los e converter os dados de serialização para o objeto ou objetos que ele representa.  
  
 Todos os componentes que dão suporte a um designer devem dar suporte a serialização do tipo de cada componente. Isso ocorre quando o designer verifica as propriedades públicas, métodos e eventos de cada tipo e representa dentro um descritor de tipo.  
  
 Essa interface usa a técnica de verificação de membros para converter uma coleção de componentes em um único objeto que dá suporte a serialização de tempo de execução. Isso não fornecem necessariamente para a serialização de tipos personalizados que pertencem à classe. Muitos objetos requerem um serializador personalizado com seus valores serializados em tempo de execução. Para especificar um serializador para um tipo personalizado, use um <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> de atributo ou implementar um <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData">Um objeto que consiste em dados serializados.</param>
        <summary>Desserializa o objeto de dados de serialização especificada e retorna uma coleção de objetos representados pelos dados.</summary>
        <returns>Um <see cref="T:System.Collections.ICollection" /> de objetos recompilados do objeto de dados de serialização especificada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public object Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects">Uma coleção de objetos para serializar.</param>
        <summary>Serializa a coleção de objetos especificada e os armazena em um objeto de dados de serialização.</summary>
        <returns>Um objeto que contém o estado serializado da coleção de objetos especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto retornado totalmente dá suporte a serialização de tempo de execução.  
  
 O objeto retornado por este método contém referências ao vivo para objetos na coleção. Esse objeto pode ser passado para qualquer mecanismo de serialização de tempo de execução. O próprio objeto serializa componentes da mesma maneira que designers escrever fonte para eles, ao armazenar seu estado, a propriedade por propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
