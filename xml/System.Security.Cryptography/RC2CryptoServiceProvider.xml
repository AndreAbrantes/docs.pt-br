<Type Name="RC2CryptoServiceProvider" FullName="System.Security.Cryptography.RC2CryptoServiceProvider">
  <TypeSignature Language="C#" Value="public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RC2CryptoServiceProvider extends System.Security.Cryptography.RC2" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RC2CryptoServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RC2</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define um objeto wrapper para acessar a implementação do CSP (provedor de serviços de criptografia) do algoritmo <see cref="T:System.Security.Cryptography.RC2" />. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Cryptography.RC2CryptoServiceProvider> comprimentos de chave de 40 bits para 128 bits oferece suporte à implementação em incrementos de 8 bits.  
  
 O <xref:System.Security.Cryptography.RC2CryptoServiceProvider> objeto é uma codificação de bloco que criptografa e descriptografa os dados em blocos de 8 bytes.  Essa classe preenche o bloco final dos dados se ele for menor do que 8 bytes.  Como resultado esse preenchimento, o comprimento dos dados criptografados pode ser maior que o texto não criptografado original.  
  
 Observe que o <xref:System.Security.Cryptography.RC2CryptoServiceProvider> objeto não usa salt.  
  
> [!NOTE]
>  Um algoritmo de criptografia simétrica mais recente, Advanced Encryption Standard (AES), está disponível. Considere o uso de <xref:System.Security.Cryptography.Aes> algoritmo e suas classes derivadas, em vez da <xref:System.Security.Cryptography.RC2CryptoServiceProvider> classe. Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> somente para compatibilidade com aplicativos herdados e dados.  
  
   
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RC2CryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">O CSP (provedor de serviços de criptografia) não pode ser adquirido.</exception>
        <exception cref="T:System.InvalidOperationException">Um algoritmo FIPS não compatível foi encontrado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">A chave secreta a ser usada para o algoritmo simétrico.</param>
        <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo simétrico.</param>
        <summary>Cria um simétrica <see cref="T:System.Security.Cryptography.RC2" /> objeto descriptografador com a chave especificada (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) e o vetor de inicialização (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
        <returns>Um objeto descriptografador <see cref="T:System.Security.Cryptography.RC2" /> simétrico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para descriptografar uma mensagem criptografada criada usando o <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> sobrecarga com os mesmos parâmetros.  
  
   
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Um <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> modo de criptografia foi usado.  
  
 -ou-  
  
 A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> foi usado o modo de criptografia com um tamanho de comentários diferente de 8 bits.  
  
 -ou-  
  
 Um tamanho de chave inválido foi usado.  
  
 -ou-  
  
 O tamanho da chave de algoritmo não estava disponível.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">A chave secreta a ser usada para o algoritmo simétrico.</param>
        <param name="rgbIV">O vetor de inicialização a ser usado para o algoritmo simétrico.</param>
        <summary>Cria um objeto criptografador <see cref="T:System.Security.Cryptography.RC2" /> simétrico com a chave <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> atual e o vetor de inicialização (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
        <returns>Um objeto criptografador <see cref="T:System.Security.Cryptography.RC2" /> simétrico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> sobrecarga com os mesmos parâmetros para descriptografar o resultado deste método.  
  
   
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Um <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> modo de criptografia foi usado.  
  
 -ou-  
  
 A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> foi usado o modo de criptografia com um tamanho de comentários diferente de 8 bits.  
  
 -ou-  
  
 Um tamanho de chave inválido foi usado.  
  
 -ou-  
  
 O tamanho da chave de algoritmo não estava disponível.</exception>
      </Docs>
    </Member>
    <Member MemberName="EffectiveKeySize">
      <MemberSignature Language="C#" Value="public override int EffectiveKeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EffectiveKeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho efetivo, em bits, a chave secreta usada pelo <see cref="T:System.Security.Cryptography.RC2" /> algoritmo.</summary>
        <value>O tamanho da chave efetivo, em bits, usado pelo <see cref="T:System.Security.Cryptography.RC2" /> algoritmo.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">O <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> propriedade foi definida como um valor diferente de <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> propriedade.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gera um vetor de inicialização aleatória (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) a ser usado para o algoritmo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para gerar uma aleatório <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> quando nenhum for especificado.  
  
   
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gera uma chave aleatória (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) a ser usado para o algoritmo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para gerar uma chave aleatória se nenhum for especificado.  
  
 O <xref:System.Security.Cryptography.RC2CryptoServiceProvider> comprimentos de chave de 40 bits para 128 bits oferece suporte à implementação em incrementos de 8 bits.  
  
   
  
## Examples  
 O exemplo de código a seguir criptografa e descriptografa uma cadeia de caracteres.  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSalt">
      <MemberSignature Language="C#" Value="public bool UseSalt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSalt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina se é necessário criar uma chave com um salt 11 longo de bytes, o valor de zero.</summary>
        <value>
          <see langword="true" />Se a chave deve ser criada com um valor falso 11 longo de bytes, o valor zero; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> propriedade permite que você interoperar com um aplicativo existente que usa um salt 11 longo de bytes, o valor de zero.  Na maioria dos cenários, você não deve usar um salt com um <xref:System.Security.Cryptography.RC2CryptoServiceProvider> chave.  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> propriedade `true`e, em seguida, criptografa e descriptografa um valor.  
  
 [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/cpp/example.cpp#1)]
 [!code-csharp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/CS/example.cs#1)]
 [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
