<Type Name="CultureInfoIetfLanguageTagConverter" FullName="System.Windows.CultureInfoIetfLanguageTagConverter">
  <TypeSignature Language="C#" Value="public class CultureInfoIetfLanguageTagConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CultureInfoIetfLanguageTagConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CultureInfoIetfLanguageTagConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converte as instâncias de <see cref="T:System.Globalization.CultureInfo" /> de e para outros tipos de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é diferente de duas maneiras de <xref:System.ComponentModel.CultureInfoConverter>, o conversor de tipo padrão para o <xref:System.Globalization.CultureInfo> classe.  
  
-   Usa uma representação de cadeia de caracteres com base no <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> propriedade em vez de <xref:System.Globalization.CultureInfo.Name%2A> propriedade (ou seja, RFC 3066 em vez de RFC 1766).  
  
-   Ao converter de uma cadeia de caracteres, as propriedades de resultante <xref:System.Globalization.CultureInfo> dependem apenas a cadeia de caracteres e não em usuário substitui definido no painel de controle do objeto. Isso torna possível criar a aparência de que não dependem de configurações locais de documentos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfoIetfLanguageTagConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CultureInfoIetfLanguageTagConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.CultureInfoIetfLanguageTagConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CultureInfoIetfLanguageTagConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">O valor <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="sourceType">O <see cref="T:System.Type" /> que está sendo consultada para suporte à conversão.</param>
        <summary>Determina se <see cref="T:System.Windows.CultureInfoIetfLanguageTagConverter" /> pode converter de um determinado tipo.</summary>
        <returns>
          <see langword="true" />Se <see cref="T:System.Windows.CultureInfoIetfLanguageTagConverter" /> pode converter; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CultureInfoIetfLanguageTagConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">O valor <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="destinationType">O <see cref="T:System.Type" /> que está sendo consultada para suporte à conversão.</param>
        <summary>Determina se <see cref="T:System.Windows.CultureInfoIetfLanguageTagConverter" /> pode converter para um determinado tipo.</summary>
        <returns>
          <see langword="true" />Se <see cref="T:System.Windows.CultureInfoIetfLanguageTagConverter" /> pode converter; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CultureInfoIetfLanguageTagConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">O valor <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="cultureInfo">O <see cref="T:System.Globalization.CultureInfo" /> objeto cujo valor é respeitado durante a conversão.</param>
        <param name="source">O <see cref="T:System.Type" /> que está sendo convertido.</param>
        <summary>Converte um determinado tipo de objeto para um <see cref="T:System.Globalization.CultureInfo" /> objeto.</summary>
        <returns>Um objeto <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CultureInfoIetfLanguageTagConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">O valor <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="cultureInfo">O <see cref="T:System.Globalization.CultureInfo" /> objeto cujo valor é respeitado durante a conversão.</param>
        <param name="value">O objeto que representa o <see cref="T:System.Globalization.CultureInfo" /> para converter.</param>
        <param name="destinationType">O <see cref="T:System.Type" /> do objeto retornado convertido.</param>
        <summary>Converte um <see cref="T:System.Globalization.CultureInfo" /> objeto para um determinado tipo de objeto.</summary>
        <returns>Um objeto CultureInfo convertido para um determinado tipo de objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
