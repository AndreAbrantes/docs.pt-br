<Type Name="DataObject" FullName="System.Windows.DataObject">
  <TypeSignature Language="C#" Value="public sealed class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece uma implementação básica da interface <see cref="T:System.Windows.IDataObject" />, que define um mecanismo independente de formato para a transferência de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_DataObject"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
   
  
## Examples  
 O exemplo a seguir mostra como usar essa classe.  
  
 [!code-csharp[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.DataObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.DataObject" /> classe que contém os dados especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um novo objeto de dados e usa o construtor para inicializar o objeto de dados com uma cadeia de caracteres.  Neste caso, um formato de dados apropriado é determinado automaticamente de acordo com o tipo de dados armazenado e a conversão automática dos dados armazenados é permitida por padrão.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple)]  
  
 O exemplo a seguir é uma versão condensada do exemplo anterior.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="data" />referências de um <see cref="T:System.Windows.DataObject" /> objeto.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte o <see cref="T:System.Windows.DataFormats" /> classe.</param>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.DataObject" /> classe que contém os dados especificados e seu formato associado; o formato é especificado por uma cadeia de caracteres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um novo objeto de dados e usa esse construtor para inicializar o objeto de dados com uma cadeia de caracteres e um formato de dados especificado.  Nesse caso, o formato de dados é especificado por uma cadeia de caracteres; o <xref:System.Windows.DataFormats> classe fornece um conjunto de cadeias de caracteres de tipo predefinido. A conversão automática dos dados armazenados é permitida por padrão.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 O exemplo a seguir é uma versão condensada do exemplo anterior.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Type,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Um <see cref="T:System.Type" /> que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Os dados a serem armazenados neste objeto de dados.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.DataObject" /> classe que contém os dados especificados e seu formato associado; o formato de dados é especificado por uma <see cref="T:System.Type" /> objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um novo objeto de dados e usa esse construtor para inicializar o objeto de dados com uma cadeia de caracteres e um formato de dados especificado.  Nesse caso, o formato de dados é especificado por um <xref:System.Type> parâmetro.  A conversão automática dos dados armazenados é permitida por padrão.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type)]  
  
 O exemplo a seguir é uma versão condensada do exemplo anterior.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Os dados a serem armazenados neste objeto de dados.</param>
        <param name="autoConvert">
          <see langword="true" />para permitir que os dados a ser convertido em outro formato de recuperação; <see langword="false" /> para impedir que os dados de que está sendo convertido em outro formato de recuperação.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.DataObject" /> classe que contém os dados especificados e seu formato associado; o formato é especificado por uma cadeia de caracteres. Essa sobrecarga inclui um <see langword="Boolean" /> sinalizador para indicar se os dados podem ser convertidos para outro formato de recuperação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um novo objeto de dados e usa esse construtor para inicializar o objeto de dados com uma cadeia de caracteres e um formato de dados especificado.  Nesse caso, o formato de dados é especificado por uma cadeia de caracteres; o <xref:System.Windows.DataFormats> classe fornece um conjunto de cadeias de caracteres de tipo predefinido.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert)]  
  
 O exemplo a seguir é uma versão condensada do exemplo anterior.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCopyingHandler">
      <MemberSignature Language="C#" Value="public static void AddCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) ao qual o manipulador de eventos será adicionado.</param>
        <param name="handler">Um delegado que faz referência ao método de manipulador a ser adicionado.</param>
        <summary>Adiciona um manipulador de eventos <see cref="E:System.Windows.DataObject.Copying" /> a um objeto de dependência especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.DataObject.Copying> evento ocorre quando uma operação de cópia for concluída, converter o conteúdo selecionado em dados especificados todos os formatos, armazenou todos os formatos de dados no objeto de dados associados e está pronto para colocar o objeto de dados no sistema de área de transferência ou para iniciar uma operação de arrastar.  
  
 Use este evento para inspecionar ou modificar um objeto de dados após uma operação de cópia for concluída e antes de continuar com as operações subsequentes. A operação de cópia inteira pode ser cancelada chamando <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPastingHandler">
      <MemberSignature Language="C#" Value="public static void AddPastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) ao qual o manipulador de eventos será adicionado.</param>
        <param name="handler">Um delegado que faz referência ao método de manipulador a ser adicionado.</param>
        <summary>Adiciona um manipulador de eventos <see cref="E:System.Windows.DataObject.Pasting" /> a um objeto de dependência especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este evento para inspecionar um objeto de dados antes dos dados são colados e, possivelmente, para decidir sobre um alternativo curso de ação, como:  
  
-   **Cancelar a operação de colagem** -cancelar a operação de colagem inteira ao chamar o <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> método.  
  
-   **Selecione um formato alternativo** -alterar o formato de colar selecionada, especificando um novo valor para o <xref:System.Windows.DataObjectPastingEventArgs.FormatToApply%2A> propriedade. O formato selecionado recentemente pelo deve compatível com o objeto de dados a serem colados.  
  
    > [!NOTE]
    >  Se o formato de colar for alterado, certifique-se de que o destino de colar suporta o formato especificado mais recentemente.  
  
-   **Inserir um novo formato** - se você determinar que o objeto de dados de colar não oferecem suporte ao formato desejado, atualizar o objeto de dados para incluir uma versão dos dados no formato desejado. Conversores de dados personalizados geralmente são usados como parte desse processo.  
  
 Alterar o conteúdo de um objeto de dados de colar (<xref:System.Windows.DataObjectPastingEventArgs.DataObject%2A>) não altera os dados armazenados no sistema de área de transferência; tais alterações serão aplicadas somente ao objeto de dados associado ao comando Colar associado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void AddSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) ao qual o manipulador de eventos será adicionado.</param>
        <param name="handler">Um delegado que faz referência ao método de manipulador a ser adicionado.</param>
        <summary>Adiciona um manipulador de eventos <see cref="E:System.Windows.DataObject.SettingData" /> a um objeto de dependência especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.DataObject.SettingData> evento ocorre como parte de um comando copiar ou arrastar, uma vez para cada um dos formatos de dados para adicionar o objeto de dados associados. Normalmente, esse evento é conectado a um controle de conteúdo, como <xref:System.Windows.Controls.TextBox>.  
  
 Um manipulador para esse evento pode ser usado para seletivamente impedir que os formatos de dados indesejados sejam adicionadas ao objeto de dados, eliminando assim o processamento de conversão de dados para formatos de dados redundantes e melhorar o desempenho geral de uma operação de cópia. Para ignorar um formato de dados específico, chame o <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> método e especificar o formato para ignorar o <xref:System.Windows.DataObjectSettingDataEventArgs.Format%2A> propriedade. Chamar o <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> método para esse evento não cancelar a cópia associada ou arraste o comando.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsAudio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consultas a presença de dados em um objeto de dados a <see cref="F:System.Windows.DataFormats.WaveAudio" /> formato de dados.</summary>
        <returns>
          <see langword="true" />Se o objeto de dados contiver dados de <see cref="F:System.Windows.DataFormats.WaveAudio" /> formato de dados; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna `true` somente se o formato de dados especificado existir nativamente no objeto de dados; esse método não verifica a presença de formatos de dados auto conversíveis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsFileDropList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consultas a presença de dados em um objeto de dados a <see cref="F:System.Windows.DataFormats.FileDrop" /> formato de dados.</summary>
        <returns>
          <see langword="true" />Se o objeto de dados contiver dados de <see cref="F:System.Windows.DataFormats.FileDrop" /> formato de dados; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna `true` somente se o formato de dados especificado existir nativamente no objeto de dados; esse método não verifica a presença de formatos de dados auto conversíveis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsImage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consultas a presença de dados em um objeto de dados a <see cref="F:System.Windows.DataFormats.Bitmap" /> formato de dados.</summary>
        <returns>
          <see langword="true" />Se o objeto de dados contiver dados de <see cref="F:System.Windows.DataFormats.Bitmap" /> formato de dados; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna `true` somente se o formato de dados especificado existir nativamente no objeto de dados; esse método não verifica a presença de formatos de dados auto conversíveis.  
  
 Um bitmap representa um gráfico de computador como uma matriz de bits na memória, e esses bits representam os atributos dos pixels individuais em uma imagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consultas a presença de dados em um objeto de dados a <see cref="F:System.Windows.DataFormats.UnicodeText" /> formato.</summary>
        <returns>
          <see langword="true" />Se o objeto de dados contiver dados de <see cref="F:System.Windows.DataFormats.UnicodeText" /> formato de dados; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna `true` somente se o formato de dados especificado existir nativamente no objeto de dados; esse método não verifica a presença de formatos de dados auto conversíveis.  
  
 O <xref:System.Windows.DataFormats.UnicodeText> formato de dados indica o caractere de 16 bits codificado em Unicode, também conhecido como UTF-16 e USC-2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Membro de <see cref="T:System.Windows.TextDataFormat" /> enumeração que especifica o formato de dados de texto para consultar.</param>
        <summary>Consultas de um objeto de dados para a presença de dados em um formato de dados de texto.</summary>
        <returns>
          <see langword="true" />Se o objeto de dados contém dados em um formato de dados de texto; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna `true` somente se o formato de dados especificado existir nativamente no objeto de dados; esse método não verifica a presença de formatos de dados auto conversíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" />não especifique um membro válido da <see cref="T:System.Windows.TextDataFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CopyingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CopyingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.CopyingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o <see cref="E:System.Windows.DataObject.Copying" /> evento anexado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetAudioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um fluxo que contém dados de <see cref="F:System.Windows.DataFormats.WaveAudio" /> formato de dados.</summary>
        <returns>Um fluxo que contém dados de <see cref="F:System.Windows.DataFormats.WaveAudio" /> formato, ou <see langword="null" /> se os dados não estão disponíveis neste formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna a um fluxo apenas se especificado formato nativamente existe no objeto de dados; Este método não retorna dados auto conversíveis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Retorna dados em um formato especificado por uma cadeia de caracteres.</summary>
        <returns>Um objeto que contém os dados no formato especificado, ou <see langword="null" /> se os dados não estão disponíveis no formato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa esse método para primeiro verificar se um formato de dados especificado está disponível (de forma nativa ou por conversão automática); Se o formato especificado estiver disponível, o exemplo recupera os dados usando o <xref:System.Windows.DataObject.GetData%28System.String%29> método.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat)]  
  
 O código de exemplo a seguir usa o <xref:System.Windows.DataObject.GetDataPresent%28System.String%2CSystem.Boolean%29> método primeiro verificar se um formato de dados especificado está disponível de forma nativa (formatos de dados auto conversíveis são filtrados); se o formato especificado estiver disponível, o exemplo recupera os dados usando o <xref:System.Windows.DataObject.GetData%28System.String%29>método.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat_native)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat_native)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Um <see cref="T:System.Type" /> que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Retorna um objeto de dados em um formato especificado por um objeto <see cref="T:System.Type" />.</summary>
        <returns>Um objeto de dados com os dados no formato especificado ou <see langword="null" /> se os dados estiverem indisponíveis no formato especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" />para tentar converter automaticamente os dados no formato especificado; <see langword="false" /> para nenhuma conversão de formato de dados.</param>
        <summary>Retorna um objeto de dados em um formato especificado, opcionalmente, converter os dados no formato especificado.</summary>
        <returns>Um objeto de dados com os dados no formato especificado ou <see langword="null" /> se os dados estiverem indisponíveis no formato especificado.  
  
 Se o <paramref name="autoConvert" /> parâmetro é <see langword="true" /> e os dados não podem ser convertidos no formato especificado, ou se a conversão automática está desabilitada (chamando <see cref="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" /> com o <paramref name="autoConvert" /> parâmetro definido como <see langword="false" />), esse método retorna <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é **nulo**.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se os dados estão disponíveis no, ou podem ser convertidos em um formato especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.Windows.DataObject.GetDataPresent%2A> para determinar se um formato está disponível neste objeto de dados antes de chamar <xref:System.Windows.DataObject.GetData%2A>. Chamar <xref:System.Windows.DataObject.GetFormats%2A> para obter uma lista de todos os formatos disponíveis neste objeto de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Determina se os dados estão disponíveis em um formato especificado por uma cadeia de caracteres ou se eles podem ser convertidos nesse formato.</summary>
        <returns>
          <see langword="true" /> se os dados estiverem no formato especificado ou puderem ser convertidos nele; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.Windows.DataObject.GetDataPresent%2A> para determinar se um formato está disponível neste objeto de dados antes de chamar <xref:System.Windows.DataObject.GetData%2A>. Chamar <xref:System.Windows.DataObject.GetFormats%2A> para obter uma lista de todos os formatos disponíveis neste objeto de dados.  
  
   
  
## Examples  
 O exemplo a seguir usa esse método para consultar a presença de um formato específico de dados pela cadeia de caracteres do descritor.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_string)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_string)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Um <see cref="T:System.Type" /> que especifica o formato de dados para verificar. F ou um conjunto de formatos de dados predefinidos, consulte o <see cref="T:System.Windows.DataFormats" /> classe.</param>
        <summary>Determina se os dados estão disponíveis no ou podem ser convertidos em um formato especificado por um <see cref="T:System.Type" /> objeto.</summary>
        <returns>
          <see langword="true" /> se os dados estiverem no formato especificado ou puderem ser convertidos nele; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.Windows.DataObject.GetDataPresent%2A> para determinar se um formato está disponível neste objeto de dados antes de chamar <xref:System.Windows.DataObject.GetData%2A>. Chamar <xref:System.Windows.DataObject.GetFormats%2A> para obter uma lista de todos os formatos disponíveis neste objeto de dados.  
  
   
  
## Examples  
 O exemplo a seguir usa esse método para consultar a presença de um formato específico de dados por tipo.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_type)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato de dados para verificar. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="false" />Para verificar somente para o formato especificado; <see langword="true" /> também verificar se os dados armazenados neste objeto de dados podem ser convertidos no formato especificado.</param>
        <summary>Determina se os dados estão disponíveis no, ou podem ser convertidos em um formato especificado. Um <see langword="Boolean" /> sinalizador indica se é necessário verificar se os dados podem ser convertidos no formato especificado se ele não está disponível nesse formato.</summary>
        <returns>
          <see langword="true" /> se os dados estiverem no formato especificado ou puderem ser convertidos nele; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.Windows.DataObject.GetDataPresent%2A> para determinar se um formato está disponível neste objeto de dados antes de chamar <xref:System.Windows.DataObject.GetData%2A>. Chamar <xref:System.Windows.DataObject.GetFormats%2A> para obter uma lista de todos os formatos disponíveis neste objeto de dados.  
  
   
  
## Examples  
 O exemplo a seguir usa esse método para consultar dados por cadeia de caracteres do descritor e especifica como tratar formatos de dados auto conversíveis.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_autoconvert)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFileDropList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de cadeia de caracteres que contém uma lista de arquivos ignorados.</summary>
        <returns>Uma coleção de cadeias de caracteres, onde cada cadeia de caracteres Especifica o nome de um arquivo na lista de arquivos ignorados, ou <see langword="null" /> se os dados não estão disponíveis neste formato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma lista de formatos em que os dados neste objeto de dados são armazenados, ou podem ser convertidos em.</summary>
        <returns>Uma matriz de cadeias de caracteres, com cada cadeia de caracteres especificando o nome de um formato que oferece suporte a esse objeto de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para um conjunto de formatos de dados predefinidos, consulte a classe <xref:System.Windows.DataFormats>.  
  
   
  
## Examples  
 O exemplo a seguir usa esse método para obter uma matriz de cadeias de caracteres que indica todos os formatos de dados disponíveis em um objeto de dados (nativo e auto conversíveis).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" />para recuperar todos os formatos em que os dados neste objeto de dados estão armazenados ou podem ser convertidos em; <see langword="false" /> para recuperar apenas os formatos em que os dados neste objeto de dados são armazenados.</param>
        <summary>Retorna uma lista de formatos em que os dados neste objeto de dados são armazenados. Um <see langword="Boolean" /> sinalizador indica se deve incluir também os formatos de dados podem ser convertidos automaticamente para.</summary>
        <returns>Uma matriz de cadeias de caracteres, com cada cadeia de caracteres especificando o nome de um formato suportado por este objeto de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para um conjunto de formatos de dados predefinidos, consulte a classe <xref:System.Windows.DataFormats>.  
  
   
  
## Examples  
 O exemplo a seguir usa esse método para obter uma matriz de cadeias de caracteres indicando somente formatos de dados disponíveis em um objeto de dados (auto conversíveis formatos de dados são filtrados).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats_nativeonly)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats_nativeonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetImage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> objeto que contém dados a <see cref="F:System.Windows.DataFormats.Bitmap" /> formato.</summary>
        <returns>Um objeto <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> que contém dados no formato <see cref="F:System.Windows.DataFormats.Bitmap" /> ou <see langword="null" />, se os dados estiverem indisponíveis nesse formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método retorna um <xref:System.Windows.Media.Imaging.BitmapSource> qualquer um de objeto quando dados nativamente estão disponíveis ou quando os dados podem ser convertidos automaticamente para o <xref:System.Windows.DataFormats.Bitmap> formato de dados.  
  
 Um bitmap representa um gráfico de computador como uma matriz de bits na memória, e esses bits representam os atributos dos pixels individuais em uma imagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cadeia de caracteres que contém o <see cref="F:System.Windows.DataFormats.UnicodeText" /> dados neste objeto de dados.</summary>
        <returns>Uma cadeia de caracteres que contém o <see cref="F:System.Windows.DataFormats.UnicodeText" /> dados ou uma cadeia de caracteres vazia se nenhum <see cref="F:System.Windows.DataFormats.UnicodeText" /> dados estão disponíveis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.DataFormats.UnicodeText> formato de dados indica o caractere de 16 bits codificado em Unicode, também conhecido como UTF-16 e USC-2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Um membro de <see cref="T:System.Windows.TextDataFormat" /> que especifica o formato de dados de texto específico para recuperar.</param>
        <summary>Retorna uma cadeia de caracteres que contém dados de texto do formato especificado neste objeto de dados.</summary>
        <returns>Uma cadeia de caracteres que contém dados de texto no formato de dados especificado ou uma cadeia de caracteres vazia se nenhum dado de texto correspondente estiver disponível.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" />não especifique um membro válido da <see cref="T:System.Windows.TextDataFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PastingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PastingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PastingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.PastingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o <see cref="E:System.Windows.DataObject.Pasting" /> evento anexado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCopyingHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) do qual remover o manipulador de eventos.</param>
        <param name="handler">Um representante que referencia o método do manipulador a ser removido.</param>
        <summary>Remove um <see cref="E:System.Windows.DataObject.Copying" /> manipulador de eventos de um objeto de dependência especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePastingHandler">
      <MemberSignature Language="C#" Value="public static void RemovePastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) do qual remover o manipulador de eventos.</param>
        <param name="handler">Um representante que referencia o método do manipulador a ser removido.</param>
        <summary>Remove um <see cref="E:System.Windows.DataObject.Pasting" /> manipulador de eventos de um objeto de dependência especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">O objeto de dependência (um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) do qual remover o manipulador de eventos.</param>
        <param name="handler">Um representante que referencia o método do manipulador a ser removido.</param>
        <summary>Remove um <see cref="E:System.Windows.DataObject.SettingData" /> manipulador de eventos de um objeto de dependência especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Uma matriz de bytes que contém dados de áudio para armazenar no objeto de dados.</param>
        <summary>Armazena dados de áudio (<see cref="F:System.Windows.DataFormats.WaveAudio" /> formato de dados) neste objeto de dados. Os dados de áudio são especificados como uma matriz de bytes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática desabilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Um fluxo que contém dados de áudio para armazenar no objeto de dados.</param>
        <summary>Armazena dados de áudio (<see cref="F:System.Windows.DataFormats.WaveAudio" /> formato de dados) neste objeto de dados.  Os dados de áudio são especificados como um fluxo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática desabilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <summary>Armazena os dados especificados neste objeto de dados, determinar automaticamente o formato do tipo de objeto de fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática habilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> é <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">permissão transferir dados para a área de transferência do sistema.  Enumeração associada: **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <summary>Armazena os dados especificados neste objeto de dados, juntamente com um ou mais formatos de dados especificado; o formato de dados é especificado por uma cadeia de caracteres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática habilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">permissão transferir dados para a área de transferência do sistema.  Enumeração associada: **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Um <see cref="T:System.Type" /> objeto que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <summary>Armazena os dados especificados neste objeto de dados, juntamente com um ou mais formatos de dados especificado; o formato de dados é especificado por uma <see cref="T:System.Type" /> objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática habilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">permissão transferir dados para a área de transferência do sistema.  Enumeração associada: **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres que especifica o formato dos dados. Para um conjunto de formatos de dados predefinidos, consulte a classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Um objeto que representa os dados a serem armazenados neste objeto de dados.</param>
        <param name="autoConvert">
          <see langword="true" />para permitir que os dados a ser convertido em outro formato de recuperação; <see langword="false" /> para impedir que os dados de que está sendo convertido em outro formato de recuperação.</param>
        <summary>Armazena os dados especificados neste objeto de dados, juntamente com um ou mais formatos de dados especificado. Essa sobrecarga inclui um <see langword="Boolean" /> sinalizador para indicar se os dados podem ser convertidos para outro formato de recuperação.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> é <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">permissão transferir dados para a área de transferência do sistema.  Enumeração associada: **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection fileDropList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileDropList(class System.Collections.Specialized.StringCollection fileDropList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDropList" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="fileDropList">Uma coleção de cadeia de caracteres que contém a lista de arquivos ignorados para armazenar no objeto de dados.</param>
        <summary>Repositórios <see cref="F:System.Windows.DataFormats.FileDrop" /> dados neste objeto de dados.  A lista de arquivos ignorados é especificada como uma coleção de cadeia de caracteres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática habilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileDropList" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileDropList" />contém zero cadeias de caracteres, ou o caminho completo para o arquivo especificado na lista não pode ser resolvido.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Windows.Media.Imaging.BitmapSource image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImage(class System.Windows.Media.Imaging.BitmapSource image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Windows.Media.Imaging.BitmapSource" />
      </Parameters>
      <Docs>
        <param name="image">Um <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> objeto que contém os dados da imagem para armazenar no objeto de dados.</param>
        <summary>Repositórios <see cref="F:System.Windows.DataFormats.Bitmap" /> dados neste objeto de dados.  Os dados da imagem são especificados como um <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um bitmap representa um gráfico de computador como uma matriz de bits na memória, e esses bits representam os atributos dos pixels individuais em uma imagem.  
  
 Este método adiciona dados com a conversão automática habilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">Uma cadeia de caracteres que contém o <see cref="F:System.Windows.DataFormats.UnicodeText" /> dados a serem armazenados no objeto de dados.</param>
        <summary>Repositórios <see cref="F:System.Windows.DataFormats.UnicodeText" /> dados, especificados como uma cadeia de caracteres neste objeto de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse formato de dados indica o caractere de 16 bits codificado em Unicode, também conhecido como UTF-16 e USC-2.  
  
 Este método adiciona dados com a conversão automática desabilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData, System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData, valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String,System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">Uma cadeia de caracteres que contém os dados de texto para armazenar no objeto de dados.</param>
        <param name="format">Um membro de <see cref="T:System.Windows.TextDataFormat" /> que especifica o formato de dados de texto para armazenar.</param>
        <summary>Armazena dados de texto neste objeto de dados. O formato dos dados de texto para armazenar é especificado com um membro do <see cref="T:System.Windows.TextDataFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona dados com a conversão automática desabilitada (o mesmo que chamar <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> com `autoConvert` definida como `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SettingDataEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SettingDataEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SettingDataEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.SettingDataEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o <see cref="E:System.Windows.DataObject.SettingData" /> evento anexado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, o dispositivo de destino, o aspecto e a mídia que será usada para notificações futuras.</param>
        <param name="advf">Uma da <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> valores que especifica um grupo de sinalizadores para controlar o comunicado de conexão.</param>
        <param name="pAdvSink">Um ponteiro para o <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface no coletor de aviso que receberão a notificação de alteração.</param>
        <param name="pdwConnection">Quando este método retorna, contém um ponteiro para um token DWORD que identifica essa conexão. Você pode usar esse token posteriormente para excluir a conexão de consultoria, passando-o para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se esse valor for zero, a conexão não foi estabelecida. Este parâmetro é passado não inicializado.</param>
        <summary>Cria uma conexão entre um objeto de dados e um coletor de aviso. Este método é chamado por um objeto que oferece suporte a um coletor de aviso e permite que o coletor de consultoria ser notificado sobre alterações nos dados do objeto.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">Um token DWORD que especifica a conexão a ser removido. Usar o valor retornado por <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando a conexão foi originalmente estabelecido.</param>
        <summary>Destrói um conexão de notificação que tinha sido estabelecida anteriormente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Quando este método retorna, contém um <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> que recebe o ponteiro de interface para o novo objeto de enumerador. Se a implementação define <c>enumAdvise</c> para <see langword="null" />, não existem conexões para coletores comunicados neste momento. Este parâmetro é passado não inicializado.</param>
        <summary>Cria um objeto que pode ser usado para enumerar as conexões de consultoria atuais.</summary>
        <returns>Dá suporte a esse método, o valor de retorno padrão E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>O objeto de enumerador é instanciado com êxito ou não existem conexões.  
  
 </description></item><item><term>OLE_E_ADVISENOTSUPPORTED  
  
 </term><description>Este objeto não dá suporte a notificações comunicadas.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Uma da <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> valores que especifica a direção dos dados.</param>
        <summary>Cria um objeto para enumerar o <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas para um objeto de dados. Essas estruturas são usadas em chamadas para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> ou <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Este método oferece suporte ao padrão retornam valores E_INVALIDARG e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>O objeto de enumerador foi criado com êxito.  
  
 </description></item><item><term>E_NOTIMPL  
  
 </term><description>A direção especificada pelo <paramref name="direction" /> parâmetro não é suportado.  
  
 </description></item><item><term>OLE_S_USEREG  
  
 </term><description>Solicitações OLE enumerar os formatos do registro.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, a média e o dispositivo de destino que o chamador deseja usar para recuperar dados em uma chamada subsequente, como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> membro nesse caso não é significativo e deve ser ignorado.</param>
        <param name="pformatetcOut">Quando este método retorna, contém um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura que contém as informações mais gerais possíveis para uma renderização específica, tornando-a canonicamente equivalente para <c>formatetIn</c>. O chamador deve alocar essa estrutura e o <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> método deve preencher os dados. Para recuperar dados em uma chamada subsequente como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, o chamador usa o valor fornecido de <c>formatOut</c>, a menos que o valor fornecido é <see langword="null" />. Esse valor é <see langword="null" /> se o método retornar <see langword="DATA_S_SAMEFORMATETC" />. O <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> membro nesse caso não é significativo e deve ser ignorado. Este parâmetro é passado não inicializado.</param>
        <summary>Fornece um padrão de <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura é logicamente equivalente a uma estrutura mais complexa. Use esse método para determinar se duas diferentes <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas retornaria os mesmos dados, eliminando a necessidade de processamento duplicado.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>Retornado <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura é diferente daquele que foi passado.  
  
 </description></item><item><term>DATA_S_SAMEFORMATETC  
  
 </term><description>O <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas são os mesmos e <see langword="null" /> é retornado no <paramref name="formatOut" /> parâmetro.  
  
 </description></item><item><term>DV_E_LINDEX  
  
 </term><description>Há um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; atualmente, somente a -1 é suportado.  
  
 </description></item><item><term>DV_E_FORMATETC  
  
 </term><description>Há um valor inválido para o <paramref name="pFormatetc" /> parâmetro.  
  
 </description></item><item><term>OLE_E_NOTRUNNING  
  
 </term><description>O aplicativo não está em execução.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. É possível especificar mais de uma mídia usando o operador booleano ou, permitindo que o método escolher o melhor meio entre aquelas especificadas.</param>
        <param name="medium">Quando este método retorna, contém um ponteiro para o <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura que indica a mídia de armazenamento que contém os dados retornados por meio de seu <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> membro e responsabilidade para liberar o meio e o valor de seu <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />membro. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> é <see langword="null" />, o receptor da mídia é responsável pela liberação; caso contrário, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> aponta para o <see langword="IUnknown" /> interface no objeto apropriado para seu <see langword="Release" /> método pode ser chamado. A mídia deve ser alocada e preenchida pelo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Este parâmetro é passado não inicializado.</param>
        <summary>Obtém dados de um objeto de dados de origem. O <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> método, que é chamado por um consumidor de dados, renderiza os dados descritos na especificado <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura e transfere-a por meio de especificado <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura. Em seguida, o chamador assume a responsabilidade por liberar a estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. Pode ser especificada somente uma mídia em <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />e somente os seguintes <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> valores são válidos: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, ou <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passado por referência, que define a mídia de armazenamento que contém os dados que estão sendo transferidos. A mídia deve ser alocada pelo chamador e preenchida pelo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O chamador também deve liberar a mídia. A implementação deste método sempre deve fornecer um valor de <see langword="null" /> para o <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> membro o <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura que esse parâmetro aponta para.</param>
        <summary>Obtém dados de um objeto de dados de origem. Esse método, o que é chamado por um consumidor de dados, difere do <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> método em que o chamador deve alocar e liberar a mídia de armazenamento especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, a média e o dispositivo de destino a ser usado para a consulta.</param>
        <summary>Determina se o objeto de dados é capaz de renderizar os dados descritos o <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura. Objetos de tentativa de uma operação de colar ou drop pode chamar esse método antes de chamar <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> para obter uma indicação de se a operação pode ser bem-sucedida.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>Uma chamada subsequente para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> provavelmente será bem-sucedida.  
  
 </description></item><item><term>DV_E_LINDEX  
  
 </term><description>Um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; atualmente, somente a -1 é suportado.  
  
 </description></item><item><term>DV_E_FORMATETC  
  
 </term><description>Um valor inválido para o <paramref name="pFormatetc" /> parâmetro.  
  
 </description></item><item><term>DV_E_TYMED  
  
 </term><description>Inválido <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> valor.  
  
 </description></item><item><term>DV_E_DVASPECT  
  
 </term><description>Inválido <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> valor.  
  
 </description></item><item><term>OLE_E_NOTRUNNING  
  
 </term><description>O aplicativo não está em execução.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">Um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato usado pelo objeto de dados ao interpretar os dados contidos na mídia de armazenamento.</param>
        <param name="pmedium">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura, passada por referência, que define a mídia de armazenamento no qual os dados são passados.</param>
        <param name="fRelease">
          <see langword="true" />para especificar que o objeto de dados chamado, que implementa <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, possui a mídia de armazenamento após a chamada retorna. Isso significa que o objeto de dados deve liberar o meio após ele ter sido usado chamando o <see langword="ReleaseStgMedium" /> função. <see langword="false" />para especificar que o chamador reterá a propriedade da mídia de armazenamento e o objeto de dados chamado usa a mídia de armazenamento para a duração da chamada somente.</param>
        <summary>Transfere dados ao objeto que implementa este método. Este método é chamado por um objeto que contém uma fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataObject> é convertida em uma interface de <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
