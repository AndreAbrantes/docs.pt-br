<Type Name="BevelBitmapEffect" FullName="System.Windows.Media.Effects.BevelBitmapEffect">
  <TypeSignature Language="C#" Value="public sealed class BevelBitmapEffect : System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BevelBitmapEffect extends System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.BevelBitmapEffect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.BitmapEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Cria um bisel que eleva a superfície da imagem de acordo com uma curva especificada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]efeitos de bitmap são renderizados por software. Qualquer objeto que aplique um efeito também será renderizado em software. Efeitos de bitmap não devem ser aplicados a grandes animações ou visuais, pois isso pode degradar o desempenho.  
  
 O tipo de bisel (inclinação curva) é determinado pelo <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> propriedade.  
  
 <xref:System.Windows.Media.Effects.BevelBitmapEffect>é um dos vários efeitos que são fornecidos com o SDK. Outros efeitos incluem:  
  
-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.EmbossBitmapEffect>  
  
 A ilustração a seguir mostra um <xref:System.Windows.Media.Effects.BevelBitmapEffect> aplicado a um objeto visual (nesse caso é aplicado a um <xref:System.Windows.Controls.Button>).  
  
 ![Captura de tela: Comparar os botões normais e em bisel](~/add/media/effects-bevelsimple1.png "captura de tela: comparar os botões normais e em bisel")  
  
 As ilustrações a seguir mostram o efeito de várias propriedades básicas de <xref:System.Windows.Media.Effects.BevelBitmapEffect>.  
  
 O <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A> propriedade especifica a largura Bisel:  
  
 ![Captura de tela: Comparar valores BevelWidth](~/add/media/effects-bevelbevelwidth.png "captura de tela: BevelWidth comparar valores")  
  
 O <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> propriedade especifica a curva de bisel:  
  
 ![Captura de tela: Comparar valores de EdgeProfile](~/add/media/effects-beveledgeprofile.png "captura de tela: comparar valores de EdgeProfile")  
  
 O <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> propriedade especifica a compensação de bisel:  
  
 ![Captura de tela: Comparar propriedades de relevo](~/add/media/effects-bevelrelief.png "captura de tela: comparar propriedades de relevo")  
  
 O <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> propriedade especifica como smooth sombras do bisel:  
  
 ![Captura de tela: Comparar valores de propriedade suavidade](~/add/media/effects-bevelsmoothness.png "captura de tela: valores de propriedade suavidade comparar")  
  
 O <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> Especifica de propriedade de direção "light virtual" vem do que cria as sombras do bisel:  
  
 ![Captura de tela: Comparar ângulos de luz](~/add/media/effects-bevellightangle.png "captura de tela: comparar ângulos de luz")  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">para criar uma instância do <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" /> classe. Enumerações associadas:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BevelBitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelWidth">
      <MemberSignature Language="C#" Value="public double BevelWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BevelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Obtém ou define a largura do bisel.</summary>
        <value>A largura do bisel. O valor padrão é <c>5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir demonstra o efeito dessa propriedade:  
  
 ![Captura de tela: Comparar valores BevelWidth](~/add/media/effects-bevelbevelwidth.png "captura de tela: BevelWidth comparar valores")  
  
<a name="dependencyPropertyInfo_BevelWidth"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>|  
|Propriedades de metadados é definido como`true`|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BevelWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BevelWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BevelWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BevelBitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BevelBitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BevelBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Cria um clone modificável desse <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. O objeto clonado <see cref="P:System.Windows.Freezable.IsFrozen" /> propriedade será <see langword="false" /> mesmo se a fonte <see cref="P:System.Windows.Freezable.IsFrozen" /> era de propriedade<see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BevelBitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BevelBitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BevelBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Cria um clone modificável desse objeto <see cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />, fazendo cópias em profundidade dos valores do objeto atual. Referências de recurso, associações de dados e animações não são copiadas, mas seus valores atuais são</summary>
        <returns>Um clone modificável do objeto atual. O objeto clonado <see cref="P:System.Windows.Freezable.IsFrozen" /> propriedade será <see langword="false" /> mesmo se a fonte <see cref="P:System.Windows.Freezable.IsFrozen" /> propriedade era <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeProfile">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.EdgeProfile EdgeProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Effects.EdgeProfile EdgeProfile" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.EdgeProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Obtém ou define a curva de bisel.</summary>
        <value>A curva de bisel. O valor padrão é <see cref="F:System.Windows.Media.Effects.EdgeProfile.Linear" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir demonstra o efeito dessa propriedade:  
  
 ![Captura de tela: Comparar valores de EdgeProfile](~/add/media/effects-beveledgeprofile.png "captura de tela: comparar valores de EdgeProfile")  
  
<a name="dependencyPropertyInfo_EdgeProfile"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>|  
|Propriedades de metadados é definido como`true`|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeProfileProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EdgeProfileProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EdgeProfileProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightAngle">
      <MemberSignature Language="C#" Value="public double LightAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LightAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Obtém ou define a direção "light virtual" for proveniente que cria as sombras do bisel.</summary>
        <value>A direção da fonte de luz virtual. O intervalo válido é de 0-360 (graus) com 0 especifica o lado direito do objeto e valores sucessivos movendo no sentido anti-horário em torno do objeto. Sombras do bisel estão no lado oposto do qual a luz é convertida. O valor padrão é <c>135</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O diagrama a seguir mostra quais direção da luz proveniente para um determinado valor dessa propriedade. Sombras do bisel são convertidas no lado oposto do ângulo leve.  
  
 ![Diagrama: Direção de sombra](~/add/media/effects-dropshadowdirection2.png "diagrama: direção de sombra")  
  
 A ilustração a seguir demonstra o efeito dessa propriedade:  
  
 ![Captura de tela: Comparar ângulos de luz](~/add/media/effects-bevellightangle.png "captura de tela: comparar ângulos de luz")  
  
<a name="dependencyPropertyInfo_LightAngle"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>|  
|Propriedades de metadados é definido como`true`|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LightAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LightAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relief">
      <MemberSignature Language="C#" Value="public double Relief { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Relief" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Obtém ou define a altura de alívio de bisel.</summary>
        <value>A altura de alívio de bisel. O intervalo válido é entre <c>0</c> e <c>1</c> com <c>1</c> tendo mais alívio (sombras mais escuros). O valor padrão é <c>0.3</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir demonstra o efeito dessa propriedade:  
  
 ![Captura de tela: Comparar propriedades de relevo](~/add/media/effects-bevelrelief.png "captura de tela: comparar propriedades de relevo")  
  
<a name="dependencyPropertyInfo_Relief"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>|  
|Propriedades de metadados é definido como`true`|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliefProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ReliefProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ReliefProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smoothness">
      <MemberSignature Language="C#" Value="public double Smoothness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Smoothness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Obtém ou define como smooth são de sombras do bisel.</summary>
        <value>Valor que indica como smooth são de sombras de inclinação. O intervalo válido é entre <c>0</c> e <c>1</c> com <c>1</c> sendo o mais uniforme. O valor padrão é <c>0,2</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir demonstra o efeito dessa propriedade:  
  
 ![Captura de tela: Comparar valores de propriedade suavidade](~/add/media/effects-bevelsmoothness.png "captura de tela: valores de propriedade suavidade comparar")  
  
<a name="dependencyPropertyInfo_Smoothness"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>|  
|Propriedades de metadados é definido como`true`|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothnessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SmoothnessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SmoothnessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Observação: esta API agora é obsoleta.** A alternativa não obsoleta é <see cref="T:System.Windows.Media.Effects.Effect" />. Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
