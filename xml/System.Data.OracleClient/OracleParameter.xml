<Type Name="OracleParameter" FullName="System.Data.OracleClient.OracleParameter">
  <TypeSignature Language="C#" Value="public sealed class OracleParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleParameter/OracleParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um parâmetro para um <see cref="T:System.Data.OracleClient.OracleCommand" /> e, opcionalmente, seu mapeamento para um <see cref="T:System.Data.DataColumn" />. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nomes de parâmetros não diferenciam maiusculas de minúsculas.  
  
 Ao consultar um banco de dados Oracle usando o provedor Microsoft OLE DB para Oracle (MSDAORA) e o ODBC.NET Framework Data Provider, usando o `LIKE` cláusula para valores de consulta nos campos de comprimento fixo pode não retornar esperadas todas as correspondências. A razão é que, quando Oracle coincide com os valores dos campos de comprimento fixo em um `LIKE` cláusula, ele corresponde toda a duração da cadeia de caracteres, incluindo qualquer preenchimento espaços à direita. Por exemplo, se uma tabela em um banco de dados Oracle contém um campo denominado "Campo1" é definido como `char(3)`, e insira o valor "a" em uma linha da tabela, o código a seguir não retornará a linha.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Isso ocorre porque o Oracle armazena o valor da coluna como "a" (preenchimento "a", com espaços até o comprimento de campo fixo de 3 à direita), que o Oracle não tratará como uma correspondência para o valor do parâmetro de "a" no caso de um `LIKE` comparação dos campos de comprimento fixo.  
  
 Para resolver esse problema, acrescente um caractere curinga de porcentagem ("%") para o valor do parâmetro (`"a%"`), ou usar um SQL `=` comparação em vez disso.  
  
   
  
## Examples  
 O exemplo a seguir cria várias instâncias do <xref:System.Data.OracleClient.OracleParameter> por meio de <xref:System.Data.OracleClient.OracleParameterCollection> dentro de <xref:System.Data.OracleClient.OracleDataAdapter>. Esses parâmetros são usados para selecionar dados do banco de dados e colocar os dados de <xref:System.Data.DataSet>. Este exemplo supõe que um <xref:System.Data.DataSet> e um <xref:System.Data.OracleClient.OracleDataAdapter> já foram criados usando o esquema apropriado, comandos e conexão.  
  
 [!code-csharp[Classic WebData OracleParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="oracleType">Um dos valores de <see cref="T:System.Data.OracleClient.OracleType" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro e o tipo de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="oracleType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="value">Um objeto <see cref="T:System.Data.OracleClient.OracleParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro e um objeto <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você especifica um <xref:System.Object> no `value` parâmetro, o <xref:System.Data.DbType> é inferido do tipo do Microsoft .NET Framework a <xref:System.Object>.  
  
 Tenha cuidado ao usar essa sobrecarga do <xref:System.Data.OracleClient.OracleParameter> construtor. Porque essa sobrecarga toma uma `value` do tipo <xref:System.Object>, você deve converter o valor inteiro para um <xref:System.Object> digite quando o valor for zero, como demonstrado no exemplo seguinte do Microsoft Visual c#.  
  
```  
Parameter = new OracleParameter("pname", Convert.ToInt32(0));  
```  
  
 Se você não realizar essa conversão, o compilador assumirá que você está tentando chamar o `OracleParameter`(`string`, `OracleType`) sobrecarga de construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="oracleType">Um dos valores de <see cref="T:System.Data.OracleClient.OracleType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro, o tipo de dados e o tamanho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="oracleType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="oracleType">Um dos valores de <see cref="T:System.Data.OracleClient.OracleType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="srcColumn">O nome da coluna de origem.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho e o nome da coluna de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="oracleType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser mapeado.</param>
        <param name="oracleType">Um dos valores de <see cref="T:System.Data.OracleClient.OracleType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="direction">Um dos valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="sourceColumn">O nome da coluna de origem.</param>
        <param name="sourceVersion">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> se a coluna de origem permitir valor nulo; caso contrário, <see langword="false" />.</param>
        <param name="value">Um <see cref="T:System.Object" /> que é o valor do <see cref="T:System.Data.OracleClient.OracleParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho, a direção, a coluna de origem, a versão de origem e outras propriedades.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="oracleType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="oracleType">Um dos valores de <see cref="T:System.Data.OracleClient.OracleType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="direction">Um dos valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="isNullable">
          <see langword="true" /> se o valor do campo puder ser null, caso contrário, <see langword="false" />.</param>
        <param name="precision">O número total de dígitos à esquerda e à direita do ponto decimal para o qual o <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> é resolvido.</param>
        <param name="scale">O número total de casas decimais para as quais o <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> é resolvido.</param>
        <param name="srcColumn">O nome da coluna de origem.</param>
        <param name="srcVersion">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="value">Um <see cref="T:System.Object" /> que é o valor do <see cref="T:System.Data.OracleClient.OracleParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho, o nome da coluna de origem, a direção de parâmetro, a precisão numérica e outras propriedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e exibe o <xref:System.Data.OracleClient.OracleParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="oracleType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
        <value>Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.AnsiString" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> e <xref:System.Data.OracleClient.OracleParameter.DbType%2A> estão vinculados. Portanto, definir o <xref:System.Data.OracleClient.OracleParameter.DbType%2A> alterações a <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> para um suporte <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>.  
  
 O <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, e <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedades de um parâmetro podem ser inferidas definindo <xref:System.Data.OracleClient.OracleParameter.Value%2A>. Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.OracleClient.OracleParameter> as configurações de propriedade. Por exemplo, se o tamanho do parâmetro foi inferido, <xref:System.Data.OracleClient.OracleParameter.Size%2A> não tem valor inferido após a execução da instrução. Para `String` tipos de dados, o padrão é <xref:System.Data.DbType.AnsiString>.  
  
 Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> membro. Para obter mais informações, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OracleParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Data.ParameterDirection> é a saída e a execução de associado <xref:System.Data.OracleClient.OracleCommand> não retorna um valor, o <xref:System.Data.OracleClient.OracleParameter> contém um valor nulo.  
  
 `Output`, `InputOut`, e `ReturnValue` parâmetros retornados ao chamar <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> não pode ser acessado até que você chame <xref:System.Data.OracleClient.OracleDataReader.Close%2A> sobre o <xref:System.Data.OracleClient.OracleDataReader>.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A propriedade não foi definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o parâmetro aceita valores nulos.</summary>
        <value>
          <see langword="true" />Se valores nulos forem aceitas, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores nulos são tratados usando a <xref:System.DBNull> classe.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("DName", OracleType.VarChar, 14)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("DName", OracleType.VarChar, 14);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o deslocamento a <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> propriedade.</summary>
        <value>O deslocamento para a <see cref="P:System.Data.OracleClient.OracleParameter.Value" />. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Offset` propriedade é usada para o cliente de agrupamento de dados binários e de cadeia de caracteres. Por exemplo, para inserir 10 MB de texto em uma coluna em um servidor, um usuário pode executar 10 inserções com parâmetros de partes de 1 MB, o valor de deslocamento de `Offset` em cada iteração de 1 MB.  
  
 `Offset`Especifica o número de bytes para tipos binários e o número de caracteres para cadeias de caracteres. A contagem de cadeias de caracteres não inclui o caractere de terminação.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Offset = 3  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Offset = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OracleType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType OracleType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType OracleType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.OracleClient.OracleType" /> do parâmetro.</summary>
        <value>Um valor <see cref="T:System.Data.OracleClient.OracleType" /> que é o <see cref="T:System.Data.OracleClient.OracleType" /> do parâmetro. O padrão é <see cref="F:System.Data.OracleClient.OracleType.VarChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> e <xref:System.Data.OracleClient.OracleParameter.DbType%2A> estão vinculados. Portanto, definir o <xref:System.Data.OracleClient.OracleParameter.DbType%2A> alterações a <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> para um suporte <xref:System.Data.OracleClient.OracleType>.  
  
 O <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, e <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedades de um parâmetro podem ser inferidas definindo <xref:System.Data.OracleClient.OracleParameter.Value%2A>. Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.OracleClient.OracleParameter> as configurações de propriedade. Por exemplo, se o tamanho do parâmetro foi inferido, <xref:System.Data.OracleClient.OracleParameter.Size%2A> não tem valor inferido após a execução da instrução. Para `String` tipos de dados, o padrão é <xref:System.Data.OracleClient.OracleType.VarChar>.  
  
 Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.OracleClient.OracleType> membro. Para obter mais informações, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <value>O nome do <see cref="T:System.Data.OracleClient.OracleParameter" />. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O provedor de dados .NET Framework para Oracle não oferece suporte a parâmetros posicionais são marcados com um ponto de interrogação (?).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Precision has been deprecated.  Use the Math classes to explicitly set the precision of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
        <value>O número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.OracleClient.OracleParameter.Value" />. O valor padrão é 0, que indica que o provedor de dados define a precisão do <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o <xref:System.Data.OracleClient.OracleParameter.Precision%2A> ou <xref:System.Data.OracleClient.OracleParameter.Scale%2A> propriedades não tem nenhum efeito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o tipo associado a este <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta tanto o <xref:System.Data.Odbc.OdbcParameter.DbType%2A> e <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> propriedades da <xref:System.Data.OracleClient.OracleParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOracleType">
      <MemberSignature Language="C#" Value="public void ResetOracleType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOracleType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o tipo associado a este <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta tanto o <xref:System.Data.Odbc.OdbcParameter.DbType%2A> e <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> propriedades da <xref:System.Data.OracleClient.OracleParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Scale has been deprecated.  Use the Math classes to explicitly set the scale of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de casas decimais para as quais o <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> é resolvido.</summary>
        <value>O número de casas decimais para o qual o <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> é resolvido. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o <xref:System.Data.OracleClient.OracleParameter.Precision%2A> ou <xref:System.Data.OracleClient.OracleParameter.Scale%2A> propriedades não tem nenhum efeito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho máximo, em bytes, dos dados da coluna.</summary>
        <value>O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é 0 (para ser usado quando você não quiser especificar o tamanho máximo do valor).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Configuração <xref:System.Data.OracleClient.OracleParameter.Size%2A> afeta somente o valor de um parâmetro de entrada. Valores de retorno e parâmetros de saída não são afetados por essa propriedade.  
  
 O <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedade é usada para tipos binários e de cadeia de caracteres.  
  
 Para dados de cadeia de caracteres de tipos de dados não-String e ANSI de <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedade se refere ao número de bytes. Para dados de cadeia de caracteres Unicode, <xref:System.Data.OracleClient.OracleParameter.Size%2A> se refere ao número de caracteres. A contagem de cadeias de caracteres não inclui o caractere de terminação.  
  
 Para tipos de dados de comprimento variável, <xref:System.Data.OracleClient.OracleParameter.Size%2A> descreve a quantidade máxima de dados para transmitir para o servidor. Por exemplo, para um valor de cadeia de caracteres Unicode, <xref:System.Data.OracleClient.OracleParameter.Size%2A> pode ser usado para limitar a quantidade de dados enviados ao servidor para os caracteres de cem primeiro.  
  
 Para parâmetros de saída e bidirecionais e valores de retorno, você deve definir o valor de tamanho. Isso não é necessário para parâmetros de entrada, e se não foi explicitamente definido, o valor é inferido do tamanho real do parâmetro especificado quando uma instrução parametrizada é executada.  
  
 O <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, e <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedades de um parâmetro podem ser inferidas definindo <xref:System.Data.OracleClient.OracleParameter.Value%2A>. Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.OracleClient.OracleParameter> as configurações de propriedade. Por exemplo, se o tamanho do parâmetro foi inferido, <xref:System.Data.OracleClient.OracleParameter.Size%2A> não tem valor inferido após a execução da instrução.  
  
 De comprimento fixo tipos de dados, o valor de <xref:System.Data.OracleClient.OracleParameter.Size%2A> será ignorado. Ele pode ser recuperado para fins informativos e retorna o número máximo de bytes que o provedor usa ao transmitir o valor do parâmetro para o servidor.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDescription", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
   parameter.Size = 88  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDescription", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
   parameter.Size = 88;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.OracleClient.OracleParameter.Value" /></summary>
        <value>O nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O vínculo entre o valor da <xref:System.Data.OracleClient.OracleParameter> e <xref:System.Data.DataTable> pode ser bidirecional, dependendo do valor da <xref:System.Data.OracleClient.OracleParameter.Direction%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define ou obtém um valor que indica se a coluna de origem permite valor nulo. Isso permite que <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> gere corretamente instruções Update para colunas que permitem valor nulo.</summary>
        <value>
          <see langword="True" /> se a coluna de origem permitir valor nulo; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A>é usado pelo <xref:System.Data.OracleClient.OracleCommandBuilder> ao gerar comandos de atualização corretamente ao lidar com colunas anuláveis. Em geral, uso de <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> é limitado aos desenvolvedores herdando <xref:System.Data.OracleClient.OracleCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder>usa essa propriedade para determinar se a coluna de origem é anulável e define essa propriedade como `true` se ele for anulável, e `false` se não for. Quando <xref:System.Data.OracleClient.OracleCommandBuilder> é gerar sua instrução de atualização, ele examina o <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> para cada parâmetro. Se a propriedade for `true`, <xref:System.Data.OracleClient.OracleCommandBuilder> gera um cláusulas WHERE como a seguir (esta expressão de consulta "FieldName" representa o nome do campo):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Se <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> para o campo é false, <xref:System.Data.OracleClient.OracleCommandBuilder> gera a seguinte cláusula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Além disso, @IsNull_FieldName contém 1 se o campo de origem contém null e 0 se não existir. Esse mecanismo permite uma otimização de desempenho do servidor Oracle e fornece código comum que funciona em vários provedores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> para usar ao carregar <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
        <value>Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade é usada pelo <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> durante o <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> para determinar se o valor original ou atual é usado para um valor de parâmetro. Isso permite que as chaves primárias ser atualizado. Essa propriedade é definida para a versão do <xref:System.Data.DataRow> usado pelo <xref:System.Data.DataRow.Item%2A?displayProperty=nameWithType> propriedade (<xref:System.Data.DataRow> indexador), ou o <xref:System.Data.DataRow.GetChildRows%2A?displayProperty=nameWithType> método o <xref:System.Data.DataRow> objeto.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.SourceColumn = "Description"  
   parameter.SourceVersion = DataRowVersion.Current  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.SourceColumn = "Description";  
   parameter.SourceVersion = DataRowVersion.Current;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Um novo objeto que é uma cópia dessa instância.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleParameter> é convertida em uma interface de <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma cadeia de caracteres que contém o <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />.</summary>
        <returns>Uma cadeia de caracteres que contém o <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor do parâmetro.</summary>
        <value>Um objeto que é o valor do parâmetro. O valor padrão é null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para parâmetros de entrada, o valor é vinculado ao <xref:System.Data.OracleClient.OracleCommand> que é enviado ao servidor. Para parâmetros de valor de retorno e saída, o valor é definido na conclusão do <xref:System.Data.OracleClient.OracleCommand> e depois o <xref:System.Data.OracleClient.OracleDataReader> está fechado.  
  
 Para um parâmetro de entrada, <xref:System.Data.OracleClient.OracleParameter.Value%2A> pode ser definido como um objeto de um tipo de dados do Microsoft .NET Framework ou um tipo de dados Oracle (por exemplo, um <xref:System.Data.OracleClient.OracleNumber> ou <xref:System.Data.OracleClient.OracleString>).  
  
 Quando você envia um valor de parâmetro nulo para o servidor, você deve especificar DBNull, e não nulo. Um valor nulo no sistema é um objeto vazio que não tem nenhum valor. DBNull é usado para representar valores nulos.  
  
 Se o aplicativo especifica o tipo de banco de dados, o valor associado é convertido para esse tipo de quando o provedor envia os dados para o servidor. O provedor tenta converter qualquer tipo de valor se ele dá suporte a <xref:System.IConvertible> interface. Erros de conversão podem resultar se o tipo especificado não é compatível com o valor.  
  
 O <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, e <xref:System.Data.OracleClient.OracleParameter.Size%2A> propriedades de um parâmetro podem ser inferidas, definindo o valor. Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.OracleClient.OracleParameter> as configurações de propriedade. Por exemplo, se o tamanho do parâmetro foi inferido, tamanho não contém valor inferido após a execução da instrução.  
  
 O `InputOutput`, `Output`, e `ReturnValue` <xref:System.Data.ParameterDirection> valores usados pela propriedade de valor serão tipos de dados do Microsoft .NET Framework, a menos que o valor de entrada era um tipo de dados Oracle (por exemplo, <xref:System.Data.OracleClient.OracleNumber> ou <xref:System.Data.OracleClient.OracleString>). Isso não se aplicam a REF CURSOR, BFILE, ou tipos de dados LOB.  
  
 O <xref:System.Data.OracleClient.OracleParameter.Value%2A> propriedade é substituída pelo **atualização** método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
