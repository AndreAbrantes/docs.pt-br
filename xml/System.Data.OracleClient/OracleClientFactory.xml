<Type Name="OracleClientFactory" FullName="System.Data.OracleClient.OracleClientFactory">
  <TypeSignature Language="C#" Value="public sealed class OracleClientFactory : System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleClientFactory extends System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleClientFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleClientFactory has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um conjunto de métodos para criar instâncias de implementação de classes de fonte de dados do provedor Oracle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse tipo foi substituído e será removido em uma versão futura do .NET Framework. Para obter mais informações, consulte [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbCommand" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbCommand> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim command As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbCommand command = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommandBuilder CreateCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommandBuilder CreateCommandBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateCommandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbCommandBuilder" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbCommandBuilder> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim commandBuilder As DbCommandBuilder = newFactory.CreateCommandBuilder()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbCommandBuilder commandBuilder = newFactory.CreateCommandBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnection CreateConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnection CreateConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbConnection" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbConnection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbConnection> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim connection As DbConnection = newFactory.CreateConnection()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbConnection connection = newFactory.CreateConnection();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionStringBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateConnectionStringBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnectionStringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbConnectionStringBuilder> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim connectionBuilder As DbConnectionStringBuilder = newFactory.CreateConnectionStringBuilder()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbConnectionStringBuilder connectionBuilder = newFactory.CreateConnectionStringBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataAdapter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbDataAdapter CreateDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbDataAdapter CreateDataAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateDataAdapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbDataAdapter" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbDataAdapter> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim dataAdpater As DbDataAdapter = newFactory.CreateDataAdapter()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbDataAdapter dataAdpater = newFactory.CreateDataAdapter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreateParameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância <see cref="T:System.Data.Common.DbParameter" /> fortemente tipada.</summary>
        <returns>Uma nova instância fortemente tipada de <see cref="T:System.Data.Common.DbParameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir retorna um fortemente tipada <xref:System.Data.Common.DbParameter> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim parameter As DbParameter = newFactory.CreateParameter()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbParameter parameter = newFactory.CreateParameter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.CodeAccessPermission CreatePermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.CodeAccessPermission CreatePermission(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleClientFactory.CreatePermission(System.Security.Permissions.PermissionState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.CodeAccessPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Membro de <see cref="T:System.Security.Permissions.PermissionState" /> enumeração.</param>
        <summary>Retorna uma instância <see cref="T:System.Security.CodeAccessPermission" /> fortemente tipada.</summary>
        <returns>Uma instância com rigidez de tipos de <see cref="T:System.Security.CodeAccessPermission" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleClientFactory Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleClientFactory Instance" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleClientFactory.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleClientFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma instância do <see cref="T:System.Data.OracleClient.OracleClientFactory" />, que pode ser usado para recuperar fortemente tipado a objetos de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O fragmento de código a seguir usa o <xref:System.Data.OracleClient.OracleClientFactory.Instance> campo a recuperar um <xref:System.Data.OracleClient.OracleClientFactory> de instância e, em seguida, retornar um fortemente tipada <xref:System.Data.Common.DbCommand> instância.  
  
```vb  
Dim newFactory As OracleClientFactory = OracleClientFactory.Instance  
Dim command As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
OracleClientFactory newFactory = OracleClientFactory.Instance;  
DbCommand command = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
