<Type Name="ColorTypeConverter" FullName="System.Windows.Xps.Serialization.ColorTypeConverter">
  <TypeSignature Language="C#" Value="public class ColorTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColorTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ColorTypeConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece conversores de tipo para converter <see cref="T:System.Windows.Media.Color" /> para e de objetos de outros tipos de objetos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe também tem métodos para gravação um <xref:System.Windows.Media.ColorContext> para um [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] pacote e lendo um <xref:System.Windows.Media.ColorContext> de um [!INCLUDE[TLA2#tla_metro](~/includes/tla2sharptla-metro-md.md)] pacote recebe uma cadeia de caracteres que representa o [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] do <xref:System.Windows.Media.ColorContext>.  
  
 Consulte as classes base <xref:System.ComponentModel.TypeConverter> e <xref:System.ComponentModel.ExpandableObjectConverter> para notas importantes de uso.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte as classes base <xref:System.ComponentModel.TypeConverter> e <xref:System.ComponentModel.ExpandableObjectConverter> para notas importantes de uso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="sourceType">O tipo de objeto que é um candidato para conversão.</param>
        <summary>Retorna um valor que indica se esse conversor pode converter uma instância de um tipo especificado para um <see cref="T:System.Windows.Media.Color" />.</summary>
        <returns>
          <see langword="true" />Se os objetos do tipo especificado podem ser convertidos; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe, este método retorna `true` somente se `sourceType` é um <xref:System.String>.  
  
 O `context` parâmetro não for usado. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer seus próprios requisitos de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser <see langword="null" />; portanto, sempre verifique a ele. Além disso, propriedades de <paramref name="context" /> objeto pode retornar uma referência nula (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="destinationType">O tipo de objeto que você deseja converter uma cor.</param>
        <summary>Retorna um valor que indica se este <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" /> pode converter um <see cref="T:System.Windows.Media.Color" /> a uma instância de um tipo especificado.</summary>
        <returns>
          <see langword="true" />Se a conversão é executado. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe, este método retorna `true` somente se `destinationType` é um <xref:System.String>.  
  
 O `context` parâmetro não for usado. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer seus próprios requisitos de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser <see langword="null" />; portanto, sempre verifique a ele. Além disso, propriedades de <paramref name="context" /> objeto pode retornar uma referência nula (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="culture">O idioma e cultura que são usados durante a conversão.</param>
        <param name="value">O objeto que é convertido.</param>
        <summary>Converte um objeto especificado para um <see cref="T:System.Windows.Media.Color" />.</summary>
        <returns>O novo objeto <see cref="T:System.Windows.Media.Color" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não está implementado nesta classe — exceto ao lançar exceções. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Este método é chamado a partir dessa classe, em vez de uma classe derivada.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">O <paramref name="value" /> não é um tipo que possa ser convertido.</exception>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer um método de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Use o <paramref name="culture" /> parâmetro para fornecer informações sobre o idioma ou cultura.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="culture">O idioma e cultura que são usados durante a conversão.</param>
        <param name="value">O objeto que você deseja converter.</param>
        <param name="destinationType">O tipo que <c>valor</c> é convertido em.</param>
        <summary>Converte um <see cref="T:System.Windows.Media.Color" /> a um objeto do tipo especificado.</summary>
        <returns>O novo <see cref="T:System.Object" /> do tipo designado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe `destinationType` deve ser um <xref:System.String> ou a exceção é gerada. O formato da cadeia de caracteres varia de acordo com o valor de `context` e `culture`.  
  
 Se `culture` é `null`, a cultura atual do sistema é usada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O <paramref name="destinationType" /> não é um tipo que <paramref name="value" /> pode ser convertida.  
  
 -ou-  
  
 O <paramref name="culture" /> é uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="value">Um objeto do tipo para o qual você precisa de descrições de propriedade.</param>
        <param name="attributes">Uma matriz de atributos que filtrar a coleção retornada para excluir propriedades irrelevantes.</param>
        <summary>Obtém uma coleção de descrições de propriedade para o tipo especificado.</summary>
        <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as descrições de propriedade que são expostas para o componente; ou <see langword="null" /> se nenhuma descrição de propriedade é retornadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não está implementado nesta classe — exceto ao lançar a exceção. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Este método é chamado a partir dessa classe, em vez de uma classe derivada.</exception>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer um método para a obtenção de selecionados <see cref="T:System.ComponentModel.PropertyDescriptor" /> objetos para os tipos. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Use o <paramref name="attributes" /> matriz para designar as propriedades para incluir ou excluir.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeColorContext">
      <MemberSignature Language="C#" Value="public static string SerializeColorContext (IServiceProvider context, System.Windows.Media.ColorContext colorContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SerializeColorContext(class System.IServiceProvider context, class System.Windows.Media.ColorContext colorContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.SerializeColorContext(System.IServiceProvider,System.Windows.Media.ColorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.IServiceProvider" />
        <Parameter Name="colorContext" Type="System.Windows.Media.ColorContext" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="colorContext">O objeto a ser serializado.</param>
        <summary>Serializa um <see cref="T:System.Windows.Media.ColorContext" /> para o [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] pacote e retorna seu [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] como uma cadeia de caracteres.</summary>
        <returns>Um <see cref="T:System.String" /> que representa o [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] do contexto de cor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="colorContext" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
