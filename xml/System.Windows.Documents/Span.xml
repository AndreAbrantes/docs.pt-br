<Type Name="Span" FullName="System.Windows.Documents.Span">
  <TypeSignature Language="C#" Value="public class Span : System.Windows.Documents.Inline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Span extends System.Windows.Documents.Inline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Span" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Inline</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Inlines")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Agrupa outros <see cref="T:System.Windows.Documents.Inline" /> elementos de conteúdo de fluxo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Span>é usado para agrupar outros elementos de conteúdo de fluxo embutido. Nenhum processamento inerente é aplicado ao conteúdo ou outros elementos dentro de um <xref:System.Windows.Documents.Span> elemento.  
  
 <xref:System.Windows.Documents.Span>aplica um modelo de conteúdo de alta segurança para o conteúdo filho. Elementos filho contidos em um <xref:System.Windows.Documents.Span> elemento deve ser derivado de <xref:System.Windows.Documents.Inline>. Elementos filhos válidos incluem:  
  
-   <xref:System.Windows.Documents.Bold>  
  
-   <xref:System.Windows.Documents.Figure>  
  
-   <xref:System.Windows.Documents.Floater>  
  
-   <xref:System.Windows.Documents.Hyperlink>  
  
-   <xref:System.Windows.Documents.InlineUIContainer>  
  
-   <xref:System.Windows.Documents.Italic>  
  
-   <xref:System.Windows.Documents.LineBreak>  
  
-   <xref:System.Windows.Documents.Run>  
  
-   <xref:System.Windows.Documents.Span>  
  
-   <xref:System.Windows.Documents.Underline>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Span ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Span.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância vazia do <see cref="T:System.Windows.Documents.Span" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Span (System.Windows.Documents.Inline childInline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Inline childInline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childInline" Type="System.Windows.Documents.Inline" />
      </Parameters>
      <Docs>
        <param name="childInline">O conteúdo inicial do novo <see cref="T:System.Windows.Documents.Span" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Documents.Span" /> classe com especificado <see cref="T:System.Windows.Documents.Inline" /> objeto como o conteúdo inicial.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o construtor para criar uma nova faixa contém um <xref:System.Windows.Documents.Run>.  
  
 [!code-csharp[SpanSnippets#_Span_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_span_const1)]
 [!code-vb[SpanSnippets#_Span_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_span_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Span (System.Windows.Documents.Inline childInline, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Inline childInline, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childInline" Type="System.Windows.Documents.Inline" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="childInline">Um <see cref="T:System.Windows.Documents.Inline" /> objeto que especifica o conteúdo inicial do novo <see cref="T:System.Windows.Documents.Span" />. Esse parâmetro pode ser nulo, caso em que não <see cref="T:System.Windows.Documents.Inline" /> é inserido.</param>
        <param name="insertionPosition">Um <see cref="T:System.Windows.Documents.TextPointer" /> que especifica a posição na qual inserir o <see cref="T:System.Windows.Documents.Span" /> elemento depois que ele é criado, ou nulo para nenhuma inserção automática.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Documents.Span" /> classe, levando a especificada <see cref="T:System.Windows.Documents.Inline" /> objeto como o conteúdo inicial do novo <see cref="T:System.Windows.Documents.Span" />e um <see cref="T:System.Windows.Documents.TextPointer" /> que especifica a posição de uma inserção para o novo <see cref="T:System.Windows.Documents.Inline" /> elemento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o construtor para criar um novo <xref:System.Windows.Documents.Span> que contém um <xref:System.Windows.Documents.Run> inserido no início de um <xref:System.Windows.Documents.Paragraph>.  
  
 [!code-csharp[SpanSnippets#_Span_Const2](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_span_const2)]
 [!code-vb[SpanSnippets#_Span_Const2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_span_const2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Span (System.Windows.Documents.TextPointer start, System.Windows.Documents.TextPointer end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.TextPointer start, class System.Windows.Documents.TextPointer end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="end" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="start">Um <see cref="T:System.Windows.Documents.TextPointer" /> que indica o início de uma seleção de conteúdo que o novo <see cref="T:System.Windows.Documents.Span" /> conterá.</param>
        <param name="end">Um <see cref="T:System.Windows.Documents.TextPointer" /> que indica o final de uma seleção de conteúdo que o novo <see cref="T:System.Windows.Documents.Span" /> conterá.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Documents.Span" /> classe, levando duas <see cref="T:System.Windows.Documents.TextPointer" /> que indicam o início e fim de uma seleção de objetos de conteúdo que o novo <see cref="T:System.Windows.Documents.Span" /> conterá.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor destina-se ao inicializar um novo <xref:System.Windows.Documents.Span> elemento tal que envolva uma seleção de pré-existente de conteúdo.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o construtor para criar um novo <xref:System.Windows.Documents.Span> que é aplicada a uma variedade de conteúdo. O intervalo de conteúdo é determinado pelo início e término <xref:System.Windows.Documents.TextPointer> objetos especificados pelo construtor.  
  
 [!code-csharp[SpanSnippets#_Span_Const3](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_span_const3)]
 [!code-vb[SpanSnippets#_Span_Const3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_span_const3)]  
  
 A figura a seguir mostra como esse exemplo é renderizado em um <xref:System.Windows.Documents.FlowDocument>.  
  
 ![Captura de tela: Três execuções de texto](~/add/media/span-grouping.png "captura de tela: três execuções de texto")  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gerado quando <paramref name="start" /> ou <paramref name="end" /> é nulo.</exception>
        <exception cref="T:System.ArgumentException">Gerado quando <paramref name="start" /> e <paramref name="end" /> não resolver para uma variedade de conteúdo adequado para o compartimento por um <see cref="T:System.Windows.Documents.Span" /> elemento; por exemplo, se <paramref name="start" /> e <paramref name="end" /> indicar posições em parágrafos diferentes.</exception>
      </Docs>
    </Member>
    <Member MemberName="Inlines">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.InlineCollection Inlines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.InlineCollection Inlines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Span.Inlines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.InlineCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Windows.Documents.InlineCollection" /> que contém os elementos <see cref="T:System.Windows.Documents.Inline" /> de nível superior que compõem o conteúdo do <see cref="T:System.Windows.Documents.Span" />.</summary>
        <value>Um <see cref="T:System.Windows.Documents.InlineCollection" /> que contém os elementos <see cref="T:System.Windows.Documents.Inline" /> que compõem o conteúdo do <see cref="T:System.Windows.Documents.Span" />.  
  
 Esta propriedade não tem valor padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Documents.InlineCollection> retornado por essa propriedade para enumerar ou manipular o conteúdo de um <xref:System.Windows.Documents.Span> elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInlines">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInlines (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInlines(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Um objeto de Gerenciador de serviço de serialização para este objeto.</param>
        <summary>Retorna um valor que indica se o conteúdo de um <see cref="T:System.Windows.Documents.Span" /> elemento deve ser serializado durante a serialização de um <see cref="T:System.Windows.Documents.Run" /> objeto.</summary>
        <returns>
          <see langword="true" />Se o conteúdo deve ser serializado; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Documents.Span.Inlines%2A> propriedade não tem um valor padrão simples. Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Documents.Span> ou desenvolver seu próprio controle incorporando o <xref:System.Windows.Documents.Span>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="manager" /> é nulo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
