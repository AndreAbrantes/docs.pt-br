<Type Name="VirtualizedContainerService" FullName="System.Activities.Presentation.View.VirtualizedContainerService">
  <TypeSignature Language="C#" Value="public class VirtualizedContainerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VirtualizedContainerService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.VirtualizedContainerService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um serviço de contêiner virtual associado a um contexto de edição e exibição de design. O serviço de contêiner virtual é usado para personalizar o comportamento de virtualização da interface do usuário.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Virtualização de interface do usuário é usada para processar somente as áreas da tela do designer que estão atualmente no modo de exibição, tornando o designer mais ágil na resposta e menor consumo de memória. Por padrão, designers de fluxograma e de procedimentos estão virtualização com suporte, mas se você construir um designer de fluxo de controle deve ser maior do que uma tela individual, o designer poderia se beneficiar de virtualização.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizedContainerService (System.Activities.Presentation.EditingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.EditingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.VirtualizedContainerService.#ctor(System.Activities.Presentation.EditingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Activities.Presentation.EditingContext" /> para o serviço.</param>
        <summary>Cria uma nova instância do <see cref="T:System.Activities.Presentation.View.VirtualizedContainerService" /> classe com um contexto de edição específico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainer">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement GetContainer (System.Activities.Presentation.Model.ModelItem modelItem, System.Activities.Presentation.ICompositeView sourceContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.UIElement GetContainer(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.ICompositeView sourceContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.VirtualizedContainerService.GetContainer(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.ICompositeView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="sourceContainer" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="modelItem">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associadas ao contêiner.</param>
        <param name="sourceContainer">O <see cref="T:System.Activities.Presentation.ICompositeView" /> que está associado com o item de modelo.</param>
        <summary>Obtém um contêiner e associa um item de modelo especificado e retorna um elemento de interface do usuário que representa a associação.</summary>
        <returns>O <see cref="T:System.Windows.UIElement" /> que representa o contêiner associado ao item de modelo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHintSize">
      <MemberSignature Language="C#" Value="public static object GetHintSize (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetHintSize(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.VirtualizedContainerService.GetHintSize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">O armazenamento de propriedades.</param>
        <summary>Tenta obter um valor para a propriedade Name de tamanho de dica.</summary>
        <returns>O destino <see cref="T:System.Object" /> para o valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.View.VirtualizedContainerService.GetHintSize%2A>não gera uma exceção se a propriedade não for encontrada no repositório.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewElement">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.WorkflowViewElement GetViewElement (System.Activities.Presentation.Model.ModelItem modelItem, System.Activities.Presentation.ICompositeView sourceContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.WorkflowViewElement GetViewElement(class System.Activities.Presentation.Model.ModelItem modelItem, class System.Activities.Presentation.ICompositeView sourceContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.VirtualizedContainerService.GetViewElement(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.ICompositeView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.WorkflowViewElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="sourceContainer" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="modelItem">O item de modelo subjacente do elemento de exibição do fluxo de trabalho para obter.</param>
        <param name="sourceContainer">O arrastar fonte dependência valor da propriedade a ser definido para o elemento de exibição do fluxo de trabalho.</param>
        <summary>Retorna o elemento de exibição do fluxo de trabalho que corresponde ao item de modelo especificado.</summary>
        <returns>O elemento de exibição do fluxo de trabalho que corresponde ao item de modelo especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintSizeName">
      <MemberSignature Language="C#" Value="public static readonly System.Xaml.AttachableMemberIdentifier HintSizeName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xaml.AttachableMemberIdentifier HintSizeName" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.VirtualizedContainerService.HintSizeName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AttachableMemberIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fornece um identificador de sistema de tipo de XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O identificador é uma cadeia de caracteres que consiste o <xref:System.Activities.Presentation.View.VirtualizedContainerService> digite mais "HintSize".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintSize">
      <MemberSignature Language="C#" Value="public static void SetHintSize (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHintSize(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.VirtualizedContainerService.SetHintSize(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">O armazenamento de propriedades.</param>
        <param name="value">O valor definido.</param>
        <summary>Tentativa de definir um valor para a propriedade Name de tamanho de dica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método analisa atribuída `value` em uma <xref:System.Windows.Size> objeto; portanto, a cadeia de caracteres deve ser formatada usando en-us cultura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
