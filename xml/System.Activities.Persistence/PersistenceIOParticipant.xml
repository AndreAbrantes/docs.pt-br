<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Um vclass derivado do <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> classe com métodos que executam a entrada e saída operações além de persistência e carregamento de instâncias de fluxo de trabalho por meio do processo de persistência.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um host executa as etapas seguintes (ou estágios) quando manter uma instância:  
  
1.  Coleta de valores a ser mantido.  
  
2.  Mapeia os campos de valores estruturados monolíticos para valores individuais.  
  
3.  Problemas de <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> para o provedor de persistência.  
  
4.  Executa e/s na transação de persistência.  
  
 Um host conclui uma etapa antes de iniciar o próximo estágio. Por exemplo, quando a persistência, o host coleta valores de todos os participantes de persistência antes de passar para o segundo estágio. Na segunda etapa, o host fornece todos os valores coletados na primeira etapa para todos os participantes de persistência no segundo estágio de mapeamento. Na terceira etapa, o host fornece todos os valores coletados nos estágios primeiro e o segundo para o provedor de persistência ao invocar o <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>. Em seguida, o quarto estágio, o host fornece todos os valores coletados para todos os participantes de e/s de persistência na transação de persistência.  
  
 Um host executa as seguintes fases ao carregar uma instância de persistência:  
  
1.  Problemas de <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> e <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> para o provedor de persistência.  
  
2.  Executa e/s na transação de persistência.  
  
3.  Publica os valores carregados.  
  
 Em que as extensões de instância de fluxo de trabalho de nível, mais altas que derivam de <xref:System.Activities.Persistence.PersistenceParticipant> classe pode participar (coletar) primeiro e segundo estágios (Map) do processo persistente e a terceira etapa (publicar) do processo de carregamento.  Extensões de instância de fluxo de trabalho derivado da classe PersistenceIOParticipant adicionalmente podem participar a quarta etapa do processo de persistência e o segundo estágio do processo de carregamento (e/s).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <see langword="true" />Se uma transação é necessária para a operação de salvamento. Se o <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> objeto é criado com esse parâmetro definido como <see langword="true" />, Transaction é garantido para ser definido quando BeginOnSave é invocado. A transação é compartilhada entre o provedor de persistência, todas as extensões de PersistenceIOParticipant e possivelmente outros participantes da transação.</param>
        <param name="isLoadTransactionRequired">
          <see langword="true" />Se uma transação é necessária para a operação de carregamento. Se o <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> objeto é criado com esse parâmetro definido como <see langword="true" />, Transaction é garantido para ser definido quando BeginOnLoad é invocado. A transação é compartilhada entre o provedor de persistência, todas as extensões de PersistenceIOParticipant e possivelmente outros participantes da transação.</param>
        <summary>Inicializa uma instância da classe <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anula a operação pendente de e/s (carregar ou salvar).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes derivadas que substituam BeginOnSave ou BeginOnLoad e talvez nem sempre são concluídas imediatamente devem substituir a anulação. Se a anulação é chamada, as operações de e/s pendentes devem ser canceladas. Se uma operação é cancelada assim, o método End correspondente deve lançar OperationCanceledException.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Um dicionário de valores de leitura-gravação carregados pelo provedor de persistência. Isso corresponde ao conjunto de valores de leitura-gravação passados para BeginOnSave o episódio de persistência mais recentes para essa instância.</param>
        <param name="timeout">O período de tempo no qual a operação ser concluída sem tempo limite.</param>
        <param name="callback">O representante de retorno de chamada assíncrono que recebe a notificação de conclusão da operação de carregamento assíncrona.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para carregar estado adicionais em conjunto com uma instância que está sendo carregada do armazenamento de instância.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Um dicionário de valores de leitura-gravação coletados nos estágios de CollectValues e MapValues.</param>
        <param name="writeOnlyValues">Um dicionário de valores somente gravação coletados nos estágios de CollectValues e MapValues.</param>
        <param name="timeout">O período de tempo no qual a operação ser concluída sem tempo limite.</param>
        <param name="callback">O representante de retorno de chamada assíncrono que recebe a notificação de conclusão da operação assíncrona.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para salvar o estado adicionais em conjunto com uma instância que está sendo persistente no repositório de instância.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado assíncrono retornado por uma chamada para o <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> método.</param>
        <summary>Conclui a operação de carregamento assíncrona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado assíncrono retornado por uma chamada para o <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> método.</param>
        <summary>Conclui a operação de gravação assíncrona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
