<Type Name="DesignerTransactionCloseEventHandler" FullName="System.ComponentModel.Design.DesignerTransactionCloseEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DesignerTransactionCloseEventHandler(object sender, DesignerTransactionCloseEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DesignerTransactionCloseEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A fonte do evento.</param>
    <param name="e">Um <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" /> que contém os dados do evento.</param>
    <summary>Representa o método que manipula o <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> e <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> eventos de um designer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você cria um <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> delegado, você identificar o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante. Para obter mais informações sobre delegados de manipulador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
   
  
## Examples  
 O exemplo a seguir demonstra a registrar um <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> e manipulando o <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosing> e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> eventos.  
  
 [!code-cpp[DesignerTransactionCloseEventHandlerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerTransactionCloseEventHandlerExample/CPP/designertransactioncloseeventhandlerexample.cpp#1)]
 [!code-csharp[DesignerTransactionCloseEventHandlerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerTransactionCloseEventHandlerExample/CS/designertransactioncloseeventhandlerexample.cs#1)]
 [!code-vb[DesignerTransactionCloseEventHandlerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerTransactionCloseEventHandlerExample/VB/designertransactioncloseeventhandlerexample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
