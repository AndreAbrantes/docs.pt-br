<Type Name="WorkflowEventArgs" FullName="System.Workflow.Runtime.WorkflowEventArgs">
  <TypeSignature Language="C#" Value="public class WorkflowEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece dados para eventos de fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Eventos de fluxo de trabalho são associados uma instância de fluxo de trabalho. Um <xref:System.Workflow.Runtime.WorkflowEventArgs> contém o <xref:System.Workflow.Runtime.WorkflowInstance> associado ao evento de fluxo de trabalho. Um <xref:System.Workflow.Runtime.WorkflowEventArgs> ou um objeto que deriva de <xref:System.Workflow.Runtime.WorkflowEventArgs> classe fornece os dados para todos os eventos de fluxo de trabalho no <xref:System.Workflow.Runtime.WorkflowRuntime> classe. <xref:System.Workflow.Runtime.WorkflowEventArgs>é a classe base para <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>, <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>, e <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como obter um <xref:System.Workflow.Runtime.WorkflowInstance> objeto usando o <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> propriedade quando um método de manipulador de eventos é chamado. Quando o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> evento ocorrer, o `OnWorkflowIdled` definido neste exemplo de método é chamado. Determina qual fluxo de trabalho está ocioso usando o <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> propriedade e, em seguida, obtém uma coleção de itens em fila para o fluxo de trabalho de instância ao chamar o <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> método. O código itera pela coleção para determinar qual atividade está aguardando o evento que ociosos o fluxo de trabalho. Em seguida, envia uma exceção para a fila de fluxo de trabalho usando o <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> método junto com o nome do item da fila de eventos.  
  
 Este exemplo de código é parte de cancelar uma amostra do SDK do fluxo de trabalho do arquivo Program.cs. Para obter mais informações, consulte [Cancelando um fluxo de trabalho](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="WorkflowInstance">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance WorkflowInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowInstance WorkflowInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a instância de fluxo de trabalho associada ao evento de fluxo de trabalho.</summary>
        <value>O <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> associado ao evento de fluxo de trabalho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como obter um <xref:System.Workflow.Runtime.WorkflowInstance> objeto usando o <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> propriedade quando um método de manipulador de eventos é chamado. Quando o <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> evento ocorrer, o `OnWorkflowIdled` definido neste exemplo de método é chamado. Determina qual fluxo de trabalho está ocioso usando o <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> propriedade e, em seguida, obtém uma coleção de itens em fila para o fluxo de trabalho de instância ao chamar o <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> método. O código itera pela coleção para determinar qual atividade está aguardando o evento que ociosos o fluxo de trabalho. Em seguida, envia uma exceção para a fila de fluxo de trabalho usando o <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> método junto com o nome do item da fila de eventos.  
  
 Este exemplo de código é parte de cancelar uma amostra do SDK do fluxo de trabalho do arquivo Program.cs. Para obter mais informações, consulte [Cancelando um fluxo de trabalho](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
