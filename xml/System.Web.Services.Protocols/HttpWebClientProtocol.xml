<Type Name="HttpWebClientProtocol" FullName="System.Web.Services.Protocols.HttpWebClientProtocol">
  <TypeSignature Language="C#" Value="public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpWebClientProtocol extends System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.WebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa a classe base para todos os proxies de clientes de serviço Web XML que usam o protocolo de transporte HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As propriedades nessa classe são usadas para controlar o comportamento do objeto de solicitação HTTP usado para transmitir a solicitação de serviço da Web em XML e a resposta. As propriedades são mapeados para propriedades encontradas no <xref:System.Net.HttpWebRequest>.  
  
 Para se comunicar com um serviço Web XML usando HTTP, você deve criar uma classe de proxy derivando indiretamente ou diretamente de <xref:System.Web.Services.Protocols.HttpWebClientProtocol> para o serviço Web XML. Em vez de criar a classe proxy manualmente, você pode usar a ferramenta Wsdl.exe para criar uma classe de proxy para a descrição do serviço de um determinado do XML Web Services.  
  
 Como a classe base para todas as classes de proxy HttpWebClientProtocol, suas propriedades estão em suas classes de proxy. Essas propriedades são úteis para controlar o comportamento de solicitação de transporte subjacente. Por exemplo, use o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> propriedade para chamar os XML Web services por meio de um firewall. Muitas dessas propriedades são usadas para inicializar o <xref:System.Net.HttpWebRequest> que faz a solicitação da Web.  
  
 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, e <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derivam direta ou indiretamente <xref:System.Web.Services.Protocols.HttpWebClientProtocol> para oferecer suporte para SOAP, HTTP GET e POST HTTP respectivamente.  
  
   
  
## Examples  
 O exemplo a seguir é um formulário da Web do ASP.NET, que chama um serviço Web XML chamado `Math`. Dentro de `EnterBtn_Click` função, o formulário da Web permite que o servidor redirecionar automaticamente o cliente para outros sites. Ele também define as credenciais de autenticação do cliente, as configurações de proxy, a codificação de solicitação e o tempo limite da solicitação antes de chamar o método de serviço da Web em XML.  
  
 [!code-aspx-csharp[Classic HttpWebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpWebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>As propriedades dessa classe são copiadas para uma nova instância de um <see cref="T:System.Net.WebRequest" /> objeto para cada chamada de método de serviço da Web em XML. Embora você possa chamar métodos de serviço Web XML no mesmo <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> instância de diversos threads ao mesmo tempo, não há nenhuma sincronização feita para garantir que um instantâneo consistente com as propriedades é transferido para o <see cref="T:System.Net.WebRequest" /> objeto. Portanto, se você precisar modificar as propriedades e fazer chamadas de método simultâneas de diferentes threads, você deve usar uma instância diferente do XML Web proxy de serviço ou fornecem sua própria sincronização.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se o cliente segue automaticamente redirecionamentos do servidor.</summary>
        <value>
          <see langword="true" /> para redirecionar automaticamente o cliente para seguir redirecionamentos do servidor; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um cliente envia informações de autenticação, como um nome de usuário e senha, você não deseja ativar o servidor para encaminhar, porque isso pode comprometer a segurança.  
  
 Um <xref:System.Net.WebException> é gerada se o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> é de propriedade `false` e o servidor Web tenta redirecionar a solicitação. O <xref:System.Net.WebException.Response%2A> propriedade contém um <xref:System.Net.HttpWebResponse> objeto, em que tanto o <xref:System.Net.HttpWebResponse.StatusCode%2A> e <xref:System.Net.HttpWebResponse.Headers%2A> propriedades refletem os detalhes sobre o redirecionamento de tentativa. O <xref:System.Net.HttpWebResponse.StatusCode%2A> propriedade contém um <xref:System.Net.HttpStatusCode> equivalente a um dos códigos de status de redirecionamento de HTTP (301, 302 e 307) e o `Location` cabeçalho dentro a <xref:System.Net.HttpWebResponse.Headers%2A> coleção aponta para o URI que tentaram ser redirecionado para a solicitação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">A propriedade <see cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect" /> é <see langword="false" /> e o servidor Web tenta redirecionar a solicitação.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="protected void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">O objeto fornecido no último parâmetro para a chamada assíncrona do <see langword="Begin" /> método.</param>
        <summary>Cancela uma chamada assíncrona para um método de serviço da Web em XML, a menos que a chamada já foi concluída.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de certificados do cliente.</summary>
        <value>Um <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> que representa os certificados do cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que um cliente passar um ou mais certificados de cliente, também conhecido como Authenticode x. 509 v. 3 certificados ao chamar um método de serviço da Web em XML. Se o método de serviço Web XML tiver sido configurado para usar certificados de cliente, um certificado de cliente pode ser usado como um mecanismo para autenticar o cliente. Para obter detalhes sobre como configurar certificados de cliente, consulte a documentação de serviços de informações da Internet (IIS).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como carregar um certificado de cliente de um arquivo e, em seguida, adicioná-lo para o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates%2A> propriedade para chamar um método de serviço da Web em XML que usa certificados de cliente para autenticação.  
  
 [!code-csharp[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/CS/certcs.aspx#1)]
 [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/VB/certvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coleção de cookies.</summary>
        <value>Um <see cref="T:System.Net.CookieContainer" /> que representa os cookies para um cliente de serviços Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um método de serviço Web XML usa o estado de sessão, um cookie for repassado em cabeçalhos de resposta para o cliente do serviço da Web em XML que identifica exclusivamente a sessão para esse cliente de serviço da Web em XML. Em ordem para um serviço Web XML manter o estado de sessão para um cliente, o cliente deve armazenar o cookie. Os clientes recebem o cookie HTTP, criando uma nova instância da <xref:System.Net.CookieContainer> e atribuindo-à <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propriedade da classe de proxy antes de chamar o método de serviço da Web em XML. Se você precisar manter o estado de sessão além quando a instância da classe proxy sai do escopo, o cliente deve armazenar o cookie HTTP entre as chamadas para o serviço Web XML. Por exemplo, um cliente de Web Forms pode armazenar o cookie HTTP salvando o <xref:System.Net.CookieContainer> em seu próprio estado de sessão. Porque nem todos os serviços Web XML usam o estado de sessão e, portanto, os clientes não são sempre necessário para usar o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propriedade de um proxy do cliente, a documentação para o serviço Web XML deverá indicar se o estado da sessão é usado.  
  
   
  
## Examples  
 O exemplo de código a seguir é um cliente de formulários da Web de um serviço da Web em XML que usa o estado de sessão. O cliente armazena o cookie HTTP que identifica exclusivamente a sessão, armazenando-a em estado de sessão do cliente.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDecompression">
      <MemberSignature Language="C#" Value="public bool EnableDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a descompactação está habilitada para este <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />.</summary>
        <value>
          <see langword="true" />Se a descompactação está habilitada para esta <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateXmlMappings">
      <MemberSignature Language="C#" Value="public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GenerateXmlMappings(class System.Type type, class System.Collections.ArrayList mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="mappings" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Type" /> que expõe os métodos do serviço da Web em XML.</param>
        <param name="mapping">To be added.</param>
        <summary>Obtém o <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> para cada XML Web service método exposto pelo tipo especificado e armazena os mapeamentos do <see cref="T:System.Collections.ArrayList" />.</summary>
        <returns>
          <see langword="true" />Se <paramref name="type" /> podem ser atribuídos a um <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateXmlMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable GenerateXmlMappings(class System.Type[] types, class System.Collections.ArrayList mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="types">Uma matriz do tipo <see cref="T:System.Type" /> que contém os tipos que expõem os métodos de serviço Web XML.</param>
        <param name="mapping">To be added.</param>
        <summary>Obtém o <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> para cada método de serviço Web XML exposto pelos tipos especificados e armazena os mapeamentos no <see cref="T:System.Collections.ArrayList" /> especificado, bem como em um <see cref="T:System.Collections.Hashtable" /> que o método retorna.</summary>
        <returns>Um <see cref="T:System.Collections.Hashtable" /> que contém o <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> para cada método de serviço Web XML exposto pelos tipos especificados. Os tipos contidos em <paramref name="types" /> são usados como chaves.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">O <see cref="T:System.Uri" /> para criar o <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Cria um <see cref="T:System.Net.WebRequest" /> para o URI especificado.</summary>
        <returns>O <see cref="T:System.Net.WebRequest" /> criado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="uri" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">O <see cref="T:System.Net.WebRequest" /> da qual obter a resposta.</param>
        <summary>Retorna uma resposta de uma solicitação síncrona para um método de serviço Web XML.</summary>
        <returns>Uma resposta de uma solicitação síncrona para um método de serviço Web XML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">O <see cref="T:System.Net.WebRequest" /> da qual obter a resposta.</param>
        <param name="result">O <see cref="T:System.IAsyncResult" /> para passar para <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> quando a resposta foi concluída.</param>
        <summary>Retorna uma resposta de uma solicitação assíncrona para um método de serviço da Web em XML.</summary>
        <returns>Uma resposta de uma solicitação assíncrona para um método de serviço da Web em XML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define informações de proxy para fazer uma solicitação de serviço Web XML por um firewall.</summary>
        <value>Um <see cref="T:System.Net.IWebProxy" /> que contém as informações de proxy para fazer solicitações por um firewall. O valor padrão são as configurações de proxy do sistema operacional.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> propriedade se precisar de um cliente usar configurações de proxy diferentes nas configurações do sistema. Use o <xref:System.Net.WebProxy> classe para definir as configurações de proxy, porque ele implementa <xref:System.Net.IWebProxy>.  
  
 Configurações de proxy padrão podem ser definidas em um arquivo de configuração. Para obter detalhes, consulte [Configurando aplicativos da Internet](~/docs/framework/network-programming/configuring-internet-applications.md).  
  
   
  
## Examples  
 O exemplo a seguir define as seguintes configurações de proxy antes de invocar o `Math` XML Web Services: o servidor proxy http://proxyserver, a porta de proxy para 80 e o desvio para o servidor proxy para endereços locais.  
  
 [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o compartilhamento de conexão é habilitado quando o cliente usa a autenticação NTLM para se conectar ao servidor Web que hospeda o serviço Web XML.</summary>
        <value>
          <see langword="true" />Se o compartilhamento de conexão estiver habilitado; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade define o valor da <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> propriedade o <xref:System.Net.HttpWebRequest> usado para se comunicar com o servidor Web.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor para o cabeçalho de agente do usuário enviado com cada solicitação.</summary>
        <value>O valor do cabeçalho de agente do usuário do protocolo HTTP. O padrão é o “Protocolo de Cliente dos Serviços Web da MS <paramref name="number" />”, em que <paramref name="number" /> é a versão do Common Language Runtime (por exemplo, 1.0.3705.0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres de agente do usuário permite que um servidor Web para identificar o cliente.  
  
   
  
## Examples  
 [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CPP/httpwebclientprotocol_useragent.cpp#1)]
 [!code-csharp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CS/httpwebclientprotocol_useragent.cs#1)]
 [!code-vb[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/VB/httpwebclientprotocol_useragent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
