<Type Name="ValueCollectionParameterReader" FullName="System.Web.Services.Protocols.ValueCollectionParameterReader">
  <TypeSignature Language="C#" Value="public abstract class ValueCollectionParameterReader : System.Web.Services.Protocols.MimeParameterReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValueCollectionParameterReader extends System.Web.Services.Protocols.MimeParameterReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.ValueCollectionParameterReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeParameterReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serve como uma classe base para os leitores de parâmetros de solicitação de entrada para serviços da Web implementado usando HTTP, mas sem SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>e outras classes de <xref:System.Web.Services.Protocols> namespace oferece suporte às implementações do .NET Framework do Web services por meio de operações de HTTP GET e POST HTTP. Os leitores e gravadores de serviço web serializar e desserializar, respectivamente, entre os parâmetros ou objetos de retorno de métodos Web e os fluxos de solicitação ou resposta HTTP. Os leitores e gravadores de serviço da web usam o HTTP para o transporte, mas não trocam mensagens usando o padrão SOAP. O <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> classe fornece, entre outros métodos, um comum <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> pares de método para todos os leitores do lado do serviço de coleções de nome/valor em parâmetros de método da Web. Os pares nome/valor de uma solicitação HTTP de entrada foram analisados.  
  
 Você normalmente não precisará usar <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> ou seus descendentes classes diretamente. Os tipos apropriados são usados de acordo com as configurações em um arquivo de configuração do ASP.NET (Web. config).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueCollectionParameterReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica o método da Web para o qual o inicializador é obtido.</param>
        <summary>Retorna um inicializador para o método especificado.</summary>
        <returns>Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que representa o método da Web.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto retornado pelo <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> método é o <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> propriedade o `methodinfo` parâmetro. O <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> o valor da propriedade é uma matriz do tipo <xref:System.Reflection.ParameterInfo>.  
  
 O <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> método é chamado durante a inicialização do serviço. Posteriormente, no momento em que uma solicitação é processada, o inicializador de objeto é passado para o <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A> método de outra <xref:System.Web.Services.Protocols.ValueCollectionParameterReader> instância. A outra instância executa a leitura real.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Um <see cref="T:System.Reflection.ParameterInfo" /> matriz, obtido por meio de <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> propriedade do <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> classe.</param>
        <summary>Inicializa uma instância.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize%2A> método é invocado quando uma solicitação é processada.  
  
 O parâmetro de entrada, `o`, é obtida chamando o <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer%2A> método em outra instância durante a inicialização do serviço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported (System.Reflection.ParameterInfo paramInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupported(class System.Reflection.ParameterInfo paramInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramInfo" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="paramInfo">Um <see cref="T:System.Reflection.ParameterInfo" /> que especifica o parâmetro para verificar.</param>
        <summary>Determina se um tipo de parâmetro específico é suportado pelo <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" /> classe.</summary>
        <returns>
          <see langword="true" />Se as definições de parâmetro do método forem compatíveis com o leitor; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupported(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica o método para verificar.</param>
        <summary>Determina se as definições de parâmetro de uma definição de método têm suporte pelo <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" /> classe.</summary>
        <returns>
          <see langword="true" />Se as definições de parâmetro do método forem compatíveis com o leitor; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="protected object[] Read (System.Collections.Specialized.NameValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Read(class System.Collections.Specialized.NameValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="collection">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> pares de objeto que especifica a coleção de nome/valor que contêm valores e nomes de parâmetro do método.</param>
        <summary>Converte uma coleção de pares nome/valor em uma matriz de objetos que representam os valores de parâmetro de método.</summary>
        <returns>Uma matriz de <see cref="T:System.Object" /> objetos que representam os valores de parâmetro de método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> método é chamado pelo <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> método definido nas duas classes derivadas de <xref:System.Web.Services.Protocols.ValueCollectionParameterReader>, <xref:System.Web.Services.Protocols.UrlParameterReader> e <xref:System.Web.Services.Protocols.HtmlFormParameterReader>. Essas duas classes <xref:System.Web.Services.Protocols.ValueCollectionParameterReader.Read%2A> métodos usam um <xref:System.Web.HttpRequest> parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
