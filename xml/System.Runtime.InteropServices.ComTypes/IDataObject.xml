<Type Name="IDataObject" FullName="System.Runtime.InteropServices.ComTypes.IDataObject">
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComTypes.IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0000010e-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece a definição gerenciada da interface <see langword="IDataObject" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre o `IDataObject` interface, consulte a biblioteca MSDN.  
  
 O common language runtime lança uma exceção quando um método COM em código nativo retorna um HRESULT. Para obter mais informações, consulte [como: mapear HRESULTs e exceções](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DAdvise">
      <MemberSignature Language="C#" Value="public int DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink adviseSink, out int connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DAdvise([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink adviseSink, [out] int32&amp; connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="adviseSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="connection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, o dispositivo de destino, o aspecto e a mídia que será usada para notificações futuras.</param>
        <param name="advf">Uma da <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> valores que especifica um grupo de sinalizadores para controlar o comunicado de conexão.</param>
        <param name="adviseSink">Um ponteiro para o <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface no coletor de aviso que receberão a notificação de alteração.</param>
        <param name="connection">Quando este método retorna, contém um ponteiro para um token DWORD que identifica essa conexão. Você pode usar esse token posteriormente para excluir a conexão de consultoria, passando-o para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se esse valor for zero, a conexão não foi estabelecida. Este parâmetro é passado não inicializado.</param>
        <summary>Cria uma conexão entre um objeto de dados e um coletor de aviso. Este método é chamado por um objeto que oferece suporte a um coletor de aviso e permite que o coletor de consultoria ser notificado sobre alterações nos dados do objeto.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>A conexão comunicado foi criado.  
  
 </description></item><item><term>E_NOTIMPL  
  
 </term><description>Este método não está implementado no objeto de dados.  
  
 </description></item><item><term>DV_E_LINDEX  
  
 </term><description>Há um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; atualmente, somente a -1 é suportado.  
  
 </description></item><item><term>DV_E_FORMATETC  
  
 </term><description>Há um valor inválido para o <paramref name="pFormatetc" /> parâmetro.  
  
 </description></item><item><term>OLE_E_ADVISENOTSUPPORTED  
  
 </term><description>O objeto de dados não oferece suporte a notificação de alteração.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::DAdvise`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DUnadvise">
      <MemberSignature Language="C#" Value="public void DUnadvise (int connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DUnadvise(int32 connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connection">Um token DWORD que especifica a conexão a ser removido. Usar o valor retornado por <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando a conexão foi originalmente estabelecido.</param>
        <summary>Destrói um conexão de notificação que tinha sido estabelecida anteriormente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::DUnAdvise`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumDAdvise">
      <MemberSignature Language="C#" Value="public int EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Quando este método retorna, contém um <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> que recebe o ponteiro de interface para o novo objeto de enumerador. Se a implementação define <c>enumAdvise</c> para <see langword="null" />, não existem conexões para coletores comunicados neste momento. Este parâmetro é passado não inicializado.</param>
        <summary>Cria um objeto que pode ser usado para enumerar as conexões de consultoria atuais.</summary>
        <returns>Dá suporte a esse método, o valor de retorno padrão E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>O objeto de enumerador é instanciado com êxito ou não existem conexões.  
  
 </description></item><item><term>OLE_E_ADVISENOTSUPPORTED  
  
 </term><description>Este objeto não dá suporte a notificações comunicadas.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::EnumDAdvise`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumFormatEtc">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.ComTypes.IEnumFORMATETC EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="direction">Uma da <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> valores que especifica a direção dos dados.</param>
        <summary>Cria um objeto para enumerar o <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas para um objeto de dados. Essas estruturas são usadas em chamadas para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> ou <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Este método oferece suporte ao padrão retornam valores E_INVALIDARG e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>O objeto de enumerador foi criado com êxito.  
  
 </description></item><item><term>E_NOTIMPL  
  
 </term><description>A direção especificada pelo <paramref name="direction" /> parâmetro não é suportado.  
  
 </description></item><item><term>OLE_S_USEREG  
  
 </term><description>Solicitações OLE enumerar os formatos do registro.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::EnumFormatEtc`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="public int GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatIn, out System.Runtime.InteropServices.ComTypes.FORMATETC formatOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCanonicalFormatEtc([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="formatOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatIn">Um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, a média e o dispositivo de destino que o chamador deseja usar para recuperar dados em uma chamada subsequente, como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> membro nesse caso não é significativo e deve ser ignorado.</param>
        <param name="formatOut">Quando este método retorna, contém um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura que contém as informações mais gerais possíveis para uma renderização específica, tornando-a canonicamente equivalente para <c>formatetIn</c>. O chamador deve alocar essa estrutura e o <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> método deve preencher os dados. Para recuperar dados em uma chamada subsequente como <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, o chamador usa o valor fornecido de <c>formatOut</c>, a menos que o valor fornecido é <see langword="null" />. Esse valor é <see langword="null" /> se o método retornar <see langword="DATA_S_SAMEFORMATETC" />. O <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> membro nesse caso não é significativo e deve ser ignorado. Este parâmetro é passado não inicializado.</param>
        <summary>Fornece um padrão de <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura é logicamente equivalente a uma estrutura mais complexa. Use esse método para determinar se duas diferentes <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas retornaria os mesmos dados, eliminando a necessidade de processamento duplicado.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>Retornado <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura é diferente daquele que foi passado.  
  
 </description></item><item><term>DATA_S_SAMEFORMATETC  
  
 </term><description>O <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estruturas são os mesmos e <see langword="null" /> é retornado no <paramref name="formatOut" /> parâmetro.  
  
 </description></item><item><term>DV_E_LINDEX  
  
 </term><description>Há um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; atualmente, somente a -1 é suportado.  
  
 </description></item><item><term>DV_E_FORMATETC  
  
 </term><description>Há um valor inválido para o <paramref name="pFormatetc" /> parâmetro.  
  
 </description></item><item><term>OLE_E_NOTRUNNING  
  
 </term><description>O aplicativo não está em execução.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::GetCanonicalFormatEtc`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public void GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC format, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetData([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; format, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="format">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. É possível especificar mais de uma mídia usando o operador booleano ou, permitindo que o método escolher o melhor meio entre aquelas especificadas.</param>
        <param name="medium">Quando este método retorna, contém um ponteiro para o <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura que indica a mídia de armazenamento que contém os dados retornados por meio de seu <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> membro e responsabilidade para liberar o meio e o valor de seu <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />membro. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> é <see langword="null" />, o receptor da mídia é responsável pela liberação; caso contrário, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> aponta para o <see langword="IUnknown" /> interface no objeto apropriado para seu <see langword="Release" /> método pode ser chamado. A mídia deve ser alocada e preenchida pelo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Este parâmetro é passado não inicializado.</param>
        <summary>Obtém dados de um objeto de dados de origem. O <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> método, que é chamado por um consumidor de dados, renderiza os dados descritos na especificado <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura e transfere-a por meio de especificado <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura. Em seguida, o chamador assume a responsabilidade por liberar a estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::GetData`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataHere">
      <MemberSignature Language="C#" Value="public void GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC format, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDataHere([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; format, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="format">Um ponteiro para uma estrutura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passado por referência, que define o formato, meio e dispositivo de destino a serem usados ao passar os dados. Pode ser especificada somente uma mídia em <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />e somente os seguintes <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> valores são válidos: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, ou <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passado por referência, que define a mídia de armazenamento que contém os dados que estão sendo transferidos. A mídia deve ser alocada pelo chamador e preenchida pelo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. O chamador também deve liberar a mídia. A implementação deste método sempre deve fornecer um valor de <see langword="null" /> para o <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> membro o <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura que esse parâmetro aponta para.</param>
        <summary>Obtém dados de um objeto de dados de origem. Esse método, o que é chamado por um consumidor de dados, difere do <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> método em que o chamador deve alocar e liberar a mídia de armazenamento especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::GetDataHere`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryGetData">
      <MemberSignature Language="C#" Value="public int QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 QueryGetData([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="format">Um ponteiro para um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato, a média e o dispositivo de destino a ser usado para a consulta.</param>
        <summary>Determina se o objeto de dados é capaz de renderizar os dados descritos o <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura. Objetos de tentativa de uma operação de colar ou drop pode chamar esse método antes de chamar <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> para obter uma indicação de se a operação pode ser bem-sucedida.</summary>
        <returns>Este método oferece suporte os valores de retorno padrão E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, bem como o seguinte:  
  
 <list type="table"><listheader><term>Valor  
  
 </term><description>Descrição  
  
 </description></listheader><item><term>S_OK  
  
 </term><description>Uma chamada subsequente para <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> provavelmente será bem-sucedida.  
  
 </description></item><item><term>DV_E_LINDEX  
  
 </term><description>Um valor inválido para <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; atualmente, somente a -1 é suportado.  
  
 </description></item><item><term>DV_E_FORMATETC  
  
 </term><description>Um valor inválido para o <paramref name="pFormatetc" /> parâmetro.  
  
 </description></item><item><term>DV_E_TYMED  
  
 </term><description>Inválido <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> valor.  
  
 </description></item><item><term>DV_E_DVASPECT  
  
 </term><description>Inválido <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> valor.  
  
 </description></item><item><term>OLE_E_NOTRUNNING  
  
 </term><description>O aplicativo não está em execução.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::QueryGetData`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium, bool release);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData([in]valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatIn, [in]valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium, bool release) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="release" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="formatIn">Um <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> estrutura, passada por referência, que define o formato usado pelo objeto de dados ao interpretar os dados contidos na mídia de armazenamento.</param>
        <param name="medium">Um <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> estrutura, passada por referência, que define a mídia de armazenamento no qual os dados são passados.</param>
        <param name="release">
          <see langword="true" />para especificar que o objeto de dados chamado, que implementa <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, possui a mídia de armazenamento após a chamada retorna. Isso significa que o objeto de dados deve liberar o meio após ele ter sido usado chamando o <see langword="ReleaseStgMedium" /> função. <see langword="false" />para especificar que o chamador reterá a propriedade da mídia de armazenamento e o objeto de dados chamado usa a mídia de armazenamento para a duração da chamada somente.</param>
        <summary>Transfere dados ao objeto que implementa este método. Este método é chamado por um objeto que contém uma fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre `IDataObject::SetData`, consulte a Biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
