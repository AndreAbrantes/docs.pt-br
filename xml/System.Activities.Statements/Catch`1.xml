<Type Name="Catch&lt;TException&gt;" FullName="System.Activities.Statements.Catch&lt;TException&gt;">
  <TypeSignature Language="C#" Value="public sealed class Catch&lt;TException&gt; : System.Activities.Statements.Catch where TException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Catch`1&lt;(class System.Exception) TException&gt; extends System.Activities.Statements.Catch" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Catch`1" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TException">
      <Constraints>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.Statements.Catch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TException">O tipo de exceção que o <see cref="T:System.Activities.Statements.Catch`1" /> tratamento de bloco.</typeparam>
    <summary>Contém as ações a ser executado depois que uma exceção será gerada no bloco Try correspondente de um <see cref="T:System.Activities.Statements.TryCatchFinally" /> atividade.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma vez colocado no designer, <xref:System.Activities.Statements.Catch> atividades não podem ser reordenadas no designer.  Para reordenar a coleção de <xref:System.Activities.Statements.Catch> atividades, exclua e adicione-os novamente na ordem correta ou usar o modo de exibição xaml (código) para o fluxo de trabalho.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Activities.Statements.Catch%601> atividade. Este exemplo é proveniente do [tratamento de falhas em um fluxograma atividade usando TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemplo.  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Catch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Catch`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Activities.Statements.Catch`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Activities.Statements.Catch%601> atividade. Este exemplo é proveniente do [tratamento de falhas em um fluxograma atividade usando TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemplo.  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;TException&gt; Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!TException&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;TException&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O manipulador para a exceção que está sendo detectada.</summary>
        <value>A ação de atividade.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O manipulador de exceção é representado por um <xref:System.Activities.ActivityAction%601> objeto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a atribuir a propriedade de ação de uma <xref:System.Activities.Statements.Catch%601> atividade. Este exemplo é proveniente do [tratamento de falhas em um fluxograma atividade usando TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemplo.  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionType">
      <MemberSignature Language="C#" Value="public override Type ExceptionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.ExceptionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O tipo de exceção que o <see cref="T:System.Activities.Statements.Catch" /> tratamento de bloco.</summary>
        <value>O tipo de exceção.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
