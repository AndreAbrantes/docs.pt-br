<Type Name="CharacterHit" FullName="System.Windows.Media.TextFormatting.CharacterHit">
  <TypeSignature Language="C#" Value="public struct CharacterHit : IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterHit extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.CharacterHit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa informações sobre um caractere acessado em uma execução de glifo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.TextFormatting.CharacterHit> estrutura fornece informações sobre o índice do primeiro caractere que foi atingido, bem como informações sobre à esquerda ou borda direita.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterHit (int firstCharacterIndex, int trailingLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 firstCharacterIndex, int32 trailingLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="firstCharacterIndex" Type="System.Int32" />
        <Parameter Name="trailingLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="firstCharacterIndex">Índice do primeiro caractere que foi atingido.</param>
        <param name="trailingLength">No caso de uma borda à esquerda, esse valor é 0. No caso de uma borda à esquerda, esse valor é o número de pontos de código até a próxima posição de cursor válido.</param>
        <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser comparado com o atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto.</param>
        <summary>Determina se o objeto especificado é igual ao atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto.</summary>
        <returns>
          <see langword="true" />Se <paramref name="obj" /> é igual à atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto; caso contrário, <see langword="false" />. Se <paramref name="obj" /> não é um <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto <see langword="false" /> é retornado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.CharacterHit obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.CharacterHit obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="obj">O <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para comparar com a atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto.</param>
        <summary>Determina se o <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> é igual à atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto.</summary>
        <returns>
          <see langword="true" />Se <paramref name="obj" /> é igual à atual <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objeto; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstCharacterIndex">
      <MemberSignature Language="C#" Value="public int FirstCharacterIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstCharacterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice do primeiro caractere que foi atingido.</summary>
        <value>Um <see cref="T:System.Int32" /> valor que representa o índice.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serve como uma função de hash para <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. Ele é adequado para uso em algoritmos e estruturas de dados como uma tabela de hash de hash.</summary>
        <returns>Um <see cref="T:System.Int32" /> valor que representa o código hash para o objeto atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Equality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left">A primeira instância do <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para comparar.</param>
        <param name="right">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para comparar.</param>
        <summary>Comparar dois <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> cadeias de caracteres para igualdade.</summary>
        <returns>
          <see langword="true" />Quando os valores de <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> e <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> propriedades são iguais para os dois objetos; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Inequality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left">A primeira instância do <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para comparar.</param>
        <param name="right">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para comparar.</param>
        <summary>Comparar dois <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> cadeias de caracteres de desigualdade.</summary>
        <returns>
          <see langword="false" />Quando os valores de <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> e <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> propriedades são iguais para os dois objetos; caso contrário, <see langword="true" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingLength">
      <MemberSignature Language="C#" Value="public int TrailingLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrailingLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do comprimento à direita do caractere que foi atingido.</summary>
        <value>Um <see cref="T:System.Int32" /> valor que representa o comprimento à direita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No caso de uma borda à esquerda, esse valor é 0. No caso de uma borda à esquerda, esse valor é o número de pontos de código até a próxima posição de cursor válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
