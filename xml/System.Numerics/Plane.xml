<Type Name="Plane" FullName="System.Numerics.Plane">
  <TypeSignature Language="C#" Value="public struct Plane : IEquatable&lt;System.Numerics.Plane&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Plane extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Plane&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Plane" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Plane&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa um plano tridimensional.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plane (System.Numerics.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.Vector4 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector4" />
      </Parameters>
      <Docs>
        <param name="value">Um vetor cujos três primeiros elementos descrevem o vetor normal e cujo <see cref="F:System.Numerics.Vector4.W" /> define a distância ao longo desse normal da origem.</param>
        <summary>Cria um <see cref="T:System.Numerics.Plane" /> objeto a partir de um vetor de four-dimensional especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plane (System.Numerics.Vector3 normal, float d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.Vector3 normal, float32 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="normal" Type="System.Numerics.Vector3" />
        <Parameter Name="d" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="normal">Vetor de normal do plano.</param>
        <param name="d">Distância do plano da origem ao longo de vetores normal.</param>
        <summary>Cria um <see cref="T:System.Numerics.Plane" /> objeto a partir de um normal especificado e a distância ao longo de normal da origem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plane (float x, float y, float z, float d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z, float32 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="d" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">O componente de X do que o normal.</param>
        <param name="y">O componente de Y do que o normal.</param>
        <param name="z">O componente de Z a normal.</param>
        <param name="d">A distância do plano ao longo de seu normal da origem.</param>
        <summary>Cria um <see cref="T:System.Numerics.Plane" /> objeto dos componentes X, Y e Z de seu normal e sua distância da origem em que o normal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVertices">
      <MemberSignature Language="C#" Value="public static System.Numerics.Plane CreateFromVertices (System.Numerics.Vector3 point1, System.Numerics.Vector3 point2, System.Numerics.Vector3 point3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Plane CreateFromVertices(valuetype System.Numerics.Vector3 point1, valuetype System.Numerics.Vector3 point2, valuetype System.Numerics.Vector3 point3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Plane</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Numerics.Vector3" />
        <Parameter Name="point2" Type="System.Numerics.Vector3" />
        <Parameter Name="point3" Type="System.Numerics.Vector3" />
      </Parameters>
      <Docs>
        <param name="point1">O primeiro ponto de definir o plano.</param>
        <param name="point2">O segundo ponto definindo o plano.</param>
        <param name="point3">O terceiro ponto definindo o plano.</param>
        <summary>Cria um <see cref="T:System.Numerics.Plane" /> objeto que contém três pontos especificados.</summary>
        <returns>O plano que contém os três pontos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="D">
      <MemberSignature Language="C#" Value="public float D;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 D" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Plane.D" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A distância do plano ao longo de seu normal da origem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (System.Numerics.Plane plane, System.Numerics.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Dot(valuetype System.Numerics.Plane plane, valuetype System.Numerics.Vector4 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="System.Numerics.Plane" />
        <Parameter Name="value" Type="System.Numerics.Vector4" />
      </Parameters>
      <Docs>
        <param name="plane">O plano.</param>
        <param name="value">O vetor de four-dimensional.</param>
        <summary>Calcula o produto de um plano e um vetor bidimensional de 4.</summary>
        <returns>O produto escalar.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotCoordinate">
      <MemberSignature Language="C#" Value="public static float DotCoordinate (System.Numerics.Plane plane, System.Numerics.Vector3 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 DotCoordinate(valuetype System.Numerics.Plane plane, valuetype System.Numerics.Vector3 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="System.Numerics.Plane" />
        <Parameter Name="value" Type="System.Numerics.Vector3" />
      </Parameters>
      <Docs>
        <param name="plane">O plano.</param>
        <param name="value">O vetor de 3-dimensional.</param>
        <summary>Retorna o produto de um vetor tridimensional especificado e o vetor normal desse plano mais a distância (<see cref="F:System.Numerics.Plane.D" />) valor do plano.</summary>
        <returns>O produto escalar.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotNormal">
      <MemberSignature Language="C#" Value="public static float DotNormal (System.Numerics.Plane plane, System.Numerics.Vector3 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 DotNormal(valuetype System.Numerics.Plane plane, valuetype System.Numerics.Vector3 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="System.Numerics.Plane" />
        <Parameter Name="value" Type="System.Numerics.Vector3" />
      </Parameters>
      <Docs>
        <param name="plane">O plano.</param>
        <param name="value">O vetor tridimensional.</param>
        <summary>Retorna o produto de um vetor tridimensional especificado e o <see cref="F:System.Numerics.Plane.Normal" /> vetor desse plano.</summary>
        <returns>O produto escalar.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Plane other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Plane other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Equals(System.Numerics.Plane)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Plane" />
      </Parameters>
      <Docs>
        <param name="other">O plano.</param>
        <summary>Retorna um valor que indica se esta instância e outro objeto de plano são iguais.</summary>
        <returns>
          <see langword="true" />Se os dois planos forem iguais; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dois <xref:System.Numerics.Plane> objetos são iguais se seus <xref:System.Numerics.Plane.Normal> e <xref:System.Numerics.Plane.D> campos forem iguais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser comparado com a instância atual.</param>
        <summary>Retorna um valor que indica se esta instância e um objeto especificado são iguais.</summary>
        <returns>
          <see langword="true" />Se a instância atual e <paramref name="obj" /> forem iguais; caso contrário, <see langword="false" /> <see langword="" />. Se <paramref name="obj" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A instância atual e `obj` são iguais se `obj` é um <xref:System.Numerics.Plane> objeto e seus <xref:System.Numerics.Plane.Normal> e <xref:System.Numerics.Plane.D> campos forem iguais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o código hash para essa instância.</summary>
        <returns>O código hash.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="public System.Numerics.Vector3 Normal;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Numerics.Vector3 Normal" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Plane.Normal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O vetor normal do plano.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static System.Numerics.Plane Normalize (System.Numerics.Plane value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Plane Normalize(valuetype System.Numerics.Plane value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Plane</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Plane" />
      </Parameters>
      <Docs>
        <param name="value">O plano de origem.</param>
        <summary>Cria um novo <see cref="T:System.Numerics.Plane" /> normalizado de objeto cujo vetor normal é vetor normal do plano de origem.</summary>
        <returns>O plano normalizado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Plane value1, System.Numerics.Plane value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Plane value1, valuetype System.Numerics.Plane value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Plane" />
        <Parameter Name="value2" Type="System.Numerics.Plane" />
      </Parameters>
      <Docs>
        <param name="value1">O primeiro plano para comparar.</param>
        <param name="value2">Segundo plano a ser comparado.</param>
        <summary>Retorna um valor que indica se dois planos são iguais.</summary>
        <returns>
          <see langword="true" /> se <paramref name="value1" /> e <paramref name="value2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dois <xref:System.Numerics.Plane> objetos são iguais se seus <xref:System.Numerics.Plane.Normal> e <xref:System.Numerics.Plane.D> campos forem iguais.  
  
 O <xref:System.Numerics.Plane.op_Equality%2A> método define a operação do operador de igualdade para <xref:System.Numerics.Plane> objetos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Plane value1, System.Numerics.Plane value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Plane value1, valuetype System.Numerics.Plane value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Plane" />
        <Parameter Name="value2" Type="System.Numerics.Plane" />
      </Parameters>
      <Docs>
        <param name="value1">O primeiro plano para comparar.</param>
        <param name="value2">Segundo plano a ser comparado.</param>
        <summary>Retorna um valor que indica se dois planos não são iguais.</summary>
        <returns>
          <see langword="true" /> caso <paramref name="value1" /> e <paramref name="value2" /> não sejam iguais; do contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Numerics.Plane.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.Plane> objetos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a representação de cadeia de caracteres deste objeto de plano.</summary>
        <returns>Uma cadeia de caracteres que representa esta <see cref="T:System.Numerics.Plane" /> objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A representação de cadeia de caracteres de um <xref:System.Numerics.Plane> objeto usar as convenções de formatação da cultura atual para formatar valores numéricos na cadeia de caracteres retornada. Por exemplo, um <xref:System.Numerics.Plane> objeto cuja representação de cadeia de caracteres é formatada usando as convenções de cultura en-US pode aparecer como `{Normal:<1.1, 2.2, 3.3> D:4.4}`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Matrix4x4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Plane Transform(valuetype System.Numerics.Plane plane, valuetype System.Numerics.Matrix4x4 matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Plane</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="System.Numerics.Plane" />
        <Parameter Name="matrix" Type="System.Numerics.Matrix4x4" />
      </Parameters>
      <Docs>
        <param name="plane">O plano normalizado para transformar.</param>
        <param name="matrix">A matriz de transformação para aplicar a <c>plano</c>.</param>
        <summary>Transforma um plano normalizado por uma matriz 4 x 4.</summary>
        <returns>O plano transformado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `plane`já deverão ser normalizados para que seu <xref:System.Numerics.Plane.Normal> vetor é do tamanho da unidade antes que este método é chamado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Plane Transform(valuetype System.Numerics.Plane plane, valuetype System.Numerics.Quaternion rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Plane</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="System.Numerics.Plane" />
        <Parameter Name="rotation" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="plane">O plano normalizado para transformar.</param>
        <param name="rotation">A rotação Quaternion para aplicar ao plano.</param>
        <summary>Transforma um plano normalizado por uma rotação Quaternion.</summary>
        <returns>Um novo plano que resulta da aplicação da rotação Quaternion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `plane`já deverão ser normalizados para que seu <xref:System.Numerics.Plane.Normal> vetor é do tamanho da unidade antes que este método é chamado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
