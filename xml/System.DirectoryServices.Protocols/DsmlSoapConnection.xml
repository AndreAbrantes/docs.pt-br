<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>O <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> classe é uma classe abstrata que não pode ser instanciada. Ele permite que os protocolos de com e sem monitoração de estado ser tratado da mesma forma, fornecendo recursos orientado por sessão.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>O <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> construtor inicializa uma nova instância de um <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>O <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> método instrui o servidor DSML para iniciar uma nova sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método será bloqueado enquanto aguarda uma resposta do servidor de DSML e atingirá o tempo limite de acordo com o <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gerada quando uma sessão já está aberta na conexão.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Gerada quando o XML retornado pelo servidor em resposta ao BeginSession não está bem formado.</exception>
        <exception cref="T:System.Net.WebException">Gerada quando há uma falha de comunicação com o servidor DSML.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>O <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> método encerra a sessão com o servidor DSML e limpa o <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> propriedade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método será bloqueado enquanto aguarda uma resposta do servidor de DSML e atingirá o tempo limite de acordo com o <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> propriedade.  
  
 Se o servidor DSML encerra a sessão, um<xref:System.Net.WebException>  
  
 será lançada. Se <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> ainda é válida após a exceção é gerada, a solicitação nunca atingiu o servidor e a conexão ainda é considerado válido.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Gerada quando ocorre uma falha de comunicação com o servidor DSML.</exception>
        <exception cref="T:System.InvalidOperationException">Gerada quando não houver nenhuma sessão aberta.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> propriedade contém a ID de sessão ativa.</summary>
        <value>A ID de sessão ativa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um valor nulo não significa nenhuma sessão ativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> propriedade contém o cabeçalho SOAP anexados a solicitações de saída.</summary>
        <value>O cabeçalho SOAP anexado às solicitações de saída.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A API usa <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> e <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> para controlar o tempo de vida de uma sessão.  
  
 **Cuidado** anexando um cabeçalho EndSession para o <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> faz com que a API para se tornar inconsistente com a conexão e deve ser evitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
