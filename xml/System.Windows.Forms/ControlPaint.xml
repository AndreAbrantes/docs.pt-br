<Type Name="ControlPaint" FullName="System.Windows.Forms.ControlPaint">
  <TypeSignature Language="C#" Value="public sealed class ControlPaint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlPaint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlPaint" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos usados para pintar controles comuns do Windows e seus elementos. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Métodos contidos no <xref:System.Windows.Forms.ControlPaint> classe permitem desenhar seus próprios controles ou elementos de controles. Você pode controlar o desenho de seus próprios controles se o <xref:System.Windows.Forms.ControlStyles.UserPaint> bit é definido como `true` para o controle. Você pode obter ou definir os bits de estilo chamando o <xref:System.Windows.Forms.Control.GetStyle%2A> ou <xref:System.Windows.Forms.Control.SetStyle%2A> métodos. Você pode definir vários bits de estilo para qualquer controle. O <xref:System.Windows.Forms.ControlStyles> membros de enumeração podem ser combinados com operações bit a bit.  
  
   
  
## Examples  
 O exemplo de código a seguir usa uma da <xref:System.Windows.Forms.ControlPaint> construtores para desenhar uma simples <xref:System.Windows.Forms.Button> controle.  
  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContrastControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color ContrastControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color ContrastControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cor a ser usado como o <see cref="P:System.Drawing.SystemColors.ControlDark" /> cor.</summary>
        <value>O <see cref="T:System.Drawing.Color" /> para usar como o <see cref="P:System.Drawing.SystemColors.ControlDark" /> cor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o usuário tiver habilitado o <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> modo, essa propriedade é definida como <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>; caso contrário, ele é definido como <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmap16Bit">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmap16Bit(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="bitmap">O <see cref="T:System.Drawing.Bitmap" /> para criar.</param>
        <param name="background">O <see cref="T:System.Drawing.Color" /> da tela de fundo.</param>
        <summary>Cria um bitmap de 16 bits.</summary>
        <returns>Um <see cref="T:System.IntPtr" /> que representa o identificador para o bitmap.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapColorMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapColorMask(class System.Drawing.Bitmap bitmap, native int monochromeMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="monochromeMask" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bitmap">O <see cref="T:System.Drawing.Bitmap" /> para criar.</param>
        <param name="monochromeMask">Um ponteiro para a máscara monocromática.</param>
        <summary>Cria um Win32 <see langword="HBITMAP" /> a imagem.</summary>
        <returns>Um <see cref="T:System.IntPtr" /> que representa o identificador para o bitmap.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você é responsável por desalocá-o `HBITMAP`. Se a imagem usa transparência, o plano de fundo será preenchido com a cor especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapTransparencyMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapTransparencyMask(class System.Drawing.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">O <see cref="T:System.Drawing.Bitmap" /> para criar a máscara de transparência.</param>
        <summary>Cria uma máscara de cor para o bitmap que indica qual cor deve ser exibido como transparente.</summary>
        <returns>O identificador para o <see cref="T:System.Drawing.Bitmap" /> máscara.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você é responsável por desalocá-o bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> que ficará mais escuro.</param>
        <summary>Cria um novo objeto de cor escura do controle de cor especificada.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor escura do controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida em um <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é reduzido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor, float32 percOfDarkDark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfDarkDark" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> que ficará mais escuro.</param>
        <param name="percOfDarkDark">O percentual a ser escurecido para o <see cref="T:System.Drawing.Color" /> especificado.</param>
        <summary>Cria um novo objeto de cor escura para o controle de uma cor especificada e escurece-o pelo percentual especificado.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor escura no controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida em um <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é reduzido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color DarkDark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> que ficará mais escuro.</param>
        <summary>Cria um novo objeto de cor escura do controle de cor especificada.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor escura do controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida para o <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é aumentado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color color, valuetype System.Windows.Forms.ButtonBorderStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <param name="color">O <see cref="T:System.Drawing.Color" /> da borda.</param>
        <param name="style">Um dos valores <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> que especifica o formato de dados da borda.</param>
        <summary>Desenha uma borda com o estilo especificado e a cor, na área de gráfico especificado e dentro dos limites especificados em um controle de estilo de botão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color leftColor, int32 leftWidth, valuetype System.Windows.Forms.ButtonBorderStyle leftStyle, valuetype System.Drawing.Color topColor, int32 topWidth, valuetype System.Windows.Forms.ButtonBorderStyle topStyle, valuetype System.Drawing.Color rightColor, int32 rightWidth, valuetype System.Windows.Forms.ButtonBorderStyle rightStyle, valuetype System.Drawing.Color bottomColor, int32 bottomWidth, valuetype System.Windows.Forms.ButtonBorderStyle bottomStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="leftColor" Type="System.Drawing.Color" />
        <Parameter Name="leftWidth" Type="System.Int32" />
        <Parameter Name="leftStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="topColor" Type="System.Drawing.Color" />
        <Parameter Name="topWidth" Type="System.Int32" />
        <Parameter Name="topStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="rightColor" Type="System.Drawing.Color" />
        <Parameter Name="rightWidth" Type="System.Int32" />
        <Parameter Name="rightStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="bottomColor" Type="System.Drawing.Color" />
        <Parameter Name="bottomWidth" Type="System.Int32" />
        <Parameter Name="bottomStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <param name="leftColor">O <see cref="T:System.Drawing.Color" /> da esquerda da borda.</param>
        <param name="leftWidth">A largura da borda esquerda.</param>
        <param name="leftStyle">Um dos valores <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> que especifica o estilo da borda esquerda.</param>
        <param name="topColor">O <see cref="T:System.Drawing.Color" /> da parte superior da borda.</param>
        <param name="topWidth">A largura da borda superior.</param>
        <param name="topStyle">Um dos valores <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> que especifica o estilo da borda superior.</param>
        <param name="rightColor">O <see cref="T:System.Drawing.Color" /> da direita da borda.</param>
        <param name="rightWidth">A largura da borda direita.</param>
        <param name="rightStyle">Um dos valores <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> que especifica o estilo da borda direita.</param>
        <param name="bottomColor">O <see cref="T:System.Drawing.Color" /> da parte inferior da borda.</param>
        <param name="bottomWidth">A largura da borda inferior.</param>
        <param name="bottomStyle">Um dos valores <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> que especifica o estilo da borda inferior.</param>
        <summary>Desenha uma borda em um controle de estilo de botão com os estilos, cores e larguras de borda especificados, na superfície de gráfico especificada e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <summary>Desenha uma borda de estilo tridimensional na superfície de gráfico especificada e nos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Border3DStyle?displayProperty=nameWithType> estilo é usado por padrão para desenhar a borda.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <param name="style">Um dos valores <see cref="T:System.Windows.Forms.Border3DStyle" /> que especifica o formato de dados da borda.</param>
        <summary>Desenha uma borda de estilo tridimensional com o estilo especificado, na superfície de gráfico especificado e dentro dos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <param name="style">Um dos valores <see cref="T:System.Windows.Forms.Border3DStyle" /> que especifica o formato de dados da borda.</param>
        <param name="sides">Um dos valores <see cref="T:System.Windows.Forms.Border3DSide" /> que especifica o lado do retângulo em que a borda deve ser desenhada.</param>
        <summary>Desenha uma borda de estilo tridimensional com o estilo especificado, na superfície e nas laterais do gráfico especificado e nos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada x da parte superior esquerda do retângulo de borda.</param>
        <param name="y">A coordenada y da parte superior esquerda do retângulo de borda.</param>
        <param name="width">A largura do retângulo de borda.</param>
        <param name="height">A altura do retângulo de borda.</param>
        <summary>Desenha uma borda de estilo tridimensional na superfície de gráfico especificada e nos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Border3DStyle?displayProperty=nameWithType> estilo é usado por padrão para desenhar a borda.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada x da parte superior esquerda do retângulo de borda.</param>
        <param name="y">A coordenada y da parte superior esquerda do retângulo de borda.</param>
        <param name="width">A largura do retângulo de borda.</param>
        <param name="height">A altura do retângulo de borda.</param>
        <param name="style">Um dos valores <see cref="T:System.Windows.Forms.Border3DStyle" /> que especifica o formato de dados da borda.</param>
        <summary>Desenha uma borda de estilo tridimensional com o estilo especificado, na superfície de gráfico especificado e dentro dos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada x da parte superior esquerda do retângulo de borda.</param>
        <param name="y">A coordenada y da parte superior esquerda do retângulo de borda.</param>
        <param name="width">A largura do retângulo de borda.</param>
        <param name="height">A altura do retângulo de borda.</param>
        <param name="style">Um dos valores <see cref="T:System.Windows.Forms.Border3DStyle" /> que especifica o formato de dados da borda.</param>
        <param name="sides">O <see cref="T:System.Windows.Forms.Border3DSide" /> do retângulo no qual desenhar a borda.</param>
        <summary>Desenha uma borda de estilo tridimensional com o estilo especificado, a área de gráfico especificado e o lado e dentro dos limites especificados em um controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso de uma da <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> métodos. Para executar este exemplo, cole o seguinte código em um formulário que importa o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o formulário <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do botão.</param>
        <param name="state">Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.ButtonState" /> que especifica o estado de desenho do botão.</param>
        <summary>Desenha um controle de botão no estado especificado, na superfície gráfica especificada e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura do botão.</param>
        <param name="height">A altura do botão.</param>
        <param name="state">Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.ButtonState" /> que especifica o estado de desenho do botão.</param>
        <summary>Desenha um controle de botão no estado especificado, na superfície gráfica especificada e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do botão de legenda.</param>
        <param name="button">Uma da <see cref="T:System.Windows.Forms.CaptionButton" /> valores que especifica o tipo de botão de legenda para desenhar.</param>
        <param name="state">Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.ButtonState" /> que especifica o estado de desenho do botão.</param>
        <summary>Desenha o controle de botão de legenda especificada no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> método e o <xref:System.Windows.Forms.CaptionButton> enumeração. Para executar este exemplo, cole o seguinte código em um formulário que contém um botão chamado `Button1`. O formulário deve importar o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o botão <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada x da parte superior esquerda do retângulo de desenho.</param>
        <param name="y">A coordenada y da parte superior esquerda do retângulo de desenho.</param>
        <param name="width">A largura do retângulo de desenho.</param>
        <param name="height">A altura do retângulo de desenho.</param>
        <param name="button">Uma da <see cref="T:System.Windows.Forms.CaptionButton" /> valores que especifica o tipo de botão de legenda para desenhar.</param>
        <param name="state">Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.ButtonState" /> que especifica o estado de desenho do botão.</param>
        <summary>Desenha o controle de botão de legenda especificada no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> método e o <xref:System.Windows.Forms.CaptionButton> enumeração. Para executar este exemplo, cole o seguinte código em um formulário que contém um <xref:System.Windows.Forms.Button> chamado `Button1`. O formulário deve importar o <xref:System.Windows.Forms> e <xref:System.Drawing> namespaces. Verifique se o botão <xref:System.Windows.Forms.Control.Paint> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da caixa de seleção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar a caixa de seleção.</param>
        <summary>Desenha um controle de caixa de seleção no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura da caixa de seleção.</param>
        <param name="height">A altura da caixa de seleção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar a caixa de seleção.</param>
        <summary>Desenha um controle de caixa de seleção no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da caixa de combinação.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> caixa valores que especifica o estado para desenhar a caixa de combinação.</param>
        <summary>Desenha um botão suspenso em um controle caixa de combinação no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada x da parte superior esquerda do retângulo de borda.</param>
        <param name="y">A coordenada y da parte superior esquerda do retângulo de borda.</param>
        <param name="width">A largura da caixa de combinação.</param>
        <param name="height">A altura da caixa de combinação.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> caixa valores que especifica o estado para desenhar a caixa de combinação.</param>
        <summary>Desenha um botão suspenso em um controle caixa de combinação no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawContainerGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawContainerGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo do identificador de captura.</param>
        <summary>Desenha um glifo de identificador de captura de controle de contêiner na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Captura alças são usadas por contêineres para indicar ao usuário que o usuário poderá manipular diretamente os contêineres. A manipulação pode consistir de ações como dimensionar e mover.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo do identificador de captura.</param>
        <summary>Desenha um retângulo de foco na superfície gráfica especificada e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um retângulo de foco é um retângulo pontilhado que o Windows usa para indicar qual controle tem o foco do teclado atual.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> método e o <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> propriedade. Para executar este exemplo, cole o código a seguir em um formulário. Adicionar dois botões chamados `Button1` e `Button2` para o formulário e certifique-se de que todos os eventos são conectados a seus manipuladores de eventos.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo do identificador de captura.</param>
        <param name="foreColor">O <see cref="T:System.Drawing.Color" /> que é a cor de primeiro plano do objeto no qual o retângulo de foco será desenhado.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> que é a cor da tela de fundo do objeto no qual o retângulo de foco será desenhado.</param>
        <summary>Desenha um retângulo de foco na superfície gráfica especificada e dentro dos limites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um retângulo de foco é um retângulo pontilhado que o Windows usa para indicar qual controle tem o foco do teclado atual.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> método e o <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> propriedade. Para executar este exemplo, cole o código a seguir em um formulário. Adicionar dois botões chamados `Button1` e Button2 ao formulário e certifique-se de que todos os eventos são conectados a seus manipuladores de eventos.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo do identificador de captura.</param>
        <param name="primary">
          <see langword="true" />Para desenhar o identificador como um identificador de captura primário; Caso contrário, <see langword="false" />.</param>
        <param name="enabled">
          <see langword="true" />Para desenhar o identificador em um estado habilitado; Caso contrário, <see langword="false" />.</param>
        <summary>Desenha um glifo de identificador de captura padrão de seleção na superfície do gráfico especificado, dentro dos limites especificados e no estado especificado e estilo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Captura alças são usadas por objetos para indicar ao usuário que o usuário poderá manipular diretamente o objeto. A manipulação pode consistir de ações como dimensionar e mover.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrid(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle area, valuetype System.Drawing.Size pixelsBetweenDots, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="area" Type="System.Drawing.Rectangle" />
        <Parameter Name="pixelsBetweenDots" Type="System.Drawing.Size" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="area">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da grade.</param>
        <param name="pixelsBetweenDots">O <see cref="T:System.Drawing.Size" /> que especificou a altura e largura entre os pontos da grade.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> da tela de fundo atrás da grade.</param>
        <summary>Desenha uma grade de pontos de um pixel com o espaçamento especificado, dentro dos limites especificados, na área de gráfico especificada e na cor especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor de preenchimento dos pontos de forma que a grade está sempre visível o plano de fundo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImageDisabled">
      <MemberSignature Language="C#" Value="public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawImageDisabled(class System.Drawing.Graphics graphics, class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser desenhado.</param>
        <param name="x">A coordenada X da parte superior esquerda da imagem da borda.</param>
        <param name="y">A coordenada Y da parte superior esquerda da imagem da borda.</param>
        <param name="background">O <see cref="T:System.Drawing.Color" /> da tela de fundo atrás da imagem.</param>
        <summary>Desenha a imagem especificada em um estado desabilitado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `background` parâmetro é usado para calcular a cor de preenchimento da imagem desabilitada para que ele está sempre visível o plano de fundo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawLockedFrame">
      <MemberSignature Language="C#" Value="public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLockedFrame(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do quadro.</param>
        <param name="primary">
          <see langword="true" />Para desenhar este quadro com as cores usadas para a seleção principal; Caso contrário, <see langword="false" />.</param>
        <summary>Desenha um quadro de seleção bloqueado na tela dentro dos limites especificados e na superfície de gráfico especificado. Especifica se deve desenhar o quadro com as cores selecionadas primários.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo.</param>
        <param name="glyph">Uma da <see cref="T:System.Windows.Forms.MenuGlyph" /> valores que especifica a imagem a ser desenhada.</param>
        <summary>Desenha o glifo de menu especificado em um controle de item de menu dentro dos limites especificados e na superfície de especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o desenho proprietário <xref:System.Windows.Forms.MenuItem> controles, você precisa verificar valores de propriedade para determinar o símbolo correto para desenhar ou remover. Por exemplo, quando o <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> está definida como `true`, você deve chamar o <xref:System.Windows.Forms.MenuGlyph.Checkmark> valor <xref:System.Windows.Forms.MenuGlyph> para desenhar uma marca de seleção no <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo.</param>
        <param name="glyph">Uma da <see cref="T:System.Windows.Forms.MenuGlyph" /> valores que especifica a imagem a ser desenhada.</param>
        <param name="foreColor">A cor que substitui <see cref="P:System.Drawing.Color.White" /> como a cor de primeiro plano.</param>
        <param name="backColor">A cor que substitui <see cref="P:System.Drawing.Color.Black" /> como a cor de plano de fundo.</param>
        <summary>Desenha o glifo de menu especificado em um controle de item de menu dentro dos limites especificados e na superfície de especificado, substituindo <see cref="P:System.Drawing.Color.White" /> com a cor especificada no <paramref name="backColor" /> parâmetro e substituindo <see cref="P:System.Drawing.Color.Black" /> com a cor especificada no <paramref name="foreColor" /> parâmetro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o desenho proprietário <xref:System.Windows.Forms.MenuItem> controles, você precisa verificar valores de propriedade para determinar o símbolo correto para desenhar ou remover. Por exemplo, quando o <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> está definida como `true`, você deve chamar o <xref:System.Windows.Forms.MenuGlyph.Checkmark> valor <xref:System.Windows.Forms.MenuGlyph> para desenhar uma marca de seleção no <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura do glifo menu.</param>
        <param name="height">A altura do glifo menu.</param>
        <param name="glyph">Uma da <see cref="T:System.Windows.Forms.MenuGlyph" /> valores que especifica a imagem a ser desenhada.</param>
        <summary>Desenha o glifo de menu especificado em um controle de item de menu com os limites especificados e na superfície de especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o desenho proprietário <xref:System.Windows.Forms.MenuItem> controles, você precisa verificar valores de propriedade para determinar o símbolo correto para desenhar ou remover. Por exemplo, quando o <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> está definida como true, chamar o <xref:System.Windows.Forms.MenuGlyph.Checkmark> valor <xref:System.Windows.Forms.MenuGlyph> para desenhar uma marca de seleção no <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura do glifo menu.</param>
        <param name="height">A altura do glifo menu.</param>
        <param name="glyph">Uma da <see cref="T:System.Windows.Forms.MenuGlyph" /> valores que especifica a imagem a ser desenhada.</param>
        <param name="foreColor">A cor que substitui <see cref="P:System.Drawing.Color.White" /> como a cor de primeiro plano.</param>
        <param name="backColor">A cor que substitui <see cref="P:System.Drawing.Color.Black" /> como a cor de plano de fundo.</param>
        <summary>Desenha o glifo de menu especificado em um controle de item de menu em coordenadas especificadas, altura e largura na superfície de especificado, substituindo <see cref="P:System.Drawing.Color.White" /> com a cor especificada no <paramref name="backColor" /> parâmetro e substituindo <see cref="P:System.Drawing.Color.Black" /> com a cor especificado no <paramref name="foreColor" /> parâmetro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o desenho proprietário <xref:System.Windows.Forms.MenuItem> controles, você precisa verificar valores de propriedade para determinar o símbolo correto para desenhar ou remover. Por exemplo, quando o <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> está definida como `true`, você deve chamar o <xref:System.Windows.Forms.MenuGlyph.Checkmark> valor <xref:System.Windows.Forms.MenuGlyph> para desenhar uma marca de seleção no <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da caixa de seleção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar a caixa de seleção.</param>
        <summary>Desenha um controle de caixa de seleção de três estados no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura da caixa de seleção.</param>
        <param name="height">A altura da caixa de seleção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar a caixa de seleção.</param>
        <summary>Desenha um controle de caixa de seleção de três estados no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do botão de opção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar em um botão de opção.</param>
        <summary>Desenha um controle de botão de opção no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura do botão de opção.</param>
        <param name="height">A altura do botão de opção.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar em um botão de opção.</param>
        <summary>Desenha um controle de botão de opção no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleFrame">
      <MemberSignature Language="C#" Value="public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleFrame(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.FrameStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.FrameStyle" />
      </Parameters>
      <Docs>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do retângulo a ser desenhado, nas coordenadas da tela.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> da tela de fundo atrás do quadro.</param>
        <param name="style">Um dos valores de <see cref="T:System.Windows.Forms.FrameStyle" /> que especifica o estilo do quadro.</param>
        <summary>Desenha um quadro reversível na tela dentro dos limites especificados, com a cor da tela de fundo especificada e no estado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor de preenchimento do quadro, de forma que ele está sempre visível o plano de fundo.  
  
 Os resultados desse método podem ser revertidos pelo mesmo intervalo de desenho novamente. Desenho de um quadro usando esse método é semelhante a inversão de uma região da tela, exceto que ele fornece um melhor desempenho para uma variedade maior de cores.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>e o <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> membros. Para executar o exemplo, cole o seguinte código em um formulário chamado `Form1` que contém vários controles. Este exemplo requer que os eventos de mouse estão conectados aos manipuladores de eventos definidos no exemplo.  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleLine">
      <MemberSignature Language="C#" Value="public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleLine(valuetype System.Drawing.Point start, valuetype System.Drawing.Point end, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Drawing.Point" />
        <Parameter Name="end" Type="System.Drawing.Point" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="start">O <see cref="T:System.Drawing.Point" /> inicial da linha, em coordenadas de tela.</param>
        <param name="end">O <see cref="T:System.Drawing.Point" /> final da linha, em coordenadas de tela.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> de tela de fundo atrás da linha.</param>
        <summary>Desenha uma linha reversível na tela dentro dos pontos inicial e final especificados e com a cor da tela de fundo especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor de preenchimento da linha para que ele está sempre visível o plano de fundo.  
  
 Os resultados desse método podem ser revertidos desenhando novamente a mesma linha. Desenhar uma linha usando esse método é semelhante a inversão de uma região da tela, exceto que ele fornece um melhor desempenho para uma variedade maior de cores.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> métodos. Para executar o exemplo, cole o código a seguir em um formulário. Adicione um botão chamado `Button3` para o formulário e certifique-se de que todos os eventos são conectados a seus manipuladores de eventos.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do glifo.</param>
        <param name="button">Uma da <see cref="T:System.Windows.Forms.ScrollButton" /> valores que especifica o tipo de seta de rolagem para desenhar.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar o botão de rolagem.</param>
        <summary>Desenha o botão de rolagem especificado em um controle barra de rolagem no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="x">A coordenada X do canto superior esquerdo do retângulo de desenho.</param>
        <param name="y">A coordenada Y do canto superior esquerdo do retângulo de desenho.</param>
        <param name="width">A largura do botão de rolagem.</param>
        <param name="height">A altura do botão de rolagem.</param>
        <param name="button">Uma da <see cref="T:System.Windows.Forms.ScrollButton" /> valores que especifica o tipo de seta de rolagem para desenhar.</param>
        <param name="state">Uma combinação bit a bit do <see cref="T:System.Windows.Forms.ButtonState" /> valores que especifica o estado para desenhar o botão de rolagem.</param>
        <summary>Desenha o botão de rolagem especificado em um controle barra de rolagem no estado especificado, na superfície de gráfico especificado e dentro dos limites especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawSelectionFrame">
      <MemberSignature Language="C#" Value="public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSelectionFrame(class System.Drawing.Graphics graphics, bool active, valuetype System.Drawing.Rectangle outsideRect, valuetype System.Drawing.Rectangle insideRect, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="active" Type="System.Boolean" />
        <Parameter Name="outsideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="insideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="active">
          <see langword="true" />Para desenhar o quadro de seleção em um estado ativo; Caso contrário, <see langword="false" />.</param>
        <param name="outsideRect">O <see cref="T:System.Drawing.Rectangle" /> que representa o limite externo do quadro de seleção.</param>
        <param name="insideRect">O <see cref="T:System.Drawing.Rectangle" /> que representa o limite interno do quadro de seleção.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> da tela de fundo atrás do quadro.</param>
        <summary>Desenha um quadro de seleção padrão no estado especificado, na superfície de gráfico especificado, com as dimensões especificadas internas e externas e a cor do plano de fundo especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um quadro de seleção é um quadro que é desenhado ao redor de um componente selecionado em tempo de design.  
  
 O `backColor` parâmetro é usado para calcular a cor de preenchimento do quadro, de forma que ele está sempre visível o plano de fundo.  
  
 Se o `active` parâmetro está definido como `true`, o quadro de seleção é desenhado como um conjunto de marcas de hachura que indica se o componente foi ativado; caso contrário, o quadro de seleção é desenhado com um padrão pontilhado ou nada, dependendo da implementação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> do plano de fundo usado para determinar as cores da alça de tamanho.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da alça de tamanho.</param>
        <summary>Desenha uma alça de tamanho em um formulário com os limites especificados e a cor do plano de fundo e na superfície de gráfico especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor da alça de tamanho para que ele está sempre visível o plano de fundo.  
  
 Quando você define uma janela dimensionável, você pode incluir uma alça de tamanho. Uma alça de tamanho é um identificador especial que permite que o usuário redimensionar a janela.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> do plano de fundo usado para determinar as cores da alça de tamanho.</param>
        <param name="x">A coordenada x do canto superior esquerdo da alça de tamanho.</param>
        <param name="y">A coordenada y do canto superior esquerdo da alça de tamanho.</param>
        <param name="width">A largura da alça de tamanho.</param>
        <param name="height">A altura da alça de tamanho.</param>
        <summary>Desenha uma alça de tamanho em um formulário com os limites especificados e a cor do plano de fundo e na superfície de gráfico especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor da alça de tamanho para que ele está sempre visível o plano de fundo.  
  
 Quando você define uma janela dimensionável, você pode incluir uma alça de tamanho. Uma alça de tamanho é um identificador especial que permite que o usuário redimensionar a janela.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.Graphics graphics, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="s">A cadeia de caracteres para desenhar.</param>
        <param name="font">O <see cref="T:System.Drawing.Font" /> para desenhar com a cadeia de caracteres.</param>
        <param name="color">O <see cref="T:System.Drawing.Color" /> do plano de fundo por trás de cadeia de caracteres.</param>
        <param name="layoutRectangle">O <see cref="T:System.Drawing.RectangleF" /> que representa as dimensões da cadeia de caracteres.</param>
        <param name="format">O <see cref="T:System.Drawing.StringFormat" /> para aplicar à cadeia de caracteres.</param>
        <summary>Desenha a cadeia de caracteres especificada em um estado desabilitado na superfície do gráfico especificado; dentro dos limites especificados; e no formato, cor e fonte especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.IDeviceContext dc, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.Rectangle layoutRectangle, valuetype System.Windows.Forms.TextFormatFlags format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">O GDI baseado em <see cref="T:System.Windows.Forms.TextRenderer" />.</param>
        <param name="s">A cadeia de caracteres para desenhar.</param>
        <param name="font">O <see cref="T:System.Drawing.Font" /> para desenhar com a cadeia de caracteres.</param>
        <param name="color">O <see cref="T:System.Drawing.Color" /> do plano de fundo por trás de cadeia de caracteres.</param>
        <param name="layoutRectangle">O <see cref="T:System.Drawing.RectangleF" /> que representa as dimensões da cadeia de caracteres.</param>
        <param name="format">O <see cref="T:System.Drawing.StringFormat" /> para aplicar à cadeia de caracteres.</param>
        <summary>Desenha a cadeia de caracteres especificada em um estado desabilitado na superfície do gráfico especificado, dentro dos limites especificados e no formato, usando especificado, cor e fonte especificada com base em GDI <see cref="T:System.Windows.Forms.TextRenderer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawVisualStyleBorder">
      <MemberSignature Language="C#" Value="public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawVisualStyleBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">O <see cref="T:System.Drawing.Graphics" /> para desenhar.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões da borda.</param>
        <summary>Desenha uma borda no estilo apropriado para itens desabilitados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReversibleRectangle">
      <MemberSignature Language="C#" Value="public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillReversibleRectangle(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="rectangle">O <see cref="T:System.Drawing.Rectangle" /> que representa as dimensões do retângulo a serem preenchidas, nas coordenadas da tela.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> da tela de fundo atrás do preenchimento.</param>
        <summary>Desenha um retângulo preenchido e reversível na tela.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `backColor` parâmetro é usado para calcular a cor de preenchimento do retângulo para que ele está sempre visível o plano de fundo.  
  
 Os resultados desse método podem ser revertidos ao desenhar o retângulo mesmo novamente. Desenhar um retângulo usando esse método é semelhante a inversão de uma região da tela, exceto que ele fornece um melhor desempenho para uma variedade maior de cores.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> método. Para executar o exemplo, cole o código a seguir em um formulário. Adicione um botão chamado `Button2` para o formulário e certifique-se de que todos os eventos são conectados a seus manipuladores de eventos.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> a ser clareado.</param>
        <summary>Cria um novo objeto de cor clara do controle de cor especificada.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor clara no controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida em um <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é reduzido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor, float32 percOfLightLight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfLightLight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> a ser clareado.</param>
        <param name="percOfLightLight">O percentual a clarear o <see cref="T:System.Drawing.Color" /> especificado.</param>
        <summary>Cria um novo objeto de cor clara para o controle de uma cor especificada e clareia-o pelo percentual especificado.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor clara no controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida em um <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é reduzido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color LightLight(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">O <see cref="T:System.Drawing.Color" /> a ser clareado.</param>
        <summary>Cria um novo objeto de cor clara do controle de cor especificada.</summary>
        <returns>Um <see cref="T:System.Drawing.Color" /> que representa a cor clara no controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se especificado <xref:System.Drawing.Color> é uma da <xref:System.Drawing.SystemColors>, a cor é convertida para o <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> cor; caso contrário, o valor da cor luminosidade é aumentado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
