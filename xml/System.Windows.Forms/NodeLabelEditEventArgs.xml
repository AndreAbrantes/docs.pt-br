<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para os eventos de <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> e de <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.TreeView.AfterLabelEdit> evento ocorre quando o usuário termina de editar o texto de um nó de árvore. O <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> evento ocorre quando o usuário começa a editar o texto de um nó de árvore. Um <xref:System.Windows.Forms.NodeLabelEditEventArgs> objeto Especifica o novo texto para associar o nó de árvore, o nó de árvore que contém o rótulo a ser editado, e se a operação de edição foi cancelada.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [eventos](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## Examples  
 O exemplo a seguir permite que o usuário edite nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>. Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`. Se um nó de árvore de não-raiz foi selecionado, ela será colocada no estado editável, permitindo que o usuário edite o rótulo do nó. Depois que o usuário para editar o rótulo do nó de árvore, o novo texto de rótulo é avaliado e salvo. Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo. Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado ao seu texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">O nó de árvore que contém o texto para editar.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> classe especificado <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> propriedade é atribuída a `node` o valor do parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">O nó de árvore que contém o texto para editar.</param>
        <param name="label">O novo texto para associar o nó de árvore.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> classe especificado <see cref="T:System.Windows.Forms.TreeNode" /> e o texto especificado com o qual deseja atualizar o rótulo do nó de árvore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> propriedade é atribuída a `node` valor de parâmetro e o <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> propriedade é atribuída a `label` o valor do parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a edição foi cancelada.</summary>
        <value>
          <see langword="true" />Se a edição tiver sido cancelada; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir permite que o usuário edite nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>. Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`. Se um nó de árvore de não-raiz foi selecionado, ela será colocada no estado editável, permitindo que o usuário edite o rótulo do nó. Depois que o usuário para editar o rótulo do nó de árvore, o novo texto de rótulo é avaliado e salvo. Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo. Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado ao seu texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o novo texto para associar o nó de árvore.</summary>
        <value>O valor de cadeia de caracteres que representa o novo <see cref="T:System.Windows.Forms.TreeNode" /> rótulo ou <see langword="null" /> se o usuário cancelar a edição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor dessa propriedade é `null` se o usuário pressionar ESC para cancelar a edição ou pressiona ENTER sem modificar o texto do rótulo. Se o usuário edita o texto do rótulo, o valor dessa propriedade é o novo texto de rótulo. Isso é verdadeiro mesmo se o valor final do texto do rótulo editado é o mesmo que seu valor original.  
  
   
  
## Examples  
 O exemplo a seguir permite que o usuário edite nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>. Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`. Se um nó de árvore de não-raiz foi selecionado, ela será colocada no estado editável, permitindo que o usuário edite o rótulo do nó. Depois que o usuário para editar o rótulo do nó de árvore, o novo texto de rótulo é avaliado e salvo. Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo. Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado ao seu texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nó de árvore que contém o texto para editar.</summary>
        <value>Um <see cref="T:System.Windows.Forms.TreeNode" /> que representa o nó de árvore que contém o texto para editar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir permite que o usuário edite nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>. Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`. Se um nó de árvore de não-raiz foi selecionado, ela será colocada no estado editável, permitindo que o usuário edite o rótulo do nó. Depois que o usuário para editar o rótulo do nó de árvore, o novo texto de rótulo é avaliado e salvo. Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo. Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado ao seu texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
