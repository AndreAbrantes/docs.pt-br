<Type Name="AxHost+State" FullName="System.Windows.Forms.AxHost+State">
  <TypeSignature Language="C#" Value="public class AxHost.State : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit AxHost/State extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AxHost.State" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.TypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsula o estado persistente de um controle ActiveX.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.AxHost.State> podem ser recuperados usando o <xref:System.Windows.Forms.AxHost.OcxState%2A?displayProperty=nameWithType> propriedade, ou ao ler o estado do controle de um fluxo de dados.  
  
 Para obter mais informações, consulte a documentação para `IPersistStream` e `IPersistPropertyBag` na biblioteca MSDN. `IPersistStream`pode ser encontrado na seção de referência de interface da documentação do SDK COM, e `IPersistPropertyBag` podem ser encontradas na seção de referência de interface COM fundamentos da documentação do SDK COM.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected State (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.State.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Um valor <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
        <param name="context">Um valor <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Forms.AxHost.State" /> classe para desserializar um estado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public State (System.IO.Stream ms, int storageType, bool manualUpdate, string licKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream ms, int32 storageType, bool manualUpdate, string licKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.State.#ctor(System.IO.Stream,System.Int32,System.Boolean,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ms" Type="System.IO.Stream" />
        <Parameter Name="storageType" Type="System.Int32" />
        <Parameter Name="manualUpdate" Type="System.Boolean" />
        <Parameter Name="licKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ms">Um <see cref="T:System.IO.Stream" /> no qual o estado é armazenado.</param>
        <param name="storageType">Um <see cref="T:System.Int32" /> que indica o tipo de armazenamento.</param>
        <param name="manualUpdate">
          <see langword="true" />Para obter atualizações manuais; Caso contrário, <see langword="false" />.</param>
        <param name="licKey">A chave de licença do controle.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Windows.Forms.AxHost.State" /> classe para serialização de um estado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.State.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
        <param name="context">O destino dessa serialização.</param>
        <summary>Popula um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre o `context` parâmetro, consulte o <xref:System.Runtime.Serialization.StreamingContext> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para executar código não gerenciado. Enumeração associada: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
