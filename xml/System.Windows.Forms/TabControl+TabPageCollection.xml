<Type Name="TabControl+TabPageCollection" FullName="System.Windows.Forms.TabControl+TabPageCollection">
  <TypeSignature Language="C#" Value="public class TabControl.TabPageCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit TabControl/TabPageCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TabControl.TabPageCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contém uma coleção de objetos <see cref="T:System.Windows.Forms.TabPage" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ordem das páginas de guia nesta coleção reflete a ordem das guias no relacionado <xref:System.Windows.Forms.TabControl> controle. Para alterar a ordem das guias no controle, você deve alterar suas posições na coleção por removê-los e inseri-los em novos índices.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabPageCollection (System.Windows.Forms.TabControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TabControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.#ctor(System.Windows.Forms.TabControl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.TabControl" />
      </Parameters>
      <Docs>
        <param name="owner">O <see cref="T:System.Windows.Forms.TabControl" /> que pertence esta coleção.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Windows.Forms.TabControl" /> especificado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <summary>Cria uma página da guia com o texto especificado e o adiciona à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recém-criado <xref:System.Windows.Forms.TabPage> é adicionada ao final da coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Windows.Forms.TabPage" /> a ser adicionado.</param>
        <summary>Adiciona um <see cref="T:System.Windows.Forms.TabPage" /> à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Windows.Forms.TabControl> com um <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método para adicionar uma página da guia único para o `tabControl1` controle guia. Observe o <xref:System.Windows.Forms.TabControl.TabPages%2A> propriedade é usada para obter o `tabControl1` controles de coleção para adicionar o `tabPage1` a esta coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Add/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Add/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Add/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> especificado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <summary>Cria uma página da guia com o texto especificado e a chave e o adiciona à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Recém-criado <xref:System.Windows.Forms.TabPage> é adicionada ao final da coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <param name="imageIndex">O índice da imagem para exibir na página da guia.</param>
        <summary>Cria uma página da guia com a chave especificada, texto e imagem e o adiciona à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 O `imageIndex` parâmetro faz referência a uma imagem no <xref:System.Windows.Forms.TabControl.ImageList%2A> propriedade o <xref:System.Windows.Forms.TabControl>.  
  
 Recém-criado <xref:System.Windows.Forms.TabPage> é adicionada ao final da coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <param name="imageKey">A chave da imagem para exibir na página da guia.</param>
        <summary>Cria uma página da guia com a chave especificada, texto e imagem e o adiciona à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 O `imageKey` parâmetro faz referência a uma imagem no <xref:System.Windows.Forms.TabControl.ImageList%2A> propriedade o <xref:System.Windows.Forms.TabControl>.  
  
 Recém-criado <xref:System.Windows.Forms.TabPage> é adicionada ao final da coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.TabPage[] pages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.TabPage[] pages) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.AddRange(System.Windows.Forms.TabPage[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pages" Type="System.Windows.Forms.TabPage[]" />
      </Parameters>
      <Docs>
        <param name="pages">Uma matriz do tipo <see cref="T:System.Windows.Forms.TabPage" /> que contém as páginas de guia para adicionar.</param>
        <summary>Adiciona um conjunto de páginas da guia à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método para adicionar uma matriz de páginas de guia para o `tabControl1` controle guia. Observe que o <xref:System.Windows.Forms.TabControl.TabPages%2A> propriedade obtém o `tabControl1` controla a coleção, para adicionar a matriz de páginas de guias para esta coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para esta coleção.  
  
 [!code-cpp[TabPageCollection.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.AddRange/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.AddRange/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.AddRange/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor das páginas é igual a <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todas as páginas de guia da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria inicialmente um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.Clear%2A> método para limpar todos os controles de `tabControl1` controla a coleção em uma instância. Em seguida, o exemplo adiciona `tabPage2` volta à coleção. Observe que o <xref:System.Windows.Forms.TabControl.TabPages%2A> propriedade é usada para obter o `tabControl1` controla a coleção para remover (e adicionar) em páginas de guias desta coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Clear/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Clear/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Clear/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Contains(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page">O <see cref="T:System.Windows.Forms.TabPage" /> a ser localizado na coleção.</param>
        <summary>Determina se uma página da guia especificada está na coleção.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Windows.Forms.TabPage" /> especificado estiver na coleção; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria inicialmente um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage> objetos. As páginas dois guia são adicionadas diretamente ao `tabControl1` pelo <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método. O <xref:System.Windows.Forms.TabControl.TabPageCollection.Contains%2A> método determina `tabPage3` faz parte do `tabControl1` controla a coleção. Porque `tabPage3` não foi encontrado na coleção, ele foi adicionado pelo <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.Contains#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Contains/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Contains#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Contains/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Contains/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor de <paramref name="page" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia a ser pesquisada.</param>
        <summary>Determina se a coleção contém uma página da guia com a chave especificada.</summary>
        <returns>
          <see langword="true" /> para indicar que uma guia da página com a chave especificada foi encontrada na coleção, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 A chave comparação não diferencia maiusculas de minúsculas. Se o `key` parâmetro é `null` ou uma cadeia de caracteres vazia, <xref:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey%2A> retorna `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de páginas da guia na coleção.</summary>
        <value>O número de páginas da guia na coleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage>. O <xref:System.Windows.Forms.TabControl.TabPageCollection.Count%2A> propriedade obtém o número de <xref:System.Windows.Forms.TabPage> objetos no `tabControl1` controla a coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.Count#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Count/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Count#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Count/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Count#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Count/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma enumeração de todas as páginas de guia na coleção.</summary>
        <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método cria um enumerador que contém um instantâneo da coleção. Você pode alterar a coleção alterando o enumerador; No entanto, vários enumeradores possam acessar simultaneamente a mesma coleção. A alteração de coleção (diretamente ou por meio de outro enumerador), portanto, pode causar <xref:System.Collections.IEnumerator.Current%2A> ou <xref:System.Collections.IEnumerator.MoveNext%2A> para lançar uma exceção.  
  
 Dois enumeradores criados da mesma coleção ao mesmo tempo podem conter instantâneos diferentes.  
  
 Removendo objetos do enumerador também remove da coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page">O <see cref="T:System.Windows.Forms.TabPage" /> a ser localizado na coleção.</param>
        <summary>Retorna o índice da página da guia especificada na coleção.</summary>
        <returns>O índice baseado em zero da página da guia; -1 se ele não for encontrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Windows.Forms.TabControl> com um <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOf%2A> método para recuperar o `tabPage1` valor de índice. Uma dica de ferramenta é usada para exibir esse valor.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IndexOf/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor de <paramref name="page" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia Localizar na coleção.</param>
        <summary>Retorna o índice da primeira ocorrência da <see cref="T:System.Windows.Forms.TabPage" /> com a chave especificada.</summary>
        <returns>O índice baseado em zero da primeira ocorrência de uma guia de página com a chave especificada, se encontrado; Caso contrário, retornará -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> é chamado sucessivamente, a última retornou o índice será verificado para uma correspondência de chave pela primeira vez e se não houver nenhuma correspondência, a pesquisa começa no início da coleção.  
  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>. A chave comparação não diferencia maiusculas de minúsculas. Se o `key` parâmetro é `null` ou uma cadeia de caracteres vazia, <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> retornará -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice baseado em zero no qual a página de guia é inserida.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <summary>Cria uma nova página de guia com o texto especificado e a insere na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> método permite que você crie uma nova página de guia e insira-o em um local especificado. Para adicionar uma página da guia sem especificar uma posição específica na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método. Se você deseja adicionar uma matriz de itens na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.TabPage tabPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.TabPage tabPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tabPage" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice baseado em zero no qual a página de guia é inserida.</param>
        <param name="tabPage">O <see cref="T:System.Windows.Forms.TabPage" /> a ser inserido na coleção.</param>
        <summary>Insere uma página de guia existente à coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> método permite que você insira uma página da guia em um local especificado. Para adicionar uma página da guia sem especificar uma posição específica na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método. Se você deseja adicionar uma matriz de itens na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice baseado em zero no qual a página de guia é inserida.</param>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <summary>Cria uma nova página de guia com a chave especificada e o texto e o insere na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 O <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> método permite que você criar e inserir uma página da guia em um local especificado. Para adicionar uma página da guia sem especificar uma posição específica na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método. Se você deseja adicionar uma matriz de itens na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice de base zero em que a página da guia é inserida</param>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia</param>
        <param name="imageIndex">O índice baseado em zero da imagem para exibir na página da guia.</param>
        <summary>Cria uma nova página de guia com a chave especificada, texto e imagem e o insere na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 O <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> método permite que você criar e inserir uma página da guia em um local especificado. Para adicionar uma página da guia sem especificar uma posição específica na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método. Se você deseja adicionar uma matriz de itens na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método.  
  
 O `imageIndex` parâmetro faz referência a uma imagem no <xref:System.Windows.Forms.TabControl.ImageList%2A> propriedade o <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice baseado em zero no qual a página de guia é inserida.</param>
        <param name="key">O nome da página da guia.</param>
        <param name="text">O texto a ser exibido na página da guia.</param>
        <param name="imageKey">A chave da imagem para exibir na página da guia.</param>
        <summary>Cria uma página da guia com a chave especificada, texto e imagem e a insere na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 O <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> método permite que você criar e inserir uma página da guia em um local especificado. Para adicionar uma página da guia sem especificar uma posição específica na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> método. Se você deseja adicionar uma matriz de itens na coleção, use o <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> método.  
  
 O `imageKey` parâmetro faz referência a uma imagem no <xref:System.Windows.Forms.TabControl.ImageList%2A> propriedade o <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
        <value>Essa propriedade sempre retorna <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Windows.Forms.TabControl> com dois <xref:System.Windows.Forms.TabPage>. Este exemplo obtém o `tabControl1` controla a coleção e determina se ele é somente leitura usando o <xref:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly%2A> propriedade.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice baseado em zero da página da guia para obter ou definir.</param>
        <summary>Obtém ou define um <see cref="T:System.Windows.Forms.TabPage" /> na coleção.</summary>
        <value>O <see cref="T:System.Windows.Forms.TabPage" /> no índice especificado.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />é menor que zero ou maior que o maior índice disponível.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia a ser recuperada.</param>
        <summary>Obtém a página da guia com a chave especificada da coleção.</summary>
        <value>O <see cref="T:System.Windows.Forms.TabPage" /> com a chave especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 A chave comparação não diferencia maiusculas de minúsculas. Se o `key` parâmetro é `null` ou uma cadeia de caracteres vazia, <xref:System.Windows.Forms.TabControl.TabPageCollection.Item%2A> retorna `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Windows.Forms.TabPage" /> a ser removido.</param>
        <summary>Remove um <see cref="T:System.Windows.Forms.TabPage" /> da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria inicialmente um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.Remove%2A> método para remover uma página da guia único, especificamente `tabPage2` do `tabControl1` controla a coleção. Observe que o <xref:System.Windows.Forms.TabControl.TabPages%2A> propriedade obtém o `tabControl1` controles de coleção para adicionar e remover guias desta coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces com este exemplo.  
  
 [!code-cpp[TabPageCollection.Remove#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Remove/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Remove#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Remove/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Remove/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice baseado em zero do <see cref="T:System.Windows.Forms.TabPage" /> a ser removido.</param>
        <summary>Remove a página da guia no índice especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria inicialmente um <xref:System.Windows.Forms.TabControl> com três <xref:System.Windows.Forms.TabPage>. Este exemplo usa o <xref:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt%2A> método para remover `tabPage1`, que é especificado pelo índice, a partir de `tabControl1` controles de coleção. Observe que o <xref:System.Windows.Forms.TabControl.TabPages%2A> propriedade obtém o `tabControl1` controles de coleção para adicionar e remover guias desta coleção.  
  
 Use o <xref:System.Drawing> e <xref:System.Windows.Forms> namespaces para este exemplo.  
  
 [!code-cpp[TabPageCollection.RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.RemoveAt/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">O nome da página da guia a ser removida.</param>
        <summary>Remove a página da guia com a chave especificada da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.Name%2A> propriedade corresponde à chave para um <xref:System.Windows.Forms.TabPage> no <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">A matriz unidimensional que é o destino dos elementos copiados da coleção. A matriz deve ter indexação com base em zero.</param>
        <param name="index">O índice de base zero na matriz em que a cópia começa.</param>
        <summary>Copia os elementos da coleção para a matriz especificada, começando no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dest" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> é menor que zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dest" /> é multidimensional.  
  
 -ou-  
  
 O número de elementos de <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> é maior que o espaço disponível do índice até o final da <paramref name="dest" />.</exception>
        <exception cref="T:System.InvalidCastException">Os itens a <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> não pode ser convertido automaticamente para o tipo de <paramref name="dest" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> é sincronizado (thread-safe).</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <value>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Windows.Forms.TabPage" /> a adicionar à coleção.</param>
        <summary>Adiciona um <see cref="T:System.Windows.Forms.TabPage" /> controle à coleção.</summary>
        <returns>A posição na qual a <see cref="T:System.Windows.Forms.TabPage" /> foi inserido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> não é um <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page">O objeto a ser localizado na coleção.</param>
        <summary>Determina se o especificado <see cref="T:System.Windows.Forms.TabPage" /> controle está no <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <returns>
          <see langword="true" />Se o objeto especificado for um <see cref="T:System.Windows.Forms.TabPage" /> na coleção; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page">O <see cref="T:System.Windows.Forms.TabPage" /> a ser localizado na coleção.</param>
        <summary>Retorna o índice especificado <see cref="T:System.Windows.Forms.TabPage" /> controle na coleção.</summary>
        <returns>O índice de base zero se a página é uma <see cref="T:System.Windows.Forms.TabPage" /> na coleção; caso contrário -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object tabPage);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object tabPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tabPage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero no qual o <see cref="T:System.Windows.Forms.TabPage" /> devem ser inseridos.</param>
        <param name="tabPage">O <see cref="T:System.Windows.Forms.TabPage" /> para inserir o <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</param>
        <summary>Insere um <see cref="T:System.Windows.Forms.TabPage" /> controle na coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tabPage" /> não é um <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />é menor que 0 ou índice é maior que ou igual a <see cref="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> tem um tamanho fixo.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice baseado em zero do elemento a ser obtido.</param>
        <summary>Obtém ou define um <see cref="T:System.Windows.Forms.TabPage" /> na coleção.</summary>
        <value>O <see cref="T:System.Windows.Forms.TabPage" /> no índice especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor não é um <see cref="T:System.Windows.Forms.TabPage" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O <see cref="T:System.Windows.Forms.TabPage" /> a ser removido.</param>
        <summary>Remove um <see cref="T:System.Windows.Forms.TabPage" /> da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.TabControl.TabPageCollection> é convertida em uma interface de <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
