<Type Name="DataGridCell" FullName="System.Windows.Forms.DataGridCell">
  <TypeSignature Language="C#" Value="public struct DataGridCell" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DataGridCell extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifica uma célula na grade.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataGridCell> pode ser usado em conjunto com o <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> do controle <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> propriedade para obter ou definir o valor de qualquer célula. Definindo o <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> do controle <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> propriedade para um <xref:System.Windows.Forms.DataGridCell> faz com que o foco mover para a célula especificada pelo <xref:System.Windows.Forms.DataGridCell>.  
  
   
  
## Examples  
 O exemplo a seguir atribui o <xref:System.Windows.Forms.DataGridCell> para o <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> de um <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> e retorna o número de linha e coluna da célula selecionada. O valor armazenado no <xref:System.Data.DataTable> também será impressa usando o <xref:System.Windows.Forms.DataGridCell> do objeto <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> e <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A>.  
  
 [!code-cpp[Classic DataGridCell Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridCell (int r, int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 r, int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridCell.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="r">O número de uma linha de <see cref="T:System.Windows.Forms.DataGrid" />.</param>
        <param name="c">O número de uma coluna no <see cref="T:System.Windows.Forms.DataGrid" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Windows.Forms.DataGridCell> e define a nova instância para o <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> de um <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controle.  
  
 [!code-cpp[Classic DataGridCell.DataGridCell Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell.DataGridCell Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell.DataGridCell Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell.DataGridCell Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell.DataGridCell Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.DataGridCell Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="C#" Value="public int ColumnNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridCell.ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de uma coluna no <see cref="T:System.Windows.Forms.DataGrid" /> controle.</summary>
        <value>O número da coluna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> valor para especificar um <xref:System.Data.DataColumn> no <xref:System.Data.DataTable> associados a <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controle.  
  
   
  
## Examples  
 O exemplo a seguir atribui o <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> propriedade de um <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> para um <xref:System.Windows.Forms.DataGridCell>. O valor armazenado no <xref:System.Data.DataTable> é retornado com a especificação de <xref:System.Data.DataRow> e <xref:System.Data.DataColumn> objetos por meio de <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> e <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> propriedades.  
  
 [!code-cpp[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridCell.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Um objeto que você está comparando.</param>
        <summary>Obtém um valor que indica se o <see cref="T:System.Windows.Forms.DataGridCell" /> é idêntico a um segundo <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
        <returns>
          <see langword="true" />Se o segundo objeto é idêntico ao primeiro; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir compara dois <xref:System.Windows.Forms.DataGridCell> objetos.  
  
 [!code-vb[Classic DataGridCell.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridCell.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um valor de hash que pode ser adicionado a um <see cref="T:System.Collections.Hashtable" />.</summary>
        <returns>Um número que identifica exclusivamente o <see cref="T:System.Windows.Forms.DataGridCell" /> em um <see cref="T:System.Collections.Hashtable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir adiciona o valor de hash da célula selecionada em uma <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> o controle para um <xref:System.Collections.Hashtable>.  
  
 [!code-cpp[Classic DataGridCell.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell.GetHashCode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell.GetHashCode Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.GetHashCode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowNumber">
      <MemberSignature Language="C#" Value="public int RowNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridCell.RowNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de uma linha de <see cref="T:System.Windows.Forms.DataGrid" /> controle.</summary>
        <value>O número da linha.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> valor para especificar um <xref:System.Data.DataRow> no <xref:System.Data.DataTable> associados a <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> controle.  
  
   
  
## Examples  
 O exemplo a seguir atribui o <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> propriedade de um <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> para um <xref:System.Windows.Forms.DataGridCell> e retorna o valor armazenado no <xref:System.Data.DataTable> do objeto <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> e <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> propriedades.  
  
 [!code-cpp[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell.ColumnNumber Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.ColumnNumber Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridCell.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o número de linha e coluna da célula.</summary>
        <returns>Uma cadeia de caracteres que contém o número de linha e coluna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir retorna o número de linha de <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> do controle <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> usando o <xref:System.Windows.Forms.DataGridCell> do objeto <xref:System.Windows.Forms.DataGridCell.ToString%2A> método.  
  
 [!code-cpp[Classic DataGridCell.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridCell.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridCell.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridCell.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridCell.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridCell.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
