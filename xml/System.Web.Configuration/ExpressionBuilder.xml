<Type Name="ExpressionBuilder" FullName="System.Web.Configuration.ExpressionBuilder">
  <TypeSignature Language="C#" Value="public sealed class ExpressionBuilder : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExpressionBuilder extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Recupera um recurso dinâmico durante a compilação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET automaticamente avalia expressões durante a análise de uso da página de <xref:System.Web.Configuration.ExpressionBuilder> classe. O <xref:System.Web.Configuration.ExpressionBuilderCollection> coleção, que é composta pelo `expressionBuilders` elementos contidos no `compilation` seção da configuração. O <xref:System.Web.Configuration.ExpressionBuilder> contém valores específicos de pares chave/valor.  
  
 Um valor é recuperado, incluindo uma expressão de formato  
  
 `<%$ ExpressionPrefix: ExpressionKey %>`  
  
 dentro da página. O `ExpressionPrefix` mapeia o tipo da expressão devem ser recuperados como um tipo de construtor de expressão comum (ou seja, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) ou um tipo de construtor de expressão personalizada. O `ExpressionKey` Especifica a chave usada para referenciar o valor retornado.  
  
 Se você optar por implementar um tipo comum do construtor de expressões, você deve mapear o construtor de expressão para o nome da seção associado na configuração. Se você optar por implementar um tipo personalizado do construtor de expressões, você deve mapear o construtor de expressões para sua classe personalizada do construtor de expressões, que deve ser derivado do <xref:System.Web.Configuration.ExpressionBuilder> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionBuilder (string expressionPrefix, string theType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix, string theType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="theType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Uma cadeia de caracteres que identifica o tipo de expressão para recuperar.</param>
        <param name="theType">Uma cadeia de caracteres que especifica o tipo de expressão.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Configuration.ExpressionBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.Configuration.ExpressionBuilder> objeto. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.Configuration.ExpressionBuilderCollection> classe.  
  
 [!code-csharp[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/CS/ExpressionBuilderCollection.cs#2)]
 [!code-vb[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/VB/ExpressionBuilderCollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("expressionPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres que identifica o tipo de expressão para recuperar.</summary>
        <value>Uma cadeia de caracteres que identifica o tipo de expressão para recuperar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> mapeia a expressão para o nome da seção associado na configuração de tipos de expressão comum ou a expressão é mapeado para a classe de expressão personalizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres que especifica o tipo de expressão.</summary>
        <value>Uma cadeia de caracteres que especifica o tipo de expressão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> Especifica o tipo de objeto usado para determinar o valor da expressão. O tipo pode especificar uma seção na configuração ou uma classe personalizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
