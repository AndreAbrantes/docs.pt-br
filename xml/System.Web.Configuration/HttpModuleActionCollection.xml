<Type Name="HttpModuleActionCollection" FullName="System.Web.Configuration.HttpModuleActionCollection">
  <TypeSignature Language="C#" Value="public sealed class HttpModuleActionCollection : System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpModuleActionCollection extends System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpModuleActionCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElementCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.HttpModuleAction))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma coleção de objetos <see cref="T:System.Web.Configuration.HttpModuleAction" /> . Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Configuration.HttpModuleActionCollection> coleção permite o acesso para o <xref:System.Web.Configuration.HttpModuleAction> elementos do <xref:System.Web.Configuration.HttpModulesSection> seção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.Configuration.HttpModuleActionCollection> classe.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#1)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#1)]  
  
 O exemplo a seguir é um trecho do arquivo de configuração que permite que o ASP.NET usar um módulo personalizado. Para obter um exemplo completo de como criar e configurar um módulo HTTP, consulte o [NIB: como: criar e configurar um módulo HTTP](http://msdn.microsoft.com/en-us/4174fd13-a9c4-4ff6-baa5-3f7d7fc73ef3).  
  
```  
<httpModules>  
  <add name="TimerModule"   
    type="Samples.AspNet.RequestTimeInterval, RequestTimeInterval Version=1.0.1557.23158, Culture=neutral,  
    PublicKeyToken=7bfb33146a87b52e, processorArchitecture=MSIL"/>  
</httpModules>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpModuleActionCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Configuration.HttpModuleActionCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor cria uma instância não inicializada do <xref:System.Web.Configuration.HttpModuleActionCollection> objeto.  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar um <xref:System.Web.Configuration.HttpModuleActionCollection> objeto.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#2)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.Configuration.HttpModuleAction httpModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.Configuration.HttpModuleAction httpModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.Add(System.Web.Configuration.HttpModuleAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpModule" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="httpModule">O <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo a ser adicionado à coleção.</param>
        <summary>Adiciona um <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto à coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adiciona um <xref:System.Web.Configuration.HttpModuleAction> objeto à coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar um <xref:System.Web.Configuration.HttpModuleAction> de objeto e adicioná-lo à coleção.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#3)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Foi feita uma tentativa de adicionar um <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto que já existe na coleção.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os <see cref="T:System.Web.Configuration.HttpModuleAction" /> objetos da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método insere um `clear` diretiva na seção apropriada do arquivo de configuração para limpar todas as referências a elementos definidos em um arquivo de configuração de nível superior. Todos os elementos definidos na seção apropriada do arquivo de configuração atual são removidos.  
  
   
  
## Examples  
 O exemplo a seguir mostra como limpar o <xref:System.Web.Configuration.HttpModuleAction> módulos contidos na coleção.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#8)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.CreateNewElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.Configuration.HttpModuleAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.Configuration.HttpModuleAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.IndexOf(System.Web.Configuration.HttpModuleAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="action">O <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo para o qual obter o índice da coleção.</param>
        <summary>Obtém o índice da coleção especificada <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo.</summary>
        <returns>O valor de índice de coleção para o módulo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de usar esse método, você deve identificar uma <xref:System.Web.Configuration.HttpModuleAction> módulo com o próprio nome e tipo. Você pode usar esse objeto de módulo para obter o índice da coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter um <xref:System.Web.Configuration.HttpModuleAction> índice da coleção de módulo.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#4)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected override bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.HttpModuleAction this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.HttpModuleAction Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleActionCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpModuleAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de coleção de módulo.</param>
        <summary>Obtém ou define um item na coleção.</summary>
        <value>O item especificado <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é destinada somente para uso interno.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleActionCollection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Remove um <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para remover um módulo de sua coleção, você pode usar um dos métodos sobrecarregados listados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A chave que identifica o <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto a ser removido da coleção.</param>
        <summary>Remove um <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método insere um `<remove>` elemento na seção apropriada do arquivo de configuração para todos os elementos definidos em um arquivo de configuração de nível mais alto. Se o elemento está definido na seção apropriada do arquivo de configuração atual, sua entrada será removida do arquivo de configuração. O objeto a ser removido deve existir na coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como remover um <xref:System.Web.Configuration.HttpModuleAction> módulo da coleção.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#6)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Não há nenhum <see cref="T:System.Web.Configuration.HttpModuleAction" /> de objeto com a chave especificada na coleção, o elemento já foi removido ou a coleção é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.Configuration.HttpModuleAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.Configuration.HttpModuleAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.Remove(System.Web.Configuration.HttpModuleAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="action">O <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo a ser removido.</param>
        <summary>Remove um <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método insere um `<remove>` elemento na seção apropriada do arquivo de configuração para todos os elementos definidos em um arquivo de configuração de nível mais alto. Se o elemento está definido na seção apropriada do arquivo de configuração atual, sua entrada será removida do arquivo de configuração. O objeto a ser removido deve existir na coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como remover um <xref:System.Web.Configuration.HttpModuleAction> módulo da coleção.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#5)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Transmitido <see cref="T:System.Web.Configuration.HttpModuleAction" /> objeto não existe na coleção, o elemento já foi removido ou a coleção é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleActionCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo a ser removido.</param>
        <summary>Remove um <see cref="T:System.Web.Configuration.HttpModuleAction" /> módulo no índice especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método insere um `<remove>` elemento na seção apropriada do arquivo de configuração para todos os elementos definidos em um arquivo de configuração de nível mais alto. Se o elemento está definido na seção apropriada do arquivo de configuração atual, sua entrada será removida do arquivo de configuração. O objeto a ser removido deve existir na coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como remover um <xref:System.Web.Configuration.HttpModuleAction> módulo da coleção.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleActionCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/CS/httpmoduleactioncollection.cs#7)]
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleActionCollection/VB/httpmoduleactioncollection.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Não há nenhum <see cref="T:System.Web.Configuration.HttpModuleAction" /> de objeto no índice especificado na coleção, o elemento já foi removido ou a coleção é somente leitura.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
