<Type Name="ServiceRoute" FullName="System.ServiceModel.Activation.ServiceRoute">
  <TypeSignature Language="C#" Value="public class ServiceRoute : System.Web.Routing.Route" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceRoute extends System.Web.Routing.Route" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.ServiceRoute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.Route</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permite a criação de rotas de serviço por HTTP para os Serviços WCF com suporte para endereços base sem extensão.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Activation.ServiceRoute>é derivado de <xref:System.Web.Routing.Route>. Quando o <xref:System.ServiceModel.Activation.ServiceRoute> construtor é chamado, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] adicionará o prefixo da rota correspondente (padrão de url) e um manipulador de rota (oculto) para o ASP.NET <xref:System.Web.Routing.RouteCollection>e o prefixo da rota correspondente, a fábrica do host de serviço e informações de tipo de serviço de cache em uma tabela de hash interno para ativação de serviços futuros. Observação: se os desenvolvedores manipulam diretamente a coleção de rotas em uma <xref:System.ServiceModel.Activation.ServiceRoute> que foi adicionado à coleção, a alteração não pode ser concedida pelo [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. [!INCLUDE[crabout](~/includes/crabout-md.md)]alterar os elementos em uma coleção de rota, consulte <xref:System.Web.Routing.RouteCollection>. É recomendável que os desenvolvedores definir todos os <xref:System.ServiceModel.Activation.ServiceRoute> em global. asax de arquivo e não remova um <xref:System.ServiceModel.Activation.ServiceRoute> do <xref:System.Web.Routing.RouteCollection> dinamicamente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceRoute (string routePrefix, System.ServiceModel.Activation.ServiceHostFactoryBase serviceHostFactory, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string routePrefix, class System.ServiceModel.Activation.ServiceHostFactoryBase serviceHostFactory, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceRoute.#ctor(System.String,System.ServiceModel.Activation.ServiceHostFactoryBase,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routePrefix" Type="System.String" />
        <Parameter Name="serviceHostFactory" Type="System.ServiceModel.Activation.ServiceHostFactoryBase" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="routePrefix">O prefixo da rota.</param>
        <param name="serviceHostFactory">Uma instância da classe <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" />.</param>
        <param name="serviceType">O tipo de serviço.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Activation.ServiceRoute" /> com o prefixo de rota, a fábrica do host de serviço e o tipo de serviço especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
