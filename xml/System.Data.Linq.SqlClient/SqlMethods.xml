<Type Name="SqlMethods" FullName="System.Data.Linq.SqlClient.SqlMethods">
  <TypeSignature Language="C#" Value="public static class SqlMethods" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlMethods extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.SqlClient.SqlMethods" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos que correspondem às funções do SQL Server. Há suporte para os métodos da classe <see cref="T:System.Data.Linq.SqlClient.SqlMethods" /> apenas em consultas LINQ to SQL.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateDiffDay">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de dia entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `day` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int DateDiffDay (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffDay(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de dias entre duas datas não anuláveis.</summary>
        <returns>O número de limites de dia entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `day` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int DateDiffDay (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffDay(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de dias entre duas datas não anuláveis.</summary>
        <returns>O número de limites de dia entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `day` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffDay (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffDay(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de dia entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de dia entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `day` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffDay (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffDay(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de dia entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de dia entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `day` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffHour">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de hora entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `hour` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int DateDiffHour (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffHour(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de hora entre duas datas não anuláveis.</summary>
        <returns>O número de limites de hora entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `hour` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int DateDiffHour (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffHour(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de hora entre duas datas não anuláveis.</summary>
        <returns>O número de limites de hora entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `hour` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffHour (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffHour(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de hora entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de hora entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `hour` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffHour (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffHour(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de hora entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de hora entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor é retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `hour` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMicrosecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de microssegundos entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMicrosecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMicrosecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de microssegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de microssegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `microsecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMicrosecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMicrosecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de microssegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de microssegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `microsecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMicrosecond (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMicrosecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de microssegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de microssegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `microsecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMicrosecond (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMicrosecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de microssegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de microssegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `microsecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMillisecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de milissegundos entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMillisecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMillisecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de milissegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de milissegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMillisecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMillisecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de milissegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de milissegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMillisecond (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMillisecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de milissegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de milissegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMillisecond (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMillisecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de milissegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de milissegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `millisecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMinute">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de minutos limites entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `minute` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int DateDiffMinute (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMinute(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de minutos limites entre duas datas não anuláveis.</summary>
        <returns>O número de limites de minutos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `minute` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int DateDiffMinute (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMinute(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de minutos limites entre duas datas não anuláveis.</summary>
        <returns>O número de limites de minutos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `minute` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMinute (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMinute(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de minutos limites entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de minutos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `minute` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMinute (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMinute(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de minutos limites entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de minutos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `minute` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMonth">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de meses entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `month` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int DateDiffMonth (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMonth(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de meses entre duas datas não anuláveis.</summary>
        <returns>O número de limites de mês entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `month` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int DateDiffMonth (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMonth(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de meses entre duas datas não anuláveis.</summary>
        <returns>O número de limites de mês entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `month` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMonth (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMonth(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de meses entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de mês entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `month` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffMonth (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMonth(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de meses entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de mês entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `month` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffNanosecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffNanosecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de nanossegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de nanossegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `nanosecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffNanosecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffNanosecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de nanossegundos entre duas datas não anuláveis.</summary>
        <returns>O número de limites de nanossegundos entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `nanosecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffNanosecond (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffNanosecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de nanossegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de nanossegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `nanosecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffNanosecond (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffNanosecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de nanossegundos entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de nanossegundos entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `nanosecond` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffSecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de segundo limites entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `second` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int DateDiffSecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffSecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de segundo limites entre duas datas não anuláveis.</summary>
        <returns>O número de limites segundo entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `second` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int DateDiffSecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffSecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de segundo limites entre duas datas não anuláveis.</summary>
        <returns>O número de limites segundo entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `second` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffSecond (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffSecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de segundo limites entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites segundo entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `second` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffSecond (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffSecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de segundo limites entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites segundo entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `second` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffYear">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Conta o número de limites de ano entre duas datas especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `year` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int DateDiffYear (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffYear(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de ano entre duas datas não anuláveis.</summary>
        <returns>O número de limites de ano entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `year` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int DateDiffYear (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffYear(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de ano entre duas datas não anuláveis.</summary>
        <returns>O número de limites de ano entre as duas datas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `year` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffYear (Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffYear(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de ano entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de ano entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `year` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiffYear (Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffYear(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">A data de início do período de tempo.</param>
        <param name="endDate">A data de término do período de tempo.</param>
        <summary>Conta o número de limites de ano entre duas datas permite valor nulos.</summary>
        <returns>Quando ambos os parâmetros não forem <see langword="null" />, retorna o número de limites de ano entre as duas datas especificadas. Quando um ou ambos os parâmetros são <see langword="null" />, retorna um <see langword="null" /> valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corresponde do [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `DATEDIFF` função; usando `year` especificar o tipo de tempo limite ultrapassado. Para saber mais sobre isso [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] funcionam, consulte [DATEDIFF](http://go.microsoft.com/fwlink/?LinkId=114010) nos Manuais Online do Microsoft SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se uma cadeia de caracteres específica corresponde a um padrão especificado. Atualmente, esse método tem suporte apenas em consultas LINQ to SQL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` funcionalidade não pode ser exposta por meio de tradução do existente common language runtime (CLR) e as construções do .NET Framework e não tem suporte fora de um LINQ para contexto SQL. O uso desse método fora do LINQ to SQL sempre vai lançar uma exceção do tipo <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static bool Like (string matchExpression, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Like(string matchExpression, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.Like(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchExpression" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="matchExpression">A cadeia de caracteres na qual uma correspondência será pesquisada.</param>
        <param name="pattern">O padrão, que pode incluir caracteres curinga, para que corresponda <c>matchExpression</c>.</param>
        <summary>Determina se uma cadeia de caracteres específica corresponde a um padrão especificado. Atualmente, esse método tem suporte apenas em consultas LINQ to SQL.</summary>
        <returns>
          <see langword="true" /> se <paramref name="matchExpression" /> corresponder ao padrão; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` funcionalidade não pode ser exposta por meio de tradução do existente common language runtime (CLR) e as construções do .NET Framework e não tem suporte fora de um LINQ para contexto SQL. O uso desse método fora do LINQ to SQL sempre vai lançar uma exceção do tipo <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static bool Like (string matchExpression, string pattern, char escapeCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Like(string matchExpression, string pattern, char escapeCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.Like(System.String,System.String,System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchExpression" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="escapeCharacter" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="matchExpression">A cadeia de caracteres na qual uma correspondência será pesquisada.</param>
        <param name="pattern">O padrão, que pode incluir caracteres curinga, para que corresponda <c>matchExpression</c>.</param>
        <param name="escapeCharacter">O caractere a ser colocado na frente de um caractere curinga para indicar que ele deve ser interpretado como um caractere normal e não como um caractere curinga.</param>
        <summary>Determina se uma cadeia de caracteres específica corresponde a um padrão especificado. Atualmente, esse método tem suporte apenas em consultas LINQ to SQL.</summary>
        <returns>
          <see langword="true" /> se <paramref name="matchExpression" /> corresponder ao padrão; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` funcionalidade não pode ser exposta por meio de tradução do existente common language runtime (CLR) e as construções do .NET Framework e não tem suporte fora de um LINQ para contexto SQL. O uso desse método fora do LINQ to SQL sempre vai lançar uma exceção do tipo <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
