<Type Name="SqlHelpers" FullName="System.Data.Linq.SqlClient.SqlHelpers">
  <TypeSignature Language="C#" Value="public static class SqlHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.SqlClient.SqlHelpers" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos auxiliares para operações que correspondam aos padrões de cadeia de caracteres.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetStringContainsPattern">
      <MemberSignature Language="C#" Value="public static string GetStringContainsPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringContainsPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</param>
        <param name="escape">O caractere a ser usado para ter caracteres curinga como escape.</param>
        <summary>Cria uma cadeia de caracteres de padrão de pesquisa em que o texto especificado pode ter outro texto antes e após ele.</summary>
        <returns>Uma cadeia de padrão de pesquisa que contém a cadeia de caracteres especificada e o caractere “%” antes e depois dela.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringEndsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringEndsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringEndsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</param>
        <param name="escape">O caractere a ser usado para ter caracteres curinga como escape.</param>
        <summary>Cria uma cadeia de caracteres de padrão de pesquisa em que o texto especificado pode ter outro texto antes, mas não após ele.</summary>
        <returns>Uma cadeia de padrão de pesquisa que contém o caractere “%” seguido pela cadeia de caracteres especificada.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringStartsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringStartsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringStartsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</param>
        <param name="escape">O caractere a ser usado para ter caracteres curinga como escape.</param>
        <summary>Cria uma cadeia de caracteres de padrão de pesquisa em que o texto especificado pode ter outro texto após ele, mas não antes.</summary>
        <returns>Uma cadeia de padrão de pesquisa que contém a cadeia de caracteres especificada, seguida pelo caractere '% s'.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TranslateVBLikePattern">
      <MemberSignature Language="C#" Value="public static string TranslateVBLikePattern (string pattern, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslateVBLikePattern(string pattern, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="pattern">O [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <see langword="Like" /> padrão de pesquisa para converter para um [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] <see langword="LIKE" /> padrão de pesquisa.</param>
        <param name="escape">O caractere a ser usado para escapar caracteres especiais do SQL ou o caractere de escape.</param>
        <summary>Converte um padrão de pesquisa para o [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <see langword="Like" /> operador para um padrão de pesquisa para o [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] <see langword="LIKE" /> operador.</summary>
        <returns>Um padrão de pesquisa para o [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] <see langword="LIKE" /> operador que corresponde à especificada [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] <see langword="Like" /> padrão de pesquisa.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
