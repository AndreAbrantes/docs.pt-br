<Type Name="LocalCertificateSelectionCallback" FullName="System.Net.Security.LocalCertificateSelectionCallback">
  <TypeSignature Language="C#" Value="public delegate System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificateSelectionCallback(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LocalCertificateSelectionCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.LocalCertificateSelectionCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="targetHost" Type="System.String" />
    <Parameter Name="localCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
    <Parameter Name="remoteCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    <Parameter Name="acceptableIssuers" Type="System.String[]" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Um objeto que contém informações de estado para essa validação.</param>
    <param name="targetHost">O servidor host especificado pelo cliente.</param>
    <param name="localCertificates">Uma <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> que contém certificados locais.</param>
    <param name="remoteCertificate">O certificado usado para autenticar a entidade remota.</param>
    <param name="acceptableIssuers">Uma matriz de <see cref="T:System.String" /> de emissores de certificado aceitáveis para a parte remota.</param>
    <summary>Seleciona o certificado SSL (protocolo SSL) local usado para autenticação.</summary>
    <returns>Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> usado para estabelecer uma conexão SSL.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este delegado é usado para construir instâncias de <xref:System.Net.Security.SslStream> classe. O <xref:System.Net.Security.SslStream> classe é usada para ajudar a proteger informações trocadas entre um cliente e servidor. O cliente e o servidor usam esse delegado para selecionar um certificado a ser usado para autenticação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra uma implementação do método para este delegado.  
  
 [!code-cpp[NclSslClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#2)]
 [!code-csharp[NclSslClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#2)]  
  
 O exemplo de código a seguir demonstra como criar uma instância deste delegado.  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
