<Type Name="NetDataContractSerializer" FullName="System.Runtime.Serialization.NetDataContractSerializer">
  <TypeSignature Language="C#" Value="public sealed class NetDataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetDataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer implements class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.NetDataContractSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Serializa e desserializa uma instância de um tipo em um fluxo XML ou documento usando os tipos do .NET Framework fornecidos. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.NetDataContractSerializer> difere de <xref:System.Runtime.Serialization.DataContractSerializer> em um aspecto importante: o <xref:System.Runtime.Serialization.NetDataContractSerializer> inclui informações de tipo CLR em XML serializada, enquanto o <xref:System.Runtime.Serialization.DataContractSerializer> não. Portanto, o <xref:System.Runtime.Serialization.NetDataContractSerializer> pode ser usado somente se tanto a serialização e desserialização de extremidades compartilham os mesmos tipos CLR.  
  
 O serializador pode serializar tipos para o qual o <xref:System.Runtime.Serialization.DataContractAttribute> ou <xref:System.SerializableAttribute> atributo foi aplicado. Ele também serializa os tipos que implementam <xref:System.Runtime.Serialization.ISerializable>.  
  
 Para obter mais informações sobre serialização, consulte [serialização e desserialização](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).  
  
## <a name="incompatibility-with-xelement"></a>Incompatibilidade de XElement  
 O <xref:System.Xml.Linq.XElement> classe é usada para gravar o XML. No entanto, o `NetDataContractSerializer` não é possível serializar uma instância do tipo. O código a seguir, portanto, falhará com a exceção: "tipo 'XML' não tem suporte no nível superior NetDataContractSerializer porque ele é IXmlSerializable com raiz `IsAny` = `true` e deve gravar todo o seu conteúdo, inclusive o elemento raiz."  
  
 [!code-csharp[NetDataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#15)]
 [!code-vb[NetDataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#15)]  
  
 No entanto, se um `XElement` é usado como o tipo de um campo ou propriedade de uma classe, os dados contidos no campo ou propriedade é serializada. Isso ocorre porque como um membro de uma classe, os dados não são o nível superior da classe.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra um tipo chamado `Person` que é serializado pelo <xref:System.Runtime.Serialization.NetDataContractSerializer>. O <xref:System.Runtime.Serialization.DataContractAttribute> atributo é aplicado à classe e o <xref:System.Runtime.Serialization.DataMemberAttribute> é aplicado aos membros (incluindo um membro privado) para instruir o <xref:System.Runtime.Serialization.NetDataContractSerializer> qual serializar.  
  
 [!code-csharp[NetDataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#0)]
 [!code-vb[NetDataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[NetDataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#8)]
 [!code-vb[NetDataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém dados de contexto.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com os dados de contexto de fluxo fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.StreamingContext> classe permite que você transmitir dados de contexto de usuário específico a ser usado ao ler e gravar objetos.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer> usando um <xref:System.Runtime.Serialization.StreamingContext>.  
  
 [!code-csharp[NetDataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#9)]
 [!code-vb[NetDataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootName">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <param name="rootNamespace">O namespace do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com o elemento raiz XML e o namespace fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.DataContractSerializer> especificando o XML raiz elemento e namespace esperará ao desserializar um objeto.  
  
 [!code-csharp[NetDataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#10)]
 [!code-vb[NetDataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <param name="rootNamespace">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com dois parâmetros de tipo <see cref="T:System.Xml.XmlDictionaryString" /> que contém o elemento raiz e o namespace usado para especificar o conteúdo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XmlDictionaryString> pode ser usado para otimizar o desempenho quando o mesmo conjunto de cadeias de caracteres é usado em instâncias de objeto.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.DataContractSerializer> especificando o XML raiz elemento e namespace (como <xref:System.Xml.XmlDictionaryString> argumentos) esperará ao desserializar um objeto.  
  
 [!code-csharp[NetDataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#11)]
 [!code-vb[NetDataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém dados de contexto.</param>
        <param name="maxItemsInObjectGraph">O número máximo de itens no gráfico para serializar ou desserializar.</param>
        <param name="ignoreExtensionDataObject">
          <see langword="true" />para ignorar os dados fornecidos por uma extensão do tipo; Caso contrário, <see langword="false" />.</param>
        <param name="assemblyFormat">Um <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> valor de enumeração que especifica um método para localizar e carregar assemblies.</param>
        <param name="surrogateSelector">Uma implementação de <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com os dados de contexto fornecido; Além disso, especifica o número máximo de itens no objeto a ser serializado e parâmetros para especificar se os dados extras serão ignorados, o método de carregamento de assembly e um seletor de substitutos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `ignoreExtensionDataObject` parâmetro é usado quando o <xref:System.Runtime.Serialization.IExtensibleDataObject> interface é implementada na classe que está sendo serializado ou desserializado.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer> usando um <xref:System.Runtime.Serialization.StreamingContext>. O código também define o `ignoreExtensionDataObject`e especifica uma implementação do `ISurrogateSelector` interface para lidar com para auxiliar o serializador ao selecionar um substituto (para desserializar tipos herdados).  
  
 [!code-csharp[NetDataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#12)]
 [!code-vb[NetDataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" />valor é menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <param name="rootNamespace">O namespace do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
        <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém dados de contexto.</param>
        <param name="maxItemsInObjectGraph">O número máximo de itens no gráfico para serializar ou desserializar.</param>
        <param name="ignoreExtensionDataObject">
          <see langword="true" />para ignorar os dados fornecidos por uma extensão do tipo; Caso contrário, <see langword="false" />.</param>
        <param name="assemblyFormat">Um <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> valor de enumeração que especifica um método para localizar e carregar assemblies.</param>
        <param name="surrogateSelector">Uma implementação de <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> para lidar com o tipo herdado.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com o nome de raiz e dados de contexto fornecido e o namespace; Além disso, especifica o número máximo de itens no objeto a ser serializado e parâmetros para especificar se os dados extras serão ignorados, o método de carregamento de assembly e um seletor de substitutos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `ignoreExtensionDataObject` parâmetro é usado quando o <xref:System.Runtime.Serialization.IExtensibleDataObject> interface é implementada na classe que está sendo serializado ou desserializado.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer> especificando o nome do elemento XML e o namespace para esperar durante a desserialização. O código também define o `ignoreExtensionDataObject`e especifica uma implementação do <xref:System.Runtime.Serialization.ISurrogateSelector> interface para lidar com para auxiliar o serializador ao selecionar um substituto (para desserializar tipos herdados).  
  
 [!code-csharp[NetDataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#13)]
 [!code-vb[NetDataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" />valor é menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o elemento raiz do conteúdo.</param>
        <param name="rootNamespace">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento raiz.</param>
        <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém dados de contexto.</param>
        <param name="maxItemsInObjectGraph">O número máximo de itens no gráfico para serializar ou desserializar.</param>
        <param name="ignoreExtensionDataObject">
          <see langword="true" />para ignorar os dados fornecidos por uma extensão do tipo; Caso contrário, <see langword="false" />.</param>
        <param name="assemblyFormat">Um <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> valor de enumeração que especifica um método para localizar e carregar assemblies.</param>
        <param name="surrogateSelector">Uma implementação de <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> para lidar com o tipo herdado.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> classe com os dados de contexto fornecido e o nome raiz e o namespace (como <see cref="T:System.Xml.XmlDictionaryString" /> parâmetros); Além disso, especifica o número máximo de itens no objeto a ser serializado e parâmetros para especificar se os dados extras encontrados são ignorados, método de carregamento de assembly e um seletor de substitutos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XmlDictionaryString> pode ser usado para otimizar o desempenho quando o mesmo conjunto de cadeias de caracteres é usado em instâncias de objeto.  
  
 O `ignoreExtensionDataObject` parâmetro é usado quando o <xref:System.Runtime.Serialization.IExtensibleDataObject> interface é implementada na classe que está sendo serializado ou desserializado.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer> especificando o namespace e o nome do elemento XML (como <xref:System.Xml.XmlDictionaryString> argumentos) para esperar durante a desserialização. O código também define o `ignoreExtensionDataObject`e especifica uma implementação do <xref:System.Runtime.Serialization.ISurrogateSelector> interface para lidar com para auxiliar o serializador ao selecionar um substituto (para desserializar tipos herdados).  
  
 [!code-csharp[NetDataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#14)]
 [!code-vb[NetDataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" />valor é menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que especifica um método para localizar e carregar assemblies.</summary>
        <value>Um <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> valor de enumeração que especifica um método para localizar e carregar assemblies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um `AssemblyFormat` instância pode ter dois estilos: <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> ou <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>. Especificando `Simple` permite tipos em uma versão a serem carregados e desserializado de uma instância serializada de uma versão diferente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor que está sendo definido não corresponde a nenhum do <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> valores.</exception>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que carregamento de classe de controles.</summary>
        <value>O <see cref="T:System.Runtime.Serialization.SerializationBinder" /> usado com o formatador atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante a serialização, um formatador transmite as informações necessárias para criar uma instância de um objeto do tipo correto e a versão. Geralmente, essas informações incluem o nome de tipo completo e o nome de assembly do objeto. O nome do assembly inclui o nome, versão e hash de nome forte do assembly. Por padrão, a desserialização usa essas informações para criar uma instância de um objeto idêntico (com exceção do carregamento de assembly restringido pela política de segurança). Alguns usuários precisam para controlar qual classe para carregar, ou porque a classe foi movido entre assemblies ou uma versão diferente da classe é necessária no servidor e no cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto que permite a passagem de dados de contexto que é útil ao serializar ou desserializar.</summary>
        <value>Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém os dados de contexto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Um <see cref="T:System.IO.Stream" /> que contém o XML a ser desserializado.</param>
        <summary>Desserializa um documento XML ou fluxo em um objeto.</summary>
        <returns>O objeto desserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método assume que o formato padrão é texto XML.  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que especifica se os dados fornecidos por uma extensão do objeto são ignorados.</summary>
        <value>
          <see langword="true" />para ignorar os dados fornecidos por uma extensão do tipo; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao implementar o <xref:System.Runtime.Serialization.IExtensibleDataObject>, dados de uma versão futura de um tipo podem ser armazenados pelo <xref:System.Runtime.Serialization.ExtensionDataObject>. Durante uma viagem de ida e (em que um objeto é desserializado, alterados e serializado novamente), os dados extras são armazenados e serializados novamente. Para obter mais informações, consulte [serialização e desserialização](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se o leitor está posicionado em um objeto que pode ser desserializado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso é equivalente a usar o `ReadObject` método o `IFormatter` interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que contém o XML para ler.</param>
        <summary>Determina se o <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado em um objeto que pode ser desserializado usando o leitor especificado.</summary>
        <returns>
          <see langword="true" />, se o leitor é o elemento de início do fluxo para ler; Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determina se ela pode ler um objeto examinando o nome e o namespace do elemento XML que o leitor é posicionado na e comparando os valores para nome esperado e namespace. O nome esperado e o namespace podem ser definidos com o seguinte: o contrato de dados nome e namespace do tipo passado para o construtor, ou o `rootName` e `rootNamespace` valores passados para o construtor (se houver).  
  
 Você pode definir o `rootName` e `rootNamespace` nos seguintes construtores: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="reader" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que contém o XML para ler.</param>
        <summary>Determina se o <see cref="T:System.Xml.XmlReader" /> está posicionado em um objeto que pode ser desserializado usando o leitor especificado.</summary>
        <returns>
          <see langword="true" />Se o leitor é o elemento de início do fluxo para ler; Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="reader" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número máximo de itens permitidos no objeto a ser serializado.</summary>
        <value>O número máximo de itens permitidos no objeto. O padrão é <see cref="F:System.Int32.MaxValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre cotas de configuração, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lê o fluxo XML ou o documento e retorna o objeto desserializado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML ou o documento.</param>
        <summary>Lê o fluxo XML ou um documento com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado.</summary>
        <returns>O objeto desserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="reader" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML ou o documento.</param>
        <param name="verifyObjectName">
          <see langword="true" />Para verificar se o nome do elemento XML e o namespace delimitador correspondem ao nome raiz e namespace raiz usado para construir o serializador; <see langword="false" /> para ignorar a verificação.</param>
        <summary>Lê o fluxo XML ou um documento com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado; também verifica se os dados do objeto está em conformidade com o nome e o namespace usado para criar o serializador.</summary>
        <returns>O objeto desserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `verifyObjectName` parâmetro determina se ela pode ler um objeto examinando o nome e o namespace do elemento XML que o leitor é posicionado na e comparando os valores para nome esperado e namespace. O nome esperado e o namespace podem ser definidos com o seguinte: o contrato de dados nome e namespace do tipo passado para o construtor, ou o `rootName` e `rootNamespace` valores passados para o construtor (se houver).  
  
 Você pode definir o `rootName` e `rootNamespace` nos seguintes construtores: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="reader" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML ou o documento.</param>
        <param name="verifyObjectName">
          <see langword="true" />Para verificar se o nome do elemento XML e o namespace delimitador correspondem ao nome raiz e namespace raiz usado para construir o serializador; <see langword="false" /> para ignorar a verificação.</param>
        <summary>Lê o fluxo XML ou um documento com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado; também verifica se os dados do objeto está em conformidade com o nome e o namespace usado para criar o serializador.</summary>
        <returns>O objeto desserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `verifyObjectName` parâmetro determina se ela pode ler um objeto examinando o nome e o namespace do elemento XML que o leitor é posicionado na e comparando os valores para nome esperado e namespace. O nome esperado e o namespace podem ser definidos com o seguinte: o contrato de dados nome e namespace do tipo passado para o construtor, ou o `rootName` e `rootNamespace` valores passados para o construtor (se houver).  
  
 Você pode definir o `rootName` e `rootNamespace` nos seguintes construtores: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.  
  
> [!IMPORTANT]
>  Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="reader" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">O <see cref="T:System.IO.Stream" /> para serializar com.</param>
        <param name="graph">O objeto a ser serializado. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
        <summary>Serializa o gráfico do objeto especificado usando o gravador especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que auxilia o formatador ao selecionar um substituto de serialização.</summary>
        <value>Um <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> para selecionar um substituto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre o <xref:System.Runtime.Serialization.IDataContractSurrogate>, consulte [substitutos de contrato de dados](~/docs/framework/wcf/extending/data-contract-surrogates.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Grava o fechamento do elemento XML usando o gravador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> métodos são usados para gravar a serialização completa usando o padrão: início de gravação, gravar o conteúdo e gravar final. Os três métodos também são chamados pelo <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML ou fluxo.</param>
        <summary>Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um objeto para serializar uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer>e uma instância do <xref:System.Xml.XmlDictionaryWriter> classe.  O exemplo usa o <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> métodos para gravar os dados de objeto no documento XML.  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="writer" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML ou fluxo.</param>
        <summary>Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="writer" /> é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML ou fluxo.</param>
        <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
        <summary>Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atributo não foi aplicado ao tipo.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">excedido o número máximo de objeto a ser serializado. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Grava o conteúdo XML usando o gravador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> métodos são usados para gravar a serialização completa usando o padrão: início de gravação, gravar o conteúdo e gravar final. Os três métodos também são chamados pelo <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o conteúdo XML.</param>
        <param name="graph">O objeto a ser serializado. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
        <summary>Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um objeto para serializar uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer>e uma instância do <xref:System.Xml.XmlDictionaryWriter> classe.  O exemplo usa o <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> métodos para gravar os dados de objeto no documento XML.  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atributo não foi aplicado ao tipo.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">excedido o número máximo de objeto a ser serializado. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o conteúdo XML.</param>
        <param name="graph">O objeto a ser serializado. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
        <summary>Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atributo não foi aplicado ao tipo.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">excedido o número máximo de objeto a ser serializado. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento XML.</param>
        <param name="graph">O objeto a ser serializado. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
        <summary>Grava a abertura XML elemento usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um objeto para serializar uma instância do <xref:System.Runtime.Serialization.NetDataContractSerializer>e uma instância do <xref:System.Xml.XmlDictionaryWriter> classe.  O exemplo usa o <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, e <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> métodos para gravar os dados de objeto no documento XML.  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atributo não foi aplicado ao tipo.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">excedido o número máximo de objeto a ser serializado. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento XML.</param>
        <param name="graph">O objeto a ser serializado. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
        <summary>Grava a abertura XML elemento usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> atributo não foi aplicado ao tipo.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">excedido o número máximo de objeto a ser serializado. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
