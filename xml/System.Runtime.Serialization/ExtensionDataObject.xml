<Type Name="ExtensionDataObject" FullName="System.Runtime.Serialization.ExtensionDataObject">
  <TypeSignature Language="C#" Value="public sealed class ExtensionDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExtensionDataObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ExtensionDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Armazena dados de um contrato de dados com controle de versão que foi estendido adicionando novos membros.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.ExtensionDataObject> é a estrutura que armazena dados adicionais encontrados pelo <xref:System.Runtime.Serialization.XmlObjectSerializer> durante operações de desserialização. A estrutura é usada pela serialização para gravar os dados extras na instância serializada. A estrutura é retornada pelo <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> propriedade o <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.  
  
   
  
## Examples  
 O código a seguir serializa uma instância de um tipo (`PersonVersion2`) que é a segunda versão do tipo serializável (`Person`). A segunda versão contém dados extras (`ID` campo) que não está presente na primeira versão. O código, em seguida, desserializa o documento XML em um `Person` do objeto e, em seguida, reserializes imediatamente o objeto, incluindo os dados extras. Por fim, o código desserializa o novo XML em um `PersonVersion2` do objeto e grava os dados completos no console, provando que os dados fez uma viagem de ida e de e para uma versão mais antiga do tipo. Observe que o <xref:System.Runtime.Serialization.DataContractAttribute> atributo deve ser aplicado com o <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> e <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propriedades definidas para o mesmo nome e namespace da classe original.  
  
 [!code-csharp[IUnknownSerializationData#0](~/samples/snippets/csharp/VS_Snippets_CFX/iunknownserializationdata/cs/iunknownserialization.cs#0)]
 [!code-vb[IUnknownSerializationData#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/iunknownserializationdata/vb/iunknownserialization.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
