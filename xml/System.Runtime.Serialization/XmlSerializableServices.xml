<Type Name="XmlSerializableServices" FullName="System.Runtime.Serialization.XmlSerializableServices">
  <TypeSignature Language="C#" Value="public static class XmlSerializableServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XmlSerializableServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlSerializableServices" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém métodos para leitura e gravação de XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usando [!INCLUDE[indigo1](~/includes/indigo1-md.md)], você pode gerar tipos CLR que representa os contratos de dados de esquemas XML. Em certos casos, ao fazer isso, os esquemas podem ser não todos representados como contratos de dados. Nesse caso, você pode usar o <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> propriedade o <xref:System.Runtime.Serialization.ImportOptions> classe.  Definir a propriedade como `true` Especifica que esses tipos são importados como XML tipos que implementam o <xref:System.Xml.Serialization.IXmlSerializable> interface. No processo, os tipos gerados podem armazenar qualquer coisa, mas eles são lidas e gravados como XML pelo serializador.  
  
 O <xref:System.Runtime.Serialization.XmlSerializableServices> é uma classe abstrata auxiliar que contém código que é usado pelo gerado <xref:System.Xml.Serialization.IXmlSerializable> tipos para ler e gravar o XML. Ele também contém o código para a geração de esquema para os tipos gerados. Observe que os detalhes sobre os esquemas não são armazenados. Somente o nome é armazenado no tipo gerado. Essa classe gera um esquema padrão que representa o tipo de esquema XML `anyType` com o nome do tipo apropriado de esquema como o nome do contrato.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDefaultSchema">
      <MemberSignature Language="C#" Value="public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDefaultSchema(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeQName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeQName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para adicionar o tipo de esquema gerado para.</param>
        <param name="typeQName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome do tipo para atribuir o esquema.</param>
        <summary>Gera um tipo de esquema padrão considerando o nome do tipo especificado e o adiciona ao conjunto de esquema especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método contém código para gerar um tipo de esquema para um tipo de contrato de dados com o nome do tipo especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O argumento <paramref name="schemas" /> ou <paramref name="typeQName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNodes">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode[] ReadNodes(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Um <see cref="T:System.Xml.XmlReader" /> usado para leitura.</param>
        <summary>Lê um conjunto de nós XML do leitor especificado e retorna o resultado.</summary>
        <returns>Uma matriz do tipo <see cref="T:System.Xml.XmlNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método lê todas as XML contidos no nó que o leitor está posicionado em quando esta chamada é feita. Isso possibilita a leitura e armazenar todos os XML como uma matriz de <xref:System.Xml.XmlNode> objetos. Esse é um método auxiliar usado pelos tipos que implementam <xref:System.Xml.Serialization.IXmlSerializable> e que usam o <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O argumento <paramref name="xmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Durante a leitura, um <see langword="null" /> nó foi encontrado.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodes">
      <MemberSignature Language="C#" Value="public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteNodes(class System.Xml.XmlWriter xmlWriter, class System.Xml.XmlNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="nodes" Type="System.Xml.XmlNode[]" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravação.</param>
        <param name="nodes">Uma matriz do tipo <see cref="T:System.Xml.XmlNode" /> para gravação.</param>
        <summary>Grava os nós fornecidos usando o gravador especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O argumento <paramref name="xmlWriter" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
