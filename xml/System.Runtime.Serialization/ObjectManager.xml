<Type Name="ObjectManager" FullName="System.Runtime.Serialization.ObjectManager">
  <TypeSignature Language="C#" Value="public class ObjectManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ObjectManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ObjectManager" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Monitora a desserialização de objetos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante a desserialização, o <xref:System.Runtime.Serialization.Formatter> consultas a <xref:System.Runtime.Serialization.ObjectManager> para determinar se uma referência a um objeto no fluxo serializado se refere a um objeto que já tenha sido desserializado (uma referência com versões anteriores), ou a um objeto que ainda não tiver sido desserializado (uma referência direta). Se a referência no fluxo serializado é uma referência de encaminhamento, o <xref:System.Runtime.Serialization.Formatter> pode registrar um ajuste com a <xref:System.Runtime.Serialization.ObjectManager>. Se a referência no fluxo serializado é uma referência com versões anteriores, o <xref:System.Runtime.Serialization.Formatter> imediatamente conclui a referência. Correção refere-se ao processo de finalização referências de objeto ainda não foi concluídas durante o processo de desserialização do objeto. Depois que o objeto necessário tiver sido desserializado, o <xref:System.Runtime.Serialization.ObjectManager> concluirá a referência.  
  
 O <xref:System.Runtime.Serialization.ObjectManager> segue um conjunto de regras que determinam a ordem de correção. Todos os objetos que implementam <xref:System.Runtime.Serialization.ISerializable> ou tem um <xref:System.Runtime.Serialization.ISerializationSurrogate> pode esperar para que todos os objetos que eles transmitido por meio de <xref:System.Runtime.Serialization.SerializationInfo> disponível quando a árvore de objeto é desserializada. No entanto, um objeto pai não é possível supor que todos os seus objetos filho, serão totalmente concluídos quando ele é totalmente desserializado. Todos os objetos filho estará presentes, mas nem todos os objetos de neto necessariamente estará presentes. Se precisar executar determinadas ações que dependem de execução de código em seus objetos filho de um objeto, ele pode atrasar a essas ações, implemente o <xref:System.Runtime.Serialization.IDeserializationCallback> de interface e execute o código somente quando ele é chamado novamente na interface em questão.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Runtime.Serialization.ObjectManager> classe para percorrer um gráfico de objeto, atravessando apenas uma vez para cada objeto.  
  
 [!code-csharp[ObjectManager#1](~/samples/snippets/csharp/VS_Snippets_Misc/ObjectManager/CS/ObjectManager.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">O seletor de substitutos para usar. O <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> determina o substituto correto a ser usada ao desserializar objetos de um determinado tipo. Em tempo de desserialização, o seletor de substitutos cria uma nova instância do objeto de informações transmitidas em fluxo.</param>
        <param name="context">O contexto de streaming. O <see cref="T:System.Runtime.Serialization.StreamingContext" /> não é usado pelo <see langword="ObjectManager" />, mas é passado como um parâmetro para objetos que implementam <see cref="T:System.Runtime.Serialization.ISerializable" /> ou ter um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Esses objetos podem executar ações específicas dependendo da fonte de informações a ser desserializado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para fornecer serviços de serialização. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DoFixups">
      <MemberSignature Language="C#" Value="public virtual void DoFixups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoFixups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.DoFixups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa todas as correções gravadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As correções são executadas por qualquer substituto apropriado, o próprio objeto (se ele implementa <xref:System.Runtime.Serialization.ISerializable>), ou a implementação padrão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Uma correção não foi concluída com êxito.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectID">A ID do objeto solicitado.</param>
        <summary>Retorna o objeto com a ID do objeto especificado.</summary>
        <returns>O objeto com a ID do objeto especificado se ele foi armazenado anteriormente ou <see langword="null" /> se esse objeto não tiver sido registrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto pode ser registrado e emitiu uma ID de objeto com uma chamada para o <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectID" /> parâmetro é menor ou igual a zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDeserializationEvent">
      <MemberSignature Language="C#" Value="public virtual void RaiseDeserializationEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseDeserializationEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gera o evento de desserialização em qualquer objeto registrado que implementa <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnDeserializingEvent">
      <MemberSignature Language="C#" Value="public void RaiseOnDeserializingEvent (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseOnDeserializingEvent(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">A instância do tipo que contém o método a ser invocado.</param>
        <summary>Invoca o método marcado com o <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32 index, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">A ID da matriz usada para registrar um ajuste.</param>
        <param name="index">O índice em <c>arrayFixup</c> que um ajuste é solicitado para.</param>
        <param name="objectRequired">A ID do objeto que o elemento da matriz atual apontará após a correção.</param>
        <summary>Registra uma correção para um elemento em uma matriz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A correção é para um elemento especificado de uma matriz especificada. O valor usado durante o processo de correção é fornecido no `objectRequired` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="index" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32[] indices, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="indices" Type="System.Int32[]" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">A ID da matriz usada para registrar um ajuste.</param>
        <param name="indices">Os índices dentro da matriz multidimensional que um ajuste é solicitado para.</param>
        <param name="objectRequired">A ID do objeto de elementos da matriz apontará para após a correção.</param>
        <summary>Correções de registros para os elementos especificados em uma matriz, para ser executado posteriormente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A correção é para os elementos especificados de uma matriz especificada. O valor usado durante o processo de correção é fornecido no `objectRequired` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="indices" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordDelayedFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordDelayedFixup(int64 objectToBeFixed, string memberName, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">A ID do objeto que precisa a referência ao <c>objectRequired</c>.</param>
        <param name="memberName">O nome do membro <c>objectToBeFixed</c> onde a correção será executada.</param>
        <param name="objectRequired">A ID do objeto exigido pelo <c>objectToBeFixed</c>.</param>
        <summary>Registra uma correção para um membro de objeto a ser executado posteriormente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A correção é um membro especificado de um objeto especificado. O valor a ser usado durante o processo de correção é fornecido como o `objectRequired` argumento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectToBeFixed" />ou <paramref name="objectRequired" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="memberName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordFixup(int64 objectToBeFixed, class System.Reflection.MemberInfo member, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">A ID do objeto que precisa de referência para o <c>objectRequired</c> objeto.</param>
        <param name="member">O membro de <c>objectToBeFixed</c> onde a correção será executada.</param>
        <param name="objectRequired">A ID do objeto exigido pelo <c>objectToBeFixed</c>.</param>
        <summary>Registra uma correção para um membro de um objeto a ser executado posteriormente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A correção é um membro especificado de um objeto especificado. O valor a ser usado durante o processo de correção é fornecido como o `objectRequired` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectToBeFixed" /> ou <paramref name="objectRequired" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="member" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public virtual void RegisterObject (object obj, long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObject(object obj, int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser registrado.</param>
        <param name="objectID">A ID do objeto para registrar.</param>
        <summary>Registra um objeto como ele é desserializado, associá-lo com <paramref name="objectID" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager>mantém informações sobre o objeto e sua ID. Posteriormente, durante a desserialização, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> pode ser usado para determinar se uma ID de objeto em particular já foi desserializada, ou se é uma referência direta a um objeto que ainda não tiver sido desserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectID" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser registrado.</param>
        <param name="objectID">A ID do objeto para registrar.</param>
        <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tem um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>informações</c> será concluída com todas as informações necessárias de correção e, em seguida, passado para o objeto necessário quando esse objeto é concluído.</param>
        <summary>Registra um objeto como ele é desserializado, associá-lo com <paramref name="objectID" />, gravação e o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado com ele.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager>mantém as informações sobre o objeto e sua ID. Durante a desserialização, você pode usar <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> para descobrir se um determinado objeto ID já foi desserializado, ou se é uma referência direta a um objeto que ainda não tiver sido desserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectID" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser registrado.</param>
        <param name="objectID">A ID do objeto para registrar.</param>
        <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tem um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>informações</c> será concluída com todas as informações necessárias de correção e, em seguida, passado para o objeto necessário quando esse objeto é concluído.</param>
        <param name="idOfContainingObj">A ID do objeto que contém <c>obj</c>. Esse parâmetro é necessário somente se <c>obj</c> é um tipo de valor.</param>
        <param name="member">O campo no objeto contêiner onde <c>obj</c> existe. Este parâmetro somente se não tem significado <c>obj</c> é um tipo de valor.</param>
        <summary>Registra um membro de um objeto como ele é desserializado, associá-lo com <paramref name="objectID" />e registrar o <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você precisa fornecer o `member` e `idOfContainingObj` parâmetros se `obj` é um <xref:System.ValueType> por causa da forma correções são executadas em <xref:System.ValueType> objetos. O espaço para armazenar as informações para um <xref:System.ValueType> é alocado em linha com seu objeto contentor. No entanto, quando o <xref:System.ValueType> é convertido para ser registrado com o <xref:System.Runtime.Serialization.ObjectManager>, ela perde a conexão com seu objeto contentor. Para garantir que as correções ocorrerem na instância do <xref:System.ValueType> armazenado no objeto de recipiente e não na instância do box, o <xref:System.Runtime.Serialization.ObjectManager> retém algumas informações adicionais.  
  
 <xref:System.Runtime.Serialization.ObjectManager>mantém informações sobre o objeto e sua ID. Posteriormente, durante a desserialização, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> pode ser usado para descobrir se uma ID de objeto em particular já foi desserializada, ou ainda se não é uma referência direta a um objeto desserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectID" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />, ou <paramref name="member" /> não é um <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> não é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member, int32[] arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="arrayIndex" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto a ser registrado.</param>
        <param name="objectID">A ID do objeto para registrar.</param>
        <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tem um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>informações</c> será concluída com todas as informações necessárias de correção e, em seguida, passado para o objeto necessário quando esse objeto é concluído.</param>
        <param name="idOfContainingObj">A ID do objeto que contém <c>obj</c>. Esse parâmetro é necessário somente se <c>obj</c> é um tipo de valor.</param>
        <param name="member">O campo no objeto contêiner onde <c>obj</c> existe. Este parâmetro somente se não tem significado <c>obj</c> é um tipo de valor.</param>
        <param name="arrayIndex">Se <c>obj</c> é um <see cref="T:System.ValueType" /> e um membro de uma matriz, <c>arrayIndex</c> contém o índice na matriz onde <c>obj</c> existe. <c>arrayIndex</c> será ignorado se <c>obj</c> não é tanto uma <see cref="T:System.ValueType" /> e um membro de uma matriz.</param>
        <summary>Registra um membro de uma matriz contido em um objeto enquanto ele é desserializado, associá-lo com <paramref name="objectID" />e registrar o <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você precisa fornecer o `member` e `idOfContainingObj` parâmetros se `obj` é um <xref:System.ValueType> por causa da forma correções são executadas em <xref:System.ValueType> objetos. O espaço para armazenar as informações para um <xref:System.ValueType> é alocado em linha com seu objeto contentor. No entanto, quando o <xref:System.ValueType> é convertido para ser registrado com o <xref:System.Runtime.Serialization.ObjectManager>, ela perde a conexão com seu objeto contentor. Para garantir que as correções ocorrerem na instância do <xref:System.ValueType> armazenado no objeto de recipiente e não na instância do box, o <xref:System.Runtime.Serialization.ObjectManager> retém algumas informações adicionais.  
  
 <xref:System.Runtime.Serialization.ObjectManager>mantém informações sobre o objeto e sua ID. Posteriormente, durante a desserialização, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> pode ser usado para descobrir se uma ID de objeto em particular já foi desserializada, ou ainda se não é uma referência direta a um objeto desserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="objectID" /> parâmetro é menor ou igual a zero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />, ou <paramref name="member" /> não é um <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> não <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
