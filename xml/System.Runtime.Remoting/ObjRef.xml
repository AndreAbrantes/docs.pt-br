<Type Name="ObjRef" FullName="System.Runtime.Remoting.ObjRef">
  <TypeSignature Language="C#" Value="public class ObjRef : System.Runtime.Serialization.IObjectReference, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ObjRef extends System.Object implements class System.Runtime.Serialization.IObjectReference, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.ObjRef" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IObjectReference</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Armazena todas as informações relevantes necessárias para gerar um proxy a fim de se comunicar com um objeto remoto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Runtime.Remoting.ObjRef> é uma representação serializável de um objeto que estende <xref:System.MarshalByRefObject> (MBR). Um <xref:System.Runtime.Remoting.ObjRef> é usado para transferir uma referência de objeto em um <xref:System.AppDomain> limite. Criando um <xref:System.Runtime.Remoting.ObjRef> para um objeto é conhecido como marshaling. Você pode criar um <xref:System.Runtime.Remoting.ObjRef> (empacotar um <xref:System.MarshalByRefObject>) seja explicitamente, registrando o MBR do objeto com a infraestrutura de comunicação remota (consulte <xref:System.Runtime.Remoting.RemotingConfiguration> e <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType>), ou implicitamente, passando um objeto MBR como um parâmetro ao chamar um objeto remoto. Comunicação remota usa <xref:System.Runtime.Remoting.ObjRef> objetos para armazenar e transmitir as informações relevantes sobre o <xref:System.MarshalByRefObject> sendo controlado remotamente.  
  
 O <xref:System.Runtime.Remoting.ObjRef> contém informações que descrevem o <xref:System.Type> e a classe do objeto sendo empacotado, o local exato e relacionadas à comunicação de informações sobre como acessar a subdivisão de comunicação remota em que o objeto está localizado.  
  
 Depois de implementar uma classe <xref:System.MarshalByRefObject> é empacotado, o <xref:System.Runtime.Remoting.ObjRef> que representa transferência por meio de um canal em outro domínio de aplicativo, possivelmente em outro processo ou computador. Quando o <xref:System.Runtime.Remoting.ObjRef> é desserializado (consulte [XML e serialização SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md)) no domínio de aplicativo de destino, é analisado para criar um proxy transparente para o objeto MBR remoto. Essa operação é conhecida como unmarshaling.  
  
 Um proxy transparente é um objeto que fornece a ilusão de que o objeto real reside no espaço do cliente. Ele realiza isso encaminhando chamadas feitas nele para o objeto real usando a infraestrutura de comunicação remota. O proxy transparente é hospedada por uma instância de uma classe gerenciada do tempo de execução do tipo <xref:System.Runtime.Remoting.Proxies.RealProxy>. O <xref:System.Runtime.Remoting.Proxies.RealProxy> implementa uma parte da funcionalidade necessária para encaminhar as operações do proxy transparente.  
  
 Um objeto de proxy pode ser usado independentemente de qualquer subdivisões de comunicação remota em um <xref:System.AppDomain>. Aplicativos não precisam distinguir entre referências de proxy e referências de objeto. No entanto, provedores de serviços de lidar com problemas, como a ativação, gerenciamento de vida útil e transações precisam verificar essas diferenças.  
  
 Essa classe faz uma demanda de link e uma demanda de herança no nível de classe. Um <xref:System.Security.SecurityException> é gerada quando o chamador imediato ou classe derivada não tem permissão de infraestrutura. Para obter detalhes sobre as exigências de segurança, consulte [demandas de Link](~/docs/framework/misc/link-demands.md) e [demandas de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso de um personalizado <xref:System.Runtime.Remoting.ObjRef>. Para exibir o código de ativação que testa personalizado <xref:System.Runtime.Remoting.ObjRef>, consulte o exemplo para o <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> método.  
  
 [!code-cpp[CreateObjRef2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#1)]
 [!code-vb[CreateObjRef2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para a operação com código de infraestrutura. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Valor de permissão:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Remoting.ObjRef" /> com valores padrão.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjRef (MarshalByRefObject o, Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.MarshalByRefObject o, class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="o" Type="System.MarshalByRefObject" />
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">O objeto que o novo <see cref="T:System.Runtime.Remoting.ObjRef" /> fará referência a instância.</param>
        <param name="requestedType">O <see cref="T:System.Type" /> do objeto que o novo <see cref="T:System.Runtime.Remoting.ObjRef" /> fará referência a instância.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Remoting.ObjRef" /> classe para fazer referência a um especificado <see cref="T:System.MarshalByRefObject" /> de determinado <see cref="T:System.Type" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjRef (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">O objeto que mantém os dados de objeto serializados.</param>
        <param name="context">As informações contextuais sobre a origem ou destino da exceção.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Runtime.Remoting.ObjRef" /> classe a partir de dados serializados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo. Para obter mais informações, consulte <xref:System.Runtime.Serialization.ISerializable>.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IChannelInfo ChannelInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IChannelInfo ChannelInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.ChannelInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IChannelInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Runtime.Remoting.IChannelInfo" /> do <see cref="T:System.Runtime.Remoting.ObjRef" />.</summary>
        <value>A interface <see cref="T:System.Runtime.Remoting.IChannelInfo" /> do <see cref="T:System.Runtime.Remoting.ObjRef" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A propriedade atual contém informações da contribuição canais ativos no processo, quando o <xref:System.Runtime.Remoting.ObjRef> é criado (consulte <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> para obter detalhes sobre a realização de marshaling). Essas informações podem ser usadas pelos canais em outros processos ou domínios de aplicativo para decidir se deve ou não criar um coletor de transporte para se comunicar com o objeto representado pela instância atual.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvoyInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IEnvoyInfo EnvoyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IEnvoyInfo EnvoyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.EnvoyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IEnvoyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> do <see cref="T:System.Runtime.Remoting.ObjRef" />.</summary>
        <value>A interface <see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> do <see cref="T:System.Runtime.Remoting.ObjRef" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A propriedade atual contém uma cadeia serializada de Coletores de mensagem que obtém geradas novamente quando um proxy é criado para representar o objeto. Isso é usado para <xref:System.Runtime.Remoting.Contexts.Context> tipos somente de objeto associado e representa os grupos de objetos que fornecem serviços de tempo de execução como transações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
        <param name="context">As informações contextuais sobre a origem ou destino da serialização.</param>
        <summary>Preenche uma especificado <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar atual <see cref="T:System.Runtime.Remoting.ObjRef" /> instância.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método atual preenche fornecido <xref:System.Runtime.Serialization.SerializationInfo> com todos os dados necessários para recriar o <xref:System.Runtime.Remoting.ObjRef>.  
  
 O método atual é uma implementação de <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="info" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador imediato não tem permissão de formatador de serialização.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para fornecer serviços de serialização. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor de permissão:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public virtual object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">O contexto em que reside o objeto atual.</param>
        <summary>Retorna uma referência para o objeto remoto que o <see cref="T:System.Runtime.Remoting.ObjRef" /> descreve.</summary>
        <returns>Uma referência à instância remota do objeto que o <see cref="T:System.Runtime.Remoting.ObjRef" /> descreve.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método atual é chamado durante a fase de correção de desserialização.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">O chamador imediato não tem permissão de formatador de serialização.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para fornecer serviços de serialização. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor de permissão:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsFromThisAppDomain">
      <MemberSignature Language="C#" Value="public bool IsFromThisAppDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFromThisAppDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.IsFromThisAppDomain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um valor booliano que indica se o atual <see cref="T:System.Runtime.Remoting.ObjRef" /> instância faz referência a um objeto localizado no atual <see cref="T:System.AppDomain" />.</summary>
        <returns>Um valor booliano que indica se o atual <see cref="T:System.Runtime.Remoting.ObjRef" /> instância faz referência a um objeto localizado no atual <see cref="T:System.AppDomain" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromThisProcess">
      <MemberSignature Language="C#" Value="public bool IsFromThisProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFromThisProcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.IsFromThisProcess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um valor booliano que indica se o atual <see cref="T:System.Runtime.Remoting.ObjRef" /> instância faz referência a um objeto localizado no processo atual.</summary>
        <returns>Um valor booliano que indica se o atual <see cref="T:System.Runtime.Remoting.ObjRef" /> instância faz referência a um objeto localizado no processo atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IRemotingTypeInfo TypeInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IRemotingTypeInfo TypeInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.TypeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IRemotingTypeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> para o objeto que o <see cref="T:System.Runtime.Remoting.ObjRef" /> descreve.</summary>
        <value>O <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> para o objeto que o <see cref="T:System.Runtime.Remoting.ObjRef" /> descreve.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.ObjRef.TypeInfo%2A>contém informações detalhadas sobre o tipo de objeto remoto representado pelo atual <xref:System.Runtime.Remoting.ObjRef>. A propriedade atual contém uma lista de interfaces que implementa o tipo, bem como a hierarquia de tipo. Essas informações podem ser usadas para refinar o proxy de forma incremental para ajustar a exibição do cliente do tipo do objeto remoto.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="URI">
      <MemberSignature Language="C#" Value="public virtual string URI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string URI" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.URI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o URI da instância do objeto específico.</summary>
        <value>O URI da instância do objeto específico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um URI que identifica exclusivamente a instância de objeto específico.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
