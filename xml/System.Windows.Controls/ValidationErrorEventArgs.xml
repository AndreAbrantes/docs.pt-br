<Type Name="ValidationErrorEventArgs" FullName="System.Windows.Controls.ValidationErrorEventArgs">
  <TypeSignature Language="C#" Value="public class ValidationErrorEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationErrorEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationErrorEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece informações para o <see cref="E:System.Windows.Controls.Validation.Error" /> evento anexado.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationErrorEventAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationErrorEventAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationErrorEventArgs.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationErrorEventAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o erro é um erro de novo ou existente de erro agora foi limpo.</summary>
        <value>Um <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> valor que indica se o erro é um erro de novo ou existente de erro agora foi limpo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationError Error" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationErrorEventArgs.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o erro que causou essa <see cref="E:System.Windows.Controls.Validation.Error" /> eventos.</summary>
        <value>O <see cref="T:System.Windows.Controls.ValidationError" /> objeto que causou essa <see cref="E:System.Windows.Controls.Validation.Error" /> eventos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">O manipulador genérico para chamar em uma forma de um tipo específico.</param>
        <param name="genericTarget">O objeto para invocar o manipulador no.</param>
        <summary>Invoca o manipulador especificado de uma maneira de tipo específico no objeto especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
