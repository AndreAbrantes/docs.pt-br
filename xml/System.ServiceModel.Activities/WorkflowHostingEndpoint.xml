<Type Name="WorkflowHostingEndpoint" FullName="System.ServiceModel.Activities.WorkflowHostingEndpoint">
  <TypeSignature Language="C#" Value="public abstract class WorkflowHostingEndpoint : System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowHostingEndpoint extends System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceEndpoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uma implementação abstrata de <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />. Derive desta classe para expor os contratos que oferecem suporte à criação de fluxo de trabalho e a continuação do indicador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como derivar uma classe a partir de <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint> classe.  
  
 [!code-csharp[CreationEndpoint2#2](~/samples/snippets/csharp/VS_Snippets_Misc/CreationEndpoint2/CS/CreationEndpoint.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowHostingEndpoint (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">O tipo do contrato que define os padrões de troca de mensagem básica para um fluxo de trabalho que hospeda a operação.</param>
        <summary>Cria uma nova instância do <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> classe com o tipo de contrato especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowHostingEndpoint (Type contractType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contractType">O contrato de serviço para o ponto de extremidade.</param>
        <param name="binding">A associação para o ponto de extremidade.</param>
        <param name="address">O endereço do ponto de extremidade.</param>
        <summary>Cria uma nova instância do <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> classe com o endereço de ponto de extremidade, associação e tipo de contrato especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationQueries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.CorrelationQuery&gt; CorrelationQueries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.CorrelationQuery&gt; CorrelationQueries" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.CorrelationQuery&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de <see cref="T:System.ServiceModel.CorrelationQuery" /> instâncias.</summary>
        <value>Uma coleção de consultas de correlação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Preencha essa coleção com consultas que são executados quando uma mensagem chega no ponto de extremidade para determinar qual instância de fluxo de trabalho, a mensagem deve ser enviada ao. Essa propriedade não precisa ser usado se a resolução de instância personalizada é fornecida por meio da substituição <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetCreationContext">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Activities.WorkflowCreationContext OnGetCreationContext (object[] inputs, System.ServiceModel.OperationContext operationContext, Guid instanceId, System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Activities.WorkflowCreationContext OnGetCreationContext(object[] inputs, class System.ServiceModel.OperationContext operationContext, valuetype System.Guid instanceId, class System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Activities.WorkflowCreationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="responseContext" Type="System.ServiceModel.Activities.WorkflowHostingResponseContext" />
      </Parameters>
      <Docs>
        <param name="inputs">As entradas para a operação de serviço.</param>
        <param name="operationContext">Fornece o contexto de execução da operação de serviço invocado.</param>
        <param name="instanceId">A ID de instância da instância do fluxo de trabalho que está sendo criada.</param>
        <param name="responseContext">O <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpointResponseContext" /> objeto que pode ser usado para enviar respostas de volta para a origem da mensagem de um contrato de solicitação/resposta.</param>
        <summary>Substituição para criar um novo <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" /> instância.</summary>
        <returns>Um objeto de contexto de criação de fluxo de trabalho.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como implementar o <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext%2A> método.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetInstanceId">
      <MemberSignature Language="C#" Value="protected virtual Guid OnGetInstanceId (object[] inputs, System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Guid OnGetInstanceId(object[] inputs, class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="inputs">As entradas para a operação de serviço.</param>
        <param name="operationContext">O contexto de operação da operação de serviço.</param>
        <summary>Substituição para retornar a ID de instância para a instância de fluxo de trabalho que está sendo criada.</summary>
        <returns>A ID de instância para a instância de fluxo de trabalho criado recentemente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retorne nulo para indicar que uma ID de instância deve ser gerada automaticamente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como implementar o <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A> método.  
  
 [!code-csharp[CreationEndpoint#0](~/samples/snippets/csharp/VS_Snippets_CFX/creationendpoint/cs/creationendpoint.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveBookmark">
      <MemberSignature Language="C#" Value="protected virtual System.Activities.Bookmark OnResolveBookmark (object[] inputs, System.ServiceModel.OperationContext operationContext, System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Activities.Bookmark OnResolveBookmark(object[] inputs, class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="responseContext" Type="System.ServiceModel.Activities.WorkflowHostingResponseContext" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputs">As entradas para a operação de serviço.</param>
        <param name="operationContext">O contexto de execução da operação de serviço que está sendo invocado.</param>
        <param name="responseContext">O <see cref="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" /> objeto que pode ser usado para enviar respostas de volta para a origem da mensagem de um contrato de solicitação/resposta.</param>
        <param name="value">Um valor a ser passado para a instância de fluxo de trabalho quando o indicador é retomado</param>
        <summary>Substitua para retornar um indicador a ser retomado na instância do fluxo de trabalho.</summary>
        <returns>Um indicador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como implementar o <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark%2A> método.  
  
 [!code-csharp[ResumeBookmarkEndpoint#0](~/samples/snippets/csharp/VS_Snippets_CFX/resumebookmarkendpoint/cs/resumebookmarkendpoint.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
