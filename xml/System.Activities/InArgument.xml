<Type Name="InArgument" FullName="System.Activities.InArgument">
  <TypeSignature Language="C#" Value="public abstract class InArgument : System.Activities.Argument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InArgument extends System.Activities.Argument" />
  <TypeSignature Language="DocId" Value="T:System.Activities.InArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Argument</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A classe base abstrata que representa um terminal de associação que dá suporte ao fluxo de dados em uma atividade.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateReference">
      <MemberSignature Language="C#" Value="public static System.Activities.InArgument CreateReference (System.Activities.InArgument argumentToReference, string referencedArgumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.InArgument CreateReference(class System.Activities.InArgument argumentToReference, string referencedArgumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentToReference" Type="System.Activities.InArgument" />
        <Parameter Name="referencedArgumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argumentToReference">O destino <see langword="in" /> argumento para referência.</param>
        <param name="referencedArgumentName">O nome do argumento referenciado.</param>
        <summary>Cria um novo <see cref="T:System.Activities.InArgument" /> que referencia o destino especificado <see cref="T:System.Activities.InArgument" /> usando o nome do argumento de referência especificado.</summary>
        <returns>Um novo <see langword="in" /> argumento que referencia o destino especificado <see cref="T:System.Activities.InArgument" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReference">
      <MemberSignature Language="C#" Value="public static System.Activities.InArgument CreateReference (System.Activities.InOutArgument argumentToReference, string referencedArgumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.InArgument CreateReference(class System.Activities.InOutArgument argumentToReference, string referencedArgumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentToReference" Type="System.Activities.InOutArgument" />
        <Parameter Name="referencedArgumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argumentToReference">O destino <see langword="in/out" /> argumento para referência.</param>
        <param name="referencedArgumentName">O nome do argumento referenciado.</param>
        <summary>Cria um novo <see cref="T:System.Activities.InArgument" /> que referencia o destino especificado <see cref="T:System.Activities.InOutArgument" /> usando o nome do argumento de referência especificado.</summary>
        <returns>Um novo <see langword="in" /> argumento que referencia o destino especificado <see cref="T:System.Activities.InOutArgument" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
