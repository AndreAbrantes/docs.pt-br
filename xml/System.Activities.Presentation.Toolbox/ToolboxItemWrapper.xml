<Type Name="ToolboxItemWrapper" FullName="System.Activities.Presentation.Toolbox.ToolboxItemWrapper">
  <TypeSignature Language="C#" Value="public sealed class ToolboxItemWrapper : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxItemWrapper extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa um wrapper usado para estabelecer um link entre um real <see cref="T:System.Drawing.Presentation.ToolboxItem" /> instância e a representação de ferramenta, bem como adicionar suporte para classificação de itens da caixa de ferramentas. Esta classe é <see langword="sealed" />, portanto, não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe de invólucro fornece suporte para a categorização de itens da caixa de ferramentas ao hospedar novamente o [!INCLUDE[wfd1](~/includes/wfd1-md.md)]fora do [!INCLUDE[vs2010](~/includes/vs2010-md.md)].  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O construtor padrão inicializa o <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A>, <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A>, <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A>, e <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName%2A> propriedades com vazio `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="toolType">O tipo da ferramenta.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> classe com o tipo da ferramenta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> e <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> propriedades podem ser extraídas do `toolType` parâmetro. O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A> e <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName%2A> cada propriedades são inicializadas com vazio `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolType">O tipo da ferramenta.</param>
        <param name="displayName">O nome da exibição.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> classe com o tipo da ferramenta e um nome de exibição especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> e <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> propriedades podem ser extraídas do `toolType` parâmetro. O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A> propriedade é inicializada com um vazio `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType, string bitmapName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType, string bitmapName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
        <Parameter Name="bitmapName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolType">O tipo da ferramenta.</param>
        <param name="bitmapName">Um <see langword="string" /> que contém o nome do bitmap.</param>
        <param name="displayName">Um <see langword="string" /> que contém o nome da exibição.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> classe com o tipo da ferramenta e os nomes especificados para o bitmap e exibir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> e <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> propriedades podem ser extraídas do `toolType` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (string toolName, string assemblyName, string bitmapName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string toolName, string assemblyName, string bitmapName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="bitmapName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">O nome da ferramenta.</param>
        <param name="assemblyName">O nome do assembly.</param>
        <param name="bitmapName">O nome do bitmap.</param>
        <param name="displayName">O nome da exibição.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> classe com os nomes especificados para a ferramenta, o assembly, o bitmap e a exibição.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do assembly para o item de caixa de ferramentas.</summary>
        <value>O nome do assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o nome do assembly é alterado, um evento é gerado para indicar que o valor da propriedade foi alterado. A operação de definição é idempotente: se o nome do assembly é definido como um valor que já possui, não há nenhuma alteração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O nome do assembly já foi especificado e não pode ser alterado após correspondente <see cref="T:System.Drawing.Desigen.ToolboxItem" /> foi inicializado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Bitmap Bitmap" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o bitmap associado a <see cref="T:System.Drawing.Design.ToolboxItem" /> encapsulada pelo objeto atual.</summary>
        <value>Retorna um <see cref="T:System.Drawing.Bitmap" /> que está associado a <see cref="T:System.Drawing.Design.ToolboxItem" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapName">
      <MemberSignature Language="C#" Value="public string BitmapName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BitmapName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do bitmap.</summary>
        <value>O nome do bitmap.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o nome de bitmap for alterado, um evento é gerado para indicar que o valor da propriedade foi alterado. A operação de definição é idempotente: se o nome do assembly é definido como um valor que já possui, não há nenhuma alteração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de exibição.</summary>
        <value>O nome de exibição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o nome de exibição for alterado, um evento é gerado para indicar que a propriedade foi alterada. A operação de definição é idempotente: se o nome do assembly é definido como um valor que já possui, não há nenhuma alteração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se este <see cref="T:System.Drawing.Design.ToolboxItem" /> é válido.</summary>
        <value>
          <see langword="true" />Se o <see cref="T:System.Drawing.Design.ToolboxItem" /> for válido; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Drawing.Design.ToolboxItem> será válido se ele não é `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.PropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Um evento que ocorre quando uma propriedade é alterada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.PropertyChanged> propriedade é definida pelo <xref:System.ComponentModel.INotifyPropertyChanged> interface é implementada pelo <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="public string ToolName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da ferramenta.</summary>
        <value>O nome da ferramenta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o nome da ferramenta for alterado, um evento é gerado para indicar que o valor da propriedade foi alterado. A operação de definição é idempotente: se o nome do assembly é definido como um valor que já possui, não há nenhuma alteração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationException">O nome da ferramenta não pode ser alterado após correspondente <see cref="T:System.Drawing.Desigen.ToolboxItem" /> foi inicializado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um <see langword="string" /> que representa o objeto atual.</summary>
        <returns>Retorna o valor da <see cref="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName" /> propriedade atual <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" /> objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
        <value>Retorna <see cref="T:System.Type" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
