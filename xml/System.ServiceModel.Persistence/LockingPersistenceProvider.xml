<Type Name="LockingPersistenceProvider" FullName="System.ServiceModel.Persistence.LockingPersistenceProvider">
  <TypeSignature Language="C#" Value="public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LockingPersistenceProvider extends System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A classe base abstrata da qual são derivados todos os provedores de persistência do serviço durável que implementam o bloqueio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Além de persistência, o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> classe implementa o bloqueio de registros de dados de estado do serviço. Métodos que interagem com dados de persistentes (como o `Load` método) tem um parâmetro opcional (`lockInstance`) que define se os bloqueios nos dados em questão são lançados ou mantidos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LockingPersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">O identificador exclusivo a ser associado essa instância do provedor de persistência.</param>
        <summary>Quando implementada em uma classe derivada, cria uma nova instância do <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> classe, configurada com o valor de identidade especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">A instância cujas informações de estado é salvo no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve ser concluída sem tempo limite.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para criar as informações de estado de instância no repositório de persistência usando os parâmetros. Esse método não desbloquear a instância depois de salvar as informações de estado.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> método, que usa um parâmetro adicional para determinar se a instância está desbloqueada. Esse método passa `false` como um valor para esse parâmetro para o método de chamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">A instância cujas informações de estado é salvo no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve ser concluída sem tempo limite.</param>
        <param name="unlockInstance">
          <see langword="true" />Se a instância deve estar desbloqueada no repositório de persistência; Caso contrário, <see langword="false" />.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para criar as informações de estado de instância no repositório de persistência usando os parâmetros. Esse método desbloqueia a instância depois de salvar o estado da instância se o valor de <paramref name="unlockInstance" /> parâmetro é <see langword="true" />.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O intervalo no qual a operação deve ser concluída sem tempo limite.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para carregar uma instância com base nas informações de estado no repositório de persistência usando os parâmetros. Esse método não bloqueia a instância.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, que usa um parâmetro adicional que especifica se a instância deve ser bloqueada no repositório de persistência. Esse método passa `false` como um valor para esse parâmetro para o método de chamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Um intervalo no qual a operação deve ser concluída antes do tempo limite.</param>
        <param name="lockInstance">
          <see langword="true" />Se a instância deve ser bloqueada; Caso contrário, <see langword="false" />.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para carregar uma instância com base nas informações de estado no repositório de persistência usando os parâmetros. Esse método bloqueia a instância depois de carregar o estado da instância se o valor de <paramref name="lockInstance" /> parâmetro é <see langword="true" />.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <param name="instanceToken">O token retornado por anterior <see langword="Create" /> ou <see langword="Update" /> método que representa o estado atual é mantido pelo chamador.</param>
        <param name="callback">O método a ser chamado quando a operação é concluída.</param>
        <param name="state">Um objeto definido pelo usuário que distingue essa operação assíncrona específica de outras operações.</param>
        <summary>Quando implementada em uma classe derivada, representa o início da fase de LoadIfChanged. A fase de LoadIfChanged ocorre quando dados de estado são carregados no provedor de persistência do armazenamento de persistência e os dados no repositório de persistência de estado foi alterados. Esta chamada de método não bloqueia a instância no armazenamento de persistência.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <param name="instanceToken">O token retornado por anterior <see langword="Create" /> ou <see langword="Update" /> método que representa o estado atual é mantido pelo chamador.</param>
        <param name="lockInstance">
          <see langword="true" />Se a instância está bloqueada no repositório de persistência; Caso contrário, <see langword="false" />.</param>
        <param name="callback">O método a ser chamado quando a operação é concluída.</param>
        <param name="state">Um objeto definido pelo usuário que distingue essa operação assíncrona específica de outras operações.</param>
        <summary>Quando implementada em uma classe derivada, representa o início da fase de LoadIfChanged. A fase de LoadIfChanged ocorre quando dados de estado são carregados no provedor de persistência do armazenamento de persistência e os dados no repositório de persistência de estado foi alterados. Esta chamada de método permite que você especifique se deseja bloquear a instância no armazenamento de persistência.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnlock">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnlock(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Um intervalo no qual a operação deve ser concluída antes do tempo limite.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado associadas com a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para desbloquear uma instância no armazenamento de persistência.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">A instância cujas informações de estado está sendo atualizadas no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve ser concluída sem tempo limite.</param>
        <param name="callback">O representante que recebe a notificação quando a operação é concluída.</param>
        <param name="state">As informações de estado sobre a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para atualizar as informações de estado de instância no repositório de persistência usando os parâmetros passados. Esta operação não desbloquear a instância no repositório de instância.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> método e passa um `false` valor para o `unlockInstance` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">A instância cujas informações de estado está sendo atualizadas no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve ser concluída sem tempo limite.</param>
        <param name="unlockInstance">
          <see langword="true" />Se a instância deve ser bloqueada depois que o estado da instância é atualizado no repositório de persistência; Caso contrário, <see langword="false" />.</param>
        <param name="callback">O representante que recebe a notificação quando a operação for concluída.</param>
        <param name="state">As informações de estado sobre a operação assíncrona.</param>
        <summary>Inicia uma operação assíncrona para atualizar as informações de estado de instância no repositório de persistência usando os parâmetros passados. Esta operação bloqueia a instância no armazenamento de persistência, se o valor de <paramref name="unlockInstance" /> parâmetro é <see langword="true" />.</summary>
        <returns>O status de uma operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">O objeto de instância cujas informações de estado devem ser salvo no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve concluir antes do tempo limite.</param>
        <summary>Cria informações de estado de instância no repositório de persistência usando parâmetros passados para o método. Esse método não desbloquear a instância no armazenamento de persistência depois de salvar o estado da instância.</summary>
        <returns>As informações de estado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">O objeto de instância cujas informações de estado é salvo no repositório de persistência.</param>
        <param name="timeout">O intervalo no qual a operação deve ser concluída antes do tempo limite.</param>
        <param name="unlockInstance">
          <see langword="true" />Se a instância deve estar desbloqueada no repositório de persistência; Caso contrário, <see langword="false" />.</param>
        <summary>Esse método cria informações de estado de instância no repositório de persistência usando parâmetros passados para o método. O método desbloqueia a instância no repositório de instância se o valor de <paramref name="unlockInstance" /> parâmetro é <see langword="true" />.</summary>
        <returns>As informações de estado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnlock">
      <MemberSignature Language="C#" Value="public abstract void EndUnlock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnlock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O resultado retornado pela operação de desbloqueio.</param>
        <summary>Termina a operação assíncrona para desbloquear uma instância no armazenamento de persistência.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula essa tentativa.</param>
        <summary>Carrega informações sobre o estado do armazenamento de persistência do serviço sem bloquear a instância.</summary>
        <returns>As informações de estado do serviço.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> método com `lockInstance` parâmetro definido como `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout, bool lockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">O período após o qual o provedor de persistência anula a operação.</param>
        <param name="lockInstance">
          <see langword="true" />Se a instância deve ser bloqueada; Caso contrário, <see langword="false" />.</param>
        <summary>Carrega as informações do armazenamento de persistência após a ocorrência de bloqueio de estado.</summary>
        <returns>As informações de estado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <param name="instanceToken">O token retornado por anterior <see langword="Create" /> ou <see langword="Update" /> chamadas de método, que representa o estado atual mantido pelo chamador.</param>
        <param name="instance">As informações de estado de instância real.</param>
        <summary>Carrega as informações de estado da instância do armazenamento de persistência, se as informações de estado foi alteradas desde a última vez em que as informações foram carregadas pelo chamador. Esse método não bloqueia a instância no armazenamento de persistência.</summary>
        <returns>
          <see langword="true" />Se a instância deve ser bloqueada no repositório de persistência do final desta operação. Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <param name="instanceToken">O token retornado por chamadas de método anteriores criação ou atualização, que representa o estado atual mantido pelo chamador.</param>
        <param name="lockInstance">
          <see langword="true" />Se a instância deve ser bloqueada no repositório de persistência do final desta operação. Caso contrário, <see langword="false" />.</param>
        <param name="instance">As informações de estado de instância.</param>
        <summary>Carrega as informações de estado da instância do armazenamento de persistência, se as informações de estado foi alteradas desde a última vez em que as informações foram carregadas pelo chamador. Esse método também permite que o chamador Especifique se deseja bloquear a instância no armazenamento de persistência.</summary>
        <returns>
          <see langword="true" />Se a instância deve ser bloqueada no repositório de persistência do final desta operação. Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public abstract void Unlock (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <summary>Desbloqueia a instância cuja ID é especificada ao construir o <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> objeto no repositório de persistência.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">As informações de estado de instância.</param>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <summary>Quando implementada em uma classe derivada, atualiza as informações de estado de instância no armazenamento de persistência. Esse método não desbloquear a instância depois de atualizar as informações de estado de instância no armazenamento de persistência.</summary>
        <returns>As informações de estado de instância.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">As informações de estado de instância.</param>
        <param name="timeout">O período de tempo após o qual o provedor de persistência anula a operação.</param>
        <param name="unlockInstance">
          <see langword="true" />Se a instância é desbloqueada após as informações de estado da instância serão atualizadas; Caso contrário, <see langword="false" />.</param>
        <summary>Quando implementada em uma classe derivada, atualiza as informações de estado de instância no armazenamento de persistência. Esse método não desbloquear a instância depois de atualizar as informações de estado de instância no armazenamento de persistência.</summary>
        <returns>As informações de estado de instância.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
