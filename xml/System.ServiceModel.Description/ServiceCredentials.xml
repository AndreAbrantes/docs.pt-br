<Type Name="ServiceCredentials" FullName="System.ServiceModel.Description.ServiceCredentials">
  <TypeSignature Language="C#" Value="public class ServiceCredentials : System.ServiceModel.Security.SecurityCredentialsManager, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentials extends System.ServiceModel.Security.SecurityCredentialsManager implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Security.SecurityCredentialsManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Configura uma credencial de serviço. Use esta classe para especificar a credencial de serviço como um certificado X.509. Além disso, use essa classe para especificar o modelo de autenticação para diversas credenciais de cliente, como validação de nome de usuário e senha.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada como um parâmetro no <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore%2A> método pelos métodos do <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>e é retornado pelo <xref:System.ServiceModel.ServiceHostBase.Credentials%2A?displayProperty=nameWithType> propriedade.  
  
   
  
## Examples  
 O código a seguir mostra como substituir essa classe para implementar as credenciais de serviço personalizado.  
  
 [!code-csharp[c_CustomCredentials#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#4)]
 [!code-vb[c_CustomCredentials#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceCredentials (System.ServiceModel.Description.ServiceCredentials other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="other">O <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instância usada para inicializar a nova instância.</param>
        <summary>Inicializa uma nova instância da <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> especificado <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateInitiatorServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o cliente atual configurações para este serviço de provisionamento e autenticação de certificado.</summary>
        <value>Uma instância <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar um cliente certificado autenticação modelo usando o <xref:System.IdentityModel.Claims.ClaimTypes.Authentication%2A> propriedade. No cenário duplex mútua de certificado, você pode especificar um certificado x. 509 para uso em uma resposta ou de retorno de chamada usando o <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate%2A> propriedade.  
  
   
  
## Examples  
 O código a seguir mostra como acessar essa propriedade e usá-lo para definir propriedades adicionais.  
  
 [!code-csharp[c_CustomCertificateValidator#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcertificatevalidator/cs/source.cs#1)]
 [!code-vb[c_CustomCertificateValidator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcertificatevalidator/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceCredentials Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma cópia da instância atual.</summary>
        <returns>Uma instância de <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O código a seguir mostra como chamar esse método.  
  
 [!code-csharp[S_UEWindowsServiceCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#3)]
 [!code-vb[S_UEWindowsServiceCredential#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceCredentials CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceCredentials CloneCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CloneCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copia os membros essenciais da instância atual.</summary>
        <returns>Uma instância de <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Description.ServiceCredentials.CloneCore%2A> chamadas de método de <xref:System.ServiceModel.Description.ServiceCredentials.%23ctor%2A> construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenManager">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um Gerenciador de token para este serviço.</summary>
        <returns>Uma instância de <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionMapper">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ExceptionMapper ExceptionMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ExceptionMapper ExceptionMapper" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ExceptionMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ExceptionMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o mapeador de exceção associado às credenciais de serviço.</summary>
        <value>O mapeador de exceção associado às credenciais de serviço.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.IdentityConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a configuração de identidade para o serviço.</summary>
        <value>A configuração de identidade para o serviço.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedTokenAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IssuedTokenServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a atual emitido configurações de autenticação de token (por exemplo, SAML) para este serviço.</summary>
        <value>Uma instância <see cref="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O código a seguir mostra como acessar essa propriedade e usá-lo para definir propriedades adicionais.  
  
 [!code-csharp[c_FederatedService#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_federatedservice/cs/source.cs#2)]
 [!code-vb[c_FederatedService#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federatedservice/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peer">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.PeerCredential Peer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.PeerCredential Peer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.Peer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.PeerCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a credencial atual configurações de provisionamento e autenticação a serem usadas pelos pontos de extremidade de transporte de par configurados no serviço.</summary>
        <value>Uma instância de <see cref="T:System.ServiceModel.Security.PeerCredential" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecureConversationAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecureConversationServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações atuais para ser usado por uma conversa segura.</summary>
        <value>Uma instância de <see cref="T:System.ServiceModel.Security.SecureConversationServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta classe para especificar uma lista de tipos de declaração conhecidos para a serialização de cookies de segurança contexto Token SCT () e um codificador para codificar e proteger as informações de cookies.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para obter a instância da credencial usada pelo serviço.  
  
 [!code-csharp[S_UEWindowsServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#2)]
 [!code-vb[S_UEWindowsServiceCredential#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateRecipientServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o certificado atual associado a esse serviço.</summary>
        <value>Uma instância <see cref="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar o certificado para usá chamando membros do <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> objeto retornado por essa propriedade.  
  
 Você também pode definir esse valor usando o [ &lt;certificado&gt; ](~/docs/framework/configure-apps/file-schema/wcf/certificate-for-identity.md) elemento em um arquivo de configuração do aplicativo cliente.  
  
   
  
## Examples  
 Esse código mostra como especificar o certificado que usa um serviço.  
  
 Um <xref:System.ServiceModel.ServiceHost> classe é criada, seguido por uma instrução única códigos complexos que faz o seguinte:  
  
-   <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>propriedade é usada para acessar uma instância de <xref:System.ServiceModel.Description.ServiceCredentials>.  
  
-   O <xref:System.ServiceModel.Description.ServiceCredentials> instância, em seguida, invoca <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A>.  
  
-   O <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A> propriedade retorna um <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> objeto no qual o <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A> método é chamado.  
  
 [!code-csharp[S_UEServiceCredentials#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicecredentials/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Uma descrição do serviço.</param>
        <param name="serviceHostBase">O host de serviço base.</param>
        <param name="endpoints">Uma coleção de pontos de extremidade de serviço.</param>
        <param name="parameters">Uma coleção de parâmetros.</param>
        <summary>Adiciona essa instância para uma coleção de parâmetros de associação. Isso é um método de infraestrutura e não se destina a ser chamado diretamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alguns elementos de associação, às vezes, podem acessar informações extras ao criar as fábricas. Essa classe é uma coleção de objetos que contêm essas informações extras.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">A descrição do serviço.</param>
        <param name="serviceHostBase">O host de serviço base.</param>
        <summary>Aplica o comportamento de distribuição. Isso é um método de infraestrutura e não se destina a ser chamado diretamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não implementado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">A descrição do serviço.</param>
        <param name="serviceHostBase">O host de serviço base.</param>
        <summary>Valida uma descrição de serviço. Isso é um método de infraestrutura e não se destina a ser chamado diretamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não implementado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseIdentityConfiguration">
      <MemberSignature Language="C#" Value="public bool UseIdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseIdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se a credencial de serviço usa a configuração de identidade.</summary>
        <value>
          <see langword="True" />Se a credencial de serviço usa a configuração de identidade; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações atuais de autenticação de nome de usuário/senha para esse serviço.</summary>
        <value>Uma instância de <see cref="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar as configurações de nome e senha de autenticação do usuário chamando membros do <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> classe nessa instância, como <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> e <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para obter a instância da credencial usada pelo serviço.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.WindowsServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações de autenticação do Windows atuais para este serviço.</summary>
        <value>Uma instância de <see cref="T:System.ServiceModel.Security.WindowsServiceCredential" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa classe para especificar se deseja permitir acesso de usuários anônimos do Windows, definindo o <xref:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons%2A> propriedade. Além disso, use essa classe para especificar se deseja incluir um informações de grupo ao qual os usuários pertencem a <xref:System.IdentityModel.Policy.AuthorizationContext> definindo o <xref:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups%2A> propriedade.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para obter a instância da credencial usada pelo serviço.  
  
 [!code-csharp[S_UEWindowsServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#1)]
 [!code-vb[S_UEWindowsServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
