<Type Name="IMetadataExchange" FullName="System.ServiceModel.Description.IMetadataExchange">
  <TypeSignature Language="C#" Value="public interface IMetadataExchange" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMetadataExchange" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IMetadataExchange" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(ConfigurationName="IMetadataExchange", Name="IMetadataExchange", Namespace="http://schemas.microsoft.com/2006/04/mex")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Expõe métodos usados para retornar metadados sobre um serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao programar [!INCLUDE[indigo1](~/includes/indigo1-md.md)] services, é útil publicar metadados sobre o serviço. Por exemplo, metadados podem ser um documento WSDL Web Services Description Language () que descreve todos os métodos e os tipos de dados utilizados por um serviço. Retornando metadados sobre um [!INCLUDE[indigo2](~/includes/indigo2-md.md)] serviço permite que os consumidores de um serviço criar facilmente os clientes para o serviço. Para obter mais informações sobre [!INCLUDE[indigo2](~/includes/indigo2-md.md)] pontos de extremidade de metadados, consulte [metadados](~/docs/framework/wcf/feature-details/metadata.md).  
  
 Serviços implementados usando [!INCLUDE[indigo2](~/includes/indigo2-md.md)] publicar metadados ao expor um ou mais pontos de extremidade de metadados. Pontos de extremidade de metadados em [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ter um endereço, uma ligação e um contrato como qualquer outro ponto de extremidade.  O <xref:System.ServiceModel.Description.MetadataReference> interface Especifica o contrato de serviço implementado por todos os pontos de extremidade de metadados em [!INCLUDE[indigo2](~/includes/indigo2-md.md)].  
  
 Não é necessário para implementar o <xref:System.ServiceModel.Description.MetadataReference> contrato em sua implementação de serviço.  Em vez disso, adicione o <xref:System.ServiceModel.Description.ServiceMetadataBehavior> a descrição do serviço.  
  
 Ou, ao usar a configuração, defina o `contract` atributo do elemento de ponto de extremidade para `IMetadataExchange`. Para obter um exemplo, consulte [como: publicar metadados para um serviço usando um arquivo de configuração](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md).  
  
 Para obter detalhes sobre como publicar metadados em [!INCLUDE[indigo2](~/includes/indigo2-md.md)] consulte [metadados de publicação](~/docs/framework/wcf/feature-details/publishing-metadata.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGet">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGet (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGet(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.BeginGet(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", AsyncPattern=true, ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Um <see cref="T:System.ServiceModel.Channels.Message" /> que deve ser processado para determinar os metadados para retornar.</param>
        <param name="callback">Um <see cref="T:System.AsyncCallback" /> que aponta para o método que processará os metadados.</param>
        <param name="state">Todos os dados que permite que o chamador determinar qual assíncrona chamar está sendo retornados.</param>
        <summary>Inicia uma recuperação assíncrona de metadados.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser passado para o <see cref="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" /> método.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGet">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndGet (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndGet(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Um <see cref="T:System.IAsyncResult" /> que contém os dados usados para processar ainda mais os metadados.</param>
        <summary>Conclui a recuperação de metadados.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Channels.Message" /> que contém os metadados processados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Get (System.ServiceModel.Channels.Message request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Get(class System.ServiceModel.Channels.Message request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.Get(System.ServiceModel.Channels.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="request">Um <see cref="T:System.ServiceModel.Channels.Message" /> que contém a solicitação de metadados.</param>
        <summary>Retorna os metadados de serviço.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Channels.Message" /> que contém os metadados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
