### YamlMime:Tutorial
title: <span data-ttu-id="d5d3c-101">Interpolação de cadeias de caracteres em C#</span><span class="sxs-lookup"><span data-stu-id="d5d3c-101">String interpolation in C#</span></span>
metadata:
  title: Tutorial interativo sobre interpolação de cadeias de caracteres – guias de início rápido de C#
  description: Neste tutorial, você usará seu navegador para explorar de forma interativa o recurso de interpolação de cadeias de caracteres. Escreva o código em C# e veja os resultados da compilação e execução de seu código diretamente no navegador.
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection.yml
  nextTutorialTitle: <span data-ttu-id="d5d3c-105">Coleções em C#</span><span class="sxs-lookup"><span data-stu-id="d5d3c-105">Collections in C#</span></span>
  ms.openlocfilehash: ac9c8488c787b1dc9b4fb60b18834d328faa4e83
  ms.sourcegitcommit: 88f251b08bf0718ce119f3d7302f514b74895038
  ms.translationtype: HT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 05/10/2018
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="d5d3c-106">Este guia de início rápido ensina como usar a [interpolação de cadeias de caracteres](../language-reference/tokens/interpolated.md) para inserir valores em uma única cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-106">This quickstart teaches you how to use [string interpolation](../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="d5d3c-107">Você também aprenderá a controlar as representações de texto desses valores na cadeia de caracteres de resultado.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-107">You also learn how to control text representations of those values in the result string.</span></span> <span data-ttu-id="d5d3c-108">Você usará seu navegador para escrever e executar código em C# e poderá ver imediatamente os resultados produzidos.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-108">You use your browser to write and run C# code and can immediately see the produced results.</span></span>
- title: <span data-ttu-id="d5d3c-109">Criar uma cadeia de caracteres interpolada</span><span class="sxs-lookup"><span data-stu-id="d5d3c-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"d5d3c-110\">Execute o seguinte código na janela interativa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"d5d3c-111\">Para fazer isso, digite o código na janela interativa (substitua \"`\\<name>`\" por seu nome) e selecione **Executar**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-111\">To do that, type the code in the interactive window (replace `\\<name>` with your name) and select **Run**:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"d5d3c-112\">Quando o código é executado, **Saída** exibe uma cadeia de caracteres que inclui seu nome na saudação.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-112\">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id=\"d5d3c-113\">O argumento de cadeia de caracteres da chamada de método <xref:System.Console.WriteLine%2A> é uma *cadeia de caracteres interpolada*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-113\">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"d5d3c-114\">Ela é um tipo de modelo que permite que você construa uma única cadeia de caracteres (chamado de *cadeia de caracteres de resultado*) com base em uma cadeia de caracteres que inclui o código inserido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"d5d3c-115\">Cadeias de caracteres interpoladas são particularmente úteis para inserir valores em uma cadeia de caracteres ou para concatenar (unir) várias cadeias de caracteres.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span> \n\n<span data-ttu-id=\"d5d3c-116\">O exemplo acima contém os dois elementos que toda cadeia de caracteres interpolada deve ter:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-116\">The example above contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"d5d3c-117\">Um literal de cadeia de caracteres que começa com o caractere `$` antes do caractere de aspas de abertura.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"d5d3c-118\">Não pode haver nenhum espaço entre o símbolo `$` e o caractere de aspas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"d5d3c-119\">(Se quiser ver o que acontece ao incluir um espaço, insira um após o caractere `$` na janela interativa e execute o código atualizado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id=\"d5d3c-120\">O compilador do C# informará: \"Caractere '$' inesperado\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"d5d3c-121\">Uma ou mais *expressões interpoladas*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"d5d3c-122\">Uma expressão interpolada é indicada por chaves de abertura e fechamento (`{` e `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"d5d3c-123\">Você pode colocar qualquer expressão de C# que retorne um valor (incluindo `null`) dentro das chaves.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"d5d3c-124\">Vamos testar mais alguns exemplos de interpolação de cadeias de caracteres com outros tipos de dados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-124\">Let's try a few more string interpolation examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d5d3c-125\">Esta experiência de codificação online está em versão prévia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d5d3c-126\">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="d5d3c-127">Incluir diferentes tipos de dados</span><span class="sxs-lookup"><span data-stu-id="d5d3c-127">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"d5d3c-128\">Na etapa anterior, você usou a interpolação de cadeias de caracteres para inserir uma cadeia de caracteres dentro de outra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-128\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"d5d3c-129\">Entretanto, o resultado de uma expressão interpolada pode ser de qualquer tipo de dados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-129\">The result of an interpolated expression can be of any data type, though.</span></span> <span data-ttu-id=\"d5d3c-130\">Vamos incluir valores de vários tipos de dados em uma cadeia de caracteres interpolada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-130\">Let's include values of various data types in an interpolated string.</span></span> \n\n<span data-ttu-id=\"d5d3c-131\">No exemplo a seguir, primeiro, definimos um tipo de dados personalizado `Vegetable` que tem a [propriedade](../properties.md) `Name` e o método `ToString`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-131\">In the following example, first, we define a custom data type `Vegetable` that has the `Name` [property](../properties.md) and the `ToString` method.</span></span> <span data-ttu-id=\"d5d3c-132\">O código do cliente pode usar esse método para obter a representação de cadeia de caracteres de uma instância `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-132\">The client code can use that method to get the string representation of a `Vegetable` instance.</span></span> <span data-ttu-id=\"d5d3c-133\">No exemplo, o método `Vegetable.ToString` retorna o valor da propriedade `Name` que é inicializada no construtor `Vegetable`: `Vegetable(string name) => Name = name;`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-133\">In the example the `Vegetable.ToString` method returns the value of the `Name` property that is initialized at the `Vegetable` constructor: `Vegetable(string name) => Name = name;`.</span></span> <span data-ttu-id=\"d5d3c-134\">Em seguida, nós criamos uma instância do tipo `Vegetable` usando a palavra-chave `new` e fornecendo um parâmetro de nome para o construtor `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-134\">Then we create an instance of the `Vegetable` type by using `new` keyword and providing a name parameter for the constructor `Vegetable`.</span></span> <span data-ttu-id=\"d5d3c-135\">Por fim, incluímos essa instância em uma cadeia de caracteres interpolada que também contém um valor <xref:System.DateTime>, um valor <xref:System.Decimal> e um valor de [enumeração](../programming-guide/enumeration-types.md) `Unit`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-135\">Finally, we include that instance into an interpolated string that also contains a <xref:System.DateTime> value, a <xref:System.Decimal> value, and a `Unit` [enumeration](../programming-guide/enumeration-types.md) value.</span></span> <span data-ttu-id=\"d5d3c-136\">Execute o seguinte código na janela interativa:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-136\">Run the following code in the interactive window:</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic enum Unit { item, pound, ounce, dozen };\n\nvar item = new Vegetable(\"eggplant\");\nvar date = DateTime.Now;\nvar price = 1.99m;\nvar unit = Unit.item;\nConsole.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n```\n\n<span data-ttu-id=\"d5d3c-137\">Observe que a expressão interpolada `item` na cadeia de caracteres interpolada é resolvida como o texto \"eggplant\" na cadeia de caracteres de resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-137\">Note that the interpolated expression `item` in the interpolated string resolves to the text \"eggplant\" in the result string.</span></span> <span data-ttu-id=\"d5d3c-138\">Isso ocorre porque, quando o tipo do resultado da expressão não é uma cadeia de caracteres, o resultado é resolvido como uma cadeia de caracteres da seguinte maneira:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-138\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"d5d3c-139\">Se a expressão interpolada for avaliada como `null`, uma cadeia de caracteres vazia (\"\" ou <xref:System.String.Empty?displayProperty=nameWithType>) será usada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-139\">If the interpolated expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"d5d3c-140\">Se a expressão interpolada não foi avaliada como `null`, normalmente o método `ToString` do tipo de resultado será chamado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-140\">If the interpolated expression doesn't evaluate to `null`, typically the `ToString` method of the result type is called.</span></span> <span data-ttu-id=\"d5d3c-141\">Você pode testar isso atualizando a implementação do método `Vegetable.ToString`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-141\">You can test this by updating the implementation of the `Vegetable.ToString` method.</span></span> <span data-ttu-id=\"d5d3c-142\">Você pode até mesmo não implementar o método `ToString`, uma vez que cada tipo de dados de C# tem alguma implementação deste método.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-142\">You might even not implement `ToString` method since every C# data type has some implementation of this method.</span></span> <span data-ttu-id=\"d5d3c-143\">Para testar isso, comente a definição do método `Vegetable.ToString` no exemplo (para fazer isso, coloque um símbolo de comentário `//` na frente dele).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-143\">To test that, comment out the definition of the `Vegetable.ToString` method in the example (to do that, put a comment symbol `//` in front of it).</span></span> <span data-ttu-id=\"d5d3c-144\">Na saída, a cadeia de caracteres \"eggplant\" é substituída pelo nome de tipo totalmente qualificado (o namespace definido pelo REPL do C# junto com o nome de tipo), que é o comportamento padrão do método <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-144\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"d5d3c-145\">O comportamento padrão do método `ToString` para um tipo de enumeração é retornar a representação de cadeia de caracteres de um valor usado na definição da enumeração.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-145\">Default behavior of the `ToString` method for an enumeration type is to return the string representation of a value used at the definition of the enumeration.</span></span>   \n\n<span data-ttu-id=\"d5d3c-146\">Na saída deste exemplo, a data é muito precisa (o preço de \"eggplant\" não muda a cada segundo) e o valor do preço não indica uma unidade monetária.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-146\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"d5d3c-147\">Na próxima etapa, você aprenderá a corrigir esses problemas controlando o formato das representações das cadeias de caracteres dos resultados de expressão.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-147\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"d5d3c-148\">Esta experiência de codificação online está em versão prévia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-148\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"d5d3c-149\">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-149\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="d5d3c-150">Controlar a formatação de expressões interpoladas</span><span class="sxs-lookup"><span data-stu-id="d5d3c-150">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="d5d3c-151">Na etapa anterior, duas cadeias de caracteres formatadas de maneira inadequada foram inseridas na cadeia de caracteres de resultado.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-151">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="d5d3c-152">Uma era um valor de data e hora para a qual apenas a data era adequada.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-152">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="d5d3c-153">A segunda era um preço que não indicava a unidade monetária.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-153">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="d5d3c-154">Os dois problemas são fáceis de se resolver.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-154">Both issues are easy to address.</span></span> <span data-ttu-id="d5d3c-155">A interpolação de cadeias de caracteres permite especificar *cadeias de caracteres de formato* que controlam a formatação de tipos específicos.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-155">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="d5d3c-156">Modifique a chamada a `Console.WriteLine` no exemplo anterior para incluir as cadeias de caracteres de formato para as expressões de data e de preço, conforme mostrado na linha a seguir:</span><span class="sxs-lookup"><span data-stu-id="d5d3c-156">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="d5d3c-157">Você especifica uma cadeia de caracteres de formato colocando dois-pontos (":") e a cadeia de caracteres de formato após a expressão interpolada.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-157">You specify a format string by following the interpolated expression with a colon (":") and the format string.</span></span> <span data-ttu-id="d5d3c-158">"d" é uma [cadeia de caracteres de formato de data e hora padrão](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) que representa o formato de data abreviada.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-158">"d" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="d5d3c-159">"C2" é um [cadeia de caracteres de formato numérico padrão](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) que representa um número como um valor de moeda com dois dígitos após o ponto decimal.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-159">"C2" is a [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="d5d3c-160">Diversos tipos nas bibliotecas do .NET são compatíveis com um conjunto predefinido de cadeias de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-160">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="d5d3c-161">Isso inclui todos os tipos numéricos e os tipos de data e hora.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-161">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="d5d3c-162">Para obter uma lista completa dos tipos que são compatíveis com as cadeias de caracteres de formato, consulte [Cadeias de caracteres de formato e tipos da biblioteca de classes do .NET](../../standard/base-types/formatting-types.md#stringRef) no artigo [Tipos de formatação no .NET](../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="d5d3c-162">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="d5d3c-163">Tente modificar as cadeias de caracteres de formato no exemplo para ver como elas afetam a formatação da data e hora e o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-163">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="d5d3c-164">Altere o "d" em `{date:d}` para "t" (para exibir o formato de hora abreviada), para "y" (para exibir o ano e o mês) e para "yyyy" (para exibir o ano como um número de quatro dígitos).</span><span class="sxs-lookup"><span data-stu-id="d5d3c-164">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="d5d3c-165">Altere o "C2" em `{price:C2}` para "e" (para obter notação exponencial) e para "F3" (para um valor numérico com três dígitos após o ponto decimal).</span><span class="sxs-lookup"><span data-stu-id="d5d3c-165">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="d5d3c-166">Além de controlar a formatação, você também pode controlar a largura do campo e o alinhamento das cadeias de caracteres formatadas incluídas na cadeia de caracteres de resultado.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-166">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="d5d3c-167">Na próxima etapa, você aprenderá como fazer isso.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-167">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d5d3c-168">Esta experiência de codificação online está em versão prévia.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-168">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d5d3c-169">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d5d3c-169">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d5d3c-170">Controlar a largura do campo e o alinhamento de expressões interpoladas</span><span class="sxs-lookup"><span data-stu-id="d5d3c-170">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="d5d3c-171">Normalmente, quando o resultado de uma expressão interpolada é formatado em uma cadeia de caracteres, essa cadeia de caracteres é incluída em uma cadeia de caracteres sem espaços à esquerda nem à direita.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-171">Ordinarily, when the result of an interpolated expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="d5d3c-172">Especialmente quando você trabalha com um conjunto de dados, poder controlar a largura do campo e o alinhamento do texto ajuda a produzir uma saída mais legível.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-172">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="d5d3c-173">Para ver isso, execute o código a seguir:</span><span class="sxs-lookup"><span data-stu-id="d5d3c-173">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="d5d3c-174">Os nomes dos item são alinhados à esquerda e suas quantidades são alinhadas à direita.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-174">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="d5d3c-175">Você especifica o alinhamento adicionando uma vírgula (",") após a expressão interpolada e designando a largura *mínima* do campo.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-175">You specify the alignment by adding a comma (",") after an interpolated expression and designating the *minimum* field width.</span></span> <span data-ttu-id="d5d3c-176">Se o valor especificado for um número positivo, o campo será alinhado à direita.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-176">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="d5d3c-177">Se for um número negativo, o campo será alinhado à esquerda.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-177">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="d5d3c-178">Tente remover os sinais negativos do código `{"Item",-25}` e `{item.Key,-25}` e execute o exemplo novamente.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-178">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="d5d3c-179">Desta vez, os nomes dos itens são alinhados à direita.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-179">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="d5d3c-180">Você pode combinar um especificador de alinhamento e uma cadeia de caracteres de formato em uma única expressão interpolada.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-180">You can combine an alignment specifier and a format string for a single interpolated expression.</span></span> <span data-ttu-id="d5d3c-181">Para fazer isso, especifique o alinhamento primeiro, seguido por dois-pontos e pela cadeia de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-181">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="d5d3c-182">Teste o seguinte código que exibe três cadeias de caracteres formatadas com larguras de campo definidas:</span><span class="sxs-lookup"><span data-stu-id="d5d3c-182">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="d5d3c-183">Esta experiência de codificação online está em versão prévia.</span><span class="sxs-lookup"><span data-stu-id="d5d3c-183">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d5d3c-184">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d5d3c-184">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"d5d3c-185\">Você concluiu o guia de início rápido de interpolação de cadeias de caracteres.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-185\">You've completed the string interpolation quickstart.</span></span> \n\n<span data-ttu-id=\"d5d3c-186\">Você pode continuar esses guias de início rápido em seu próprio ambiente de desenvolvimento local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-186\">You can continue these quickstarts in your own local development environment.</span></span> <span data-ttu-id=\"d5d3c-187\">Conheça os fundamentos do [desenvolvimento local](local-environment.md) e selecione um início rápido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-187\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"d5d3c-188\">Você pode experimentar este guia de início rápido, ir diretamente ao próximo guia de início rápido ou começar novamente com o guia início rápido sobre [Números em C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-188\">You can try this same quickstart, move directly to the next quickstart, or start again with the [Numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"d5d3c-189\">Para obter mais informações, confira o tópico [Interpolação de cadeia de caracteres](../language-reference/tokens/interpolated.md) e o tutorial [Interpolação de cadeia de caracteres no C#](../tutorials/string-interpolation.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5d3c-189\">For more information, see the [String interpolation](../language-reference/tokens/interpolated.md) topic and the [String interpolation in C#](../tutorials/string-interpolation.md) tutorial.</span></span>"
