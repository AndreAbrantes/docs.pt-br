### YamlMime:Tutorial
title: <span data-ttu-id="091c9-101">Manipular números de ponto flutuante e integrais em C#</span><span class="sxs-lookup"><span data-stu-id="091c9-101">Manipulate integral and floating point numbers in C#</span></span>
metadata:
  title: Os números em C# – Tutorial de introdução ao C# Interativo
  description: Neste tutorial sobre tipos numéricos, você usará seu navegador para aprender C# interativamente. Você escreverá o código em C# e verá os resultados da compilação e execução de seu código diretamente no navegador.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  nextTutorialHref: branches-and-loops.yml
  nextTutorialTitle: <span data-ttu-id="091c9-105">Loops e branches em C#</span><span class="sxs-lookup"><span data-stu-id="091c9-105">Branches and loops in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: d29fae5aa5a34d7a8e91e53f2005178740464827
  ms.sourcegitcommit: ccd8c36b0d74d99291d41aceb14cf98d74dc9d2b
  ms.translationtype: HT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 12/10/2018
  ms.locfileid: "53131242"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="091c9-106">Este tutorial ensina de forma interativa sobre os tipos numéricos em C#, usando seu navegador para escrever em C# e ver os resultados da compilação e da execução de seu código.</span><span class="sxs-lookup"><span data-stu-id="091c9-106">This tutorial teaches you about the numeric types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="091c9-107">Ele contém uma série de lições que exploram números e operações matemáticas em C#.</span><span class="sxs-lookup"><span data-stu-id="091c9-107">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="091c9-108">Estas lições ensinam os princípios básicos da linguagem C#.</span><span class="sxs-lookup"><span data-stu-id="091c9-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="091c9-109">Explorar a matemática de inteiros</span><span class="sxs-lookup"><span data-stu-id="091c9-109">Explore integer math</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"091c9-110\">Execute o seguinte código na janela interativa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"091c9-111\">Para fazer isso, digite o bloco de código a seguir na janela interativa e clique no botão **Executar**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"091c9-112\">Você viu apenas uma das operações matemáticas fundamentais com números inteiros.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"091c9-113\">O tipo `int` representa um **inteiro**, um número inteiro positivo ou negativo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"091c9-114\">Você usa o símbolo `+` para adição.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"091c9-115\">Outras operações matemáticas comuns para inteiros incluem:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"091c9-116\">`-` para subtração</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"091c9-117\">`*` para multiplicação</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"091c9-118\">`/` para divisão</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"091c9-119\">Explorar por conta própria todo o tutorial interativo, modificando o código que você escreveu na janela interativa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-119\">Throughout this interactive tutorial, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"091c9-120\">Este tutorial fornece exemplos para teste a cada etapa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-120\">This tutorial provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"091c9-121\">Comece explorando essas diferentes operações.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"091c9-122\">Modifique a terceira linha para testar cada uma dessas operações.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"091c9-123\">Após cada edição, clique no botão **Executar**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"091c9-124\">Subtração:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"091c9-125\">Multiplicação:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"091c9-126\">Divisão:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"091c9-127\">Você também pode experimentar, executando várias operações matemáticas na mesma linha, se quiser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"091c9-128\">À medida que explora C# (ou qualquer linguagem de programação), você cometerá erros ao escrever o código.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"091c9-129\">O **compilador** encontrará esses erros e os reportará a você.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"091c9-130\">Quando a saída contiver mensagens de erro, analise atentamente o código de exemplo e o código na janela interativa para ver o que deve ser corrigido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"091c9-131\">Esse exercício ajudará você a conhecer a estrutura do código C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"091c9-132\">Esta experiência de codificação online está em versão prévia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"091c9-133\">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="091c9-134">Explorar a ordem das operações</span><span class="sxs-lookup"><span data-stu-id="091c9-134">Explore order of operations</span></span>
  durationInMinutes: 7
  content: >
    <span data-ttu-id="091c9-135">A linguagem C# define a precedência de operações matemáticas diferentes com regras consistentes às regras que você aprendeu em matemática.</span><span class="sxs-lookup"><span data-stu-id="091c9-135">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>

    <span data-ttu-id="091c9-136">Multiplicação e divisão têm precedência sobre adição e subtração.</span><span class="sxs-lookup"><span data-stu-id="091c9-136">Multiplication and division take precedence over addition and subtraction.</span></span>

    <span data-ttu-id="091c9-137">Explore executando o seguinte código na janela interativa:</span><span class="sxs-lookup"><span data-stu-id="091c9-137">Explore that by running the following code in the interactive window:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = a + b * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="091c9-138">A saída demonstra que a multiplicação é executada antes da adição.</span><span class="sxs-lookup"><span data-stu-id="091c9-138">The output demonstrates that the multiplication is performed before the addition.</span></span>


    <span data-ttu-id="091c9-139">Você pode forçar uma ordem diferente de operações, adicionando parênteses para delimitar a operação, ou operações, que você quer realizar primeiro:</span><span class="sxs-lookup"><span data-stu-id="091c9-139">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = (a + b) * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="091c9-140">Explore mais, combinando várias operações diferentes.</span><span class="sxs-lookup"><span data-stu-id="091c9-140">Explore more by combining many different operations.</span></span> <span data-ttu-id="091c9-141">Substitua a quarta linha acima por algo parecido com isto:</span><span class="sxs-lookup"><span data-stu-id="091c9-141">Replace the fourth line above with something like this:</span></span>


    ```csharp

    int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;

    ```


    <span data-ttu-id="091c9-142">Talvez você tenha observado um comportamento interessante com relação aos números inteiros.</span><span class="sxs-lookup"><span data-stu-id="091c9-142">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="091c9-143">A divisão de inteiros sempre produz um resultado inteiro, mesmo quando você espera que o resultado inclua uma parte decimal ou fracionária.</span><span class="sxs-lookup"><span data-stu-id="091c9-143">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>


    <span data-ttu-id="091c9-144">Se você ainda não viu esse comportamento, tente o seguinte:</span><span class="sxs-lookup"><span data-stu-id="091c9-144">If you haven't seen this behavior, try the following:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="091c9-145">Clique em **Executar** novamente para ver os resultados.</span><span class="sxs-lookup"><span data-stu-id="091c9-145">Click **Run** again to see the results.</span></span>


    > [!NOTE]

    > <span data-ttu-id="091c9-146">Esta experiência de codificação online está em versão prévia.</span><span class="sxs-lookup"><span data-stu-id="091c9-146">This online coding experience is in preview mode.</span></span> <span data-ttu-id="091c9-147">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="091c9-147">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="091c9-148">Explorar a precisão de inteiros e limites</span><span class="sxs-lookup"><span data-stu-id="091c9-148">Explore integer precision and limits</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="091c9-149">Esse último exemplo mostrou que uma divisão de inteiros trunca o resultado.</span><span class="sxs-lookup"><span data-stu-id="091c9-149">That last sample showed you that integer division truncates the result.</span></span>

    <span data-ttu-id="091c9-150">Você pode obter o **restante** usando o operador **module**, o caractere `%`:</span><span class="sxs-lookup"><span data-stu-id="091c9-150">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    int e = (a + b) % c;

    Console.WriteLine($"quotient: {d}");

    Console.WriteLine($"remainder: {e}");

    ```


    <span data-ttu-id="091c9-151">O tipo de inteiro C# difere do inteiros matemáticos de outra forma: o tipo `int` tem limites mínimo e máximo.</span><span class="sxs-lookup"><span data-stu-id="091c9-151">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="091c9-152">Execute este código na janela interativa para ver esses limites:</span><span class="sxs-lookup"><span data-stu-id="091c9-152">Run this code in the interactive window to see those limits:</span></span>


    ```csharp

    int max = int.MaxValue;

    int min = int.MinValue;

    Console.WriteLine($"The range of integers is {min} to {max}");

    ```


    <span data-ttu-id="091c9-153">Se um cálculo produzir um valor que excede esses limites, você terá uma condição de **estouro negativo** ou **estouro**.</span><span class="sxs-lookup"><span data-stu-id="091c9-153">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="091c9-154">A resposta parece quebrar de um limite para o outro.</span><span class="sxs-lookup"><span data-stu-id="091c9-154">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="091c9-155">Adicione estas duas linhas à janela interativa para ver um exemplo:</span><span class="sxs-lookup"><span data-stu-id="091c9-155">Add these two lines to the interactive window to see an example:</span></span>


    ```csharp

    int what = max + 3;

    Console.WriteLine($"An example of overflow: {what}");

    ```


    <span data-ttu-id="091c9-156">Observe que a resposta é muito próxima do mínimo inteiro (negativo).</span><span class="sxs-lookup"><span data-stu-id="091c9-156">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="091c9-157">É o mesmo que `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="091c9-157">It's the same as `min + 2`.</span></span> <span data-ttu-id="091c9-158">A operação de adição **estourou** os valores permitidos para números inteiros.</span><span class="sxs-lookup"><span data-stu-id="091c9-158">The addition operation **overflowed** the allowed values for integers.</span></span>

    <span data-ttu-id="091c9-159">A resposta é um número negativo muito grande, pois um estouro "envolve" do maior valor de inteiro possível para o menor.</span><span class="sxs-lookup"><span data-stu-id="091c9-159">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>


    <span data-ttu-id="091c9-160">Há outros tipos numéricos com limites e precisão diferentes que você usaria quando o tipo `int` não atendesse às suas necessidades.</span><span class="sxs-lookup"><span data-stu-id="091c9-160">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="091c9-161">Vamos explorá-los na sequência.</span><span class="sxs-lookup"><span data-stu-id="091c9-161">Let's explore those next.</span></span>


    > [!NOTE]

    > <span data-ttu-id="091c9-162">Esta experiência de codificação online está em versão prévia.</span><span class="sxs-lookup"><span data-stu-id="091c9-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="091c9-163">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="091c9-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="091c9-164">Trabalhar com o tipo Double</span><span class="sxs-lookup"><span data-stu-id="091c9-164">Work with the double type</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"091c9-165\">O tipo numérico `double` representa um número de ponto flutuante de precisão dupla.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"091c9-166\">Esses termos podem ser novidade para você.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"091c9-167\">Um número de **ponto flutuante** é útil para representar números não integrais que podem ser muito grandes ou pequenos em magnitude.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"091c9-168\">**Precisão dupla** significa que esses números são armazenados usando uma precisão maior do que a **precisão única**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"091c9-169\">Em computadores modernos, é mais comum usar precisão dupla que números de precisão única.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"091c9-170\">Vamos explorar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-170\">Let's explore.</span></span> <span data-ttu-id=\"091c9-171\">Experimente o seguinte código na janela interativa e veja o resultado:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"091c9-172\">Observe que a resposta inclui a parte decimal do quociente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"091c9-173\">Experimente uma expressão ligeiramente mais complicada com duplos:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"091c9-174\">O intervalo de um valor duplo é muito maior do que valores inteiros.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"091c9-175\">Experimente o seguinte código na janela interativa:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"091c9-176\">Esses valores são impressos em notação científica.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"091c9-177\">O número à esquerda do `E` é o significando.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"091c9-178\">O número à direita é o expoente, como uma potência de 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"091c9-179\">Assim como os números decimais em matemática, os duplos em C# podem ter erros de arredondamento.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"091c9-180\">Experimente esse código:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"091c9-181\">Você sabe que a repetição de `0.3` não é exatamente o mesmo que `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"091c9-182\">***Desafio***</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"091c9-183\">Experimente outros cálculos com números grandes, números pequenos, multiplicação e divisão usando o tipo `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"091c9-184\">Experimente cálculos mais complicados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"091c9-185\">Esta experiência de codificação online está em versão prévia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"091c9-186\">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="091c9-187">Trabalhar com tipos de ponto fixo</span><span class="sxs-lookup"><span data-stu-id="091c9-187">Work with fixed point types</span></span>
  durationInMinutes: 8
  content: "<span data-ttu-id=\"091c9-188\">Você viu os tipos numéricos básicos em C#: inteiros e duplos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"091c9-189\">Ainda há outro tipo : o tipo `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"091c9-190\">O tipo `decimal` tem um intervalo menor, mas precisão maior do que `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"091c9-191\">O termo **ponto fixo** significa que a virgula decimal (ou ponto binário) não muda.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"091c9-192\">Vamos analisar:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"091c9-193\">Observe que o intervalo é menor do que o tipo `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"091c9-194\">Veja a precisão maior com o tipo decimal experimentando o código a seguir:</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"091c9-195\">O sufixo `M` nos números é o modo como você indica que uma constante deve usar o tipo `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"091c9-196\">Observe que o cálculo usando o tipo decimal tem mais dígitos à direita da vírgula decimal.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"091c9-197\">***Desafio***</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"091c9-198\">Agora que você viu os diferentes tipos numéricos, escreva um código que calcula a área de um círculo cujo raio é de 2,50 centímetros.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 centimeters.</span></span> <span data-ttu-id=\"091c9-199\">Lembre-se de que a área de um círculo é o quadrado do raio multiplicado por PI.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"091c9-200\">Uma dica: o .NET contém uma constante para PI, <xref:System.Math.PI?displayProperty=nameWithType>, que você pode usar para esse valor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-200\">One hint: .NET contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"091c9-201\">Esta experiência de codificação online está em versão prévia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"091c9-202\">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n\n<span data-ttu-id=\"091c9-203\">Você deve obter uma resposta entre 19 e 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"091c9-203\">You should get an answer between 19 and 20.</span></span>\n"
- title: <span data-ttu-id="091c9-204">Desafio concluído</span><span class="sxs-lookup"><span data-stu-id="091c9-204">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="091c9-205">Você conseguiu algo semelhante a isto?</span><span class="sxs-lookup"><span data-stu-id="091c9-205">Did you come up with something like this?</span></span>


    ```csharp

    double radius = 2.50;

    double area = Math.PI * radius * radius;

    Console.WriteLine(area);

    ```


    <span data-ttu-id="091c9-206">Experimente outras fórmulas, se quiser.</span><span class="sxs-lookup"><span data-stu-id="091c9-206">Try some other formulas if you'd like.</span></span>


    > [!NOTE]

    > <span data-ttu-id="091c9-207">Esta experiência de codificação online está em versão prévia.</span><span class="sxs-lookup"><span data-stu-id="091c9-207">This online coding experience is in preview mode.</span></span> <span data-ttu-id="091c9-208">Se você encontrar problemas, informe-os [no repositório dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="091c9-208">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="091c9-209">Você concluiu o tutorial interativo "Números em C#".</span><span class="sxs-lookup"><span data-stu-id="091c9-209">You've completed the "Numbers in C#" interactive tutorial.</span></span> <span data-ttu-id="091c9-210">Clique no link **Branches e loops** abaixo para iniciar o próximo tutorial interativo ou visite o [site do .NET](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) para baixar o SDK do .NET Core, criar um projeto no computador e continuar codificando.</span><span class="sxs-lookup"><span data-stu-id="091c9-210">You can click the **Branches and Loops** link below to start the next interactive tutorial, or you can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="091c9-211">A etapa "Continuar aprendendo" leva você de volta a esses tutoriais.</span><span class="sxs-lookup"><span data-stu-id="091c9-211">The "Keep Learning" step brings you back to these tutorials.</span></span>


    <span data-ttu-id="091c9-212">Saiba mais sobre os números em C# nos tópicos a seguir:</span><span class="sxs-lookup"><span data-stu-id="091c9-212">You can learn more about numbers in C# in the following topics:</span></span>


    - [<span data-ttu-id="091c9-213">Tabela de tipos integrais</span><span class="sxs-lookup"><span data-stu-id="091c9-213">Integral Types Table</span></span>](../../language-reference/keywords/integral-types-table.md)

    - [<span data-ttu-id="091c9-214">Tabela de tipos de ponto flutuante</span><span class="sxs-lookup"><span data-stu-id="091c9-214">Floating-Point Types Table</span></span>](../../language-reference/keywords/floating-point-types-table.md)

    - [<span data-ttu-id="091c9-215">Tabela de tipos internos</span><span class="sxs-lookup"><span data-stu-id="091c9-215">Built-In Types Table</span></span>](../../language-reference/keywords/built-in-types-table.md)

    - [<span data-ttu-id="091c9-216">Tabela de conversões numéricas implícitas</span><span class="sxs-lookup"><span data-stu-id="091c9-216">Implicit Numeric Conversions Table</span></span>](../../language-reference/keywords/implicit-numeric-conversions-table.md)

    - [<span data-ttu-id="091c9-217">Tabela de conversões numéricas explícitas</span><span class="sxs-lookup"><span data-stu-id="091c9-217">Explicit Numeric Conversions Table</span></span>](../../language-reference/keywords/explicit-numeric-conversions-table.md)
